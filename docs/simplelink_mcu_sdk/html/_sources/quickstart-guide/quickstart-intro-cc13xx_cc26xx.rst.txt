.. highlight:: text

Introduction to the |SDK|
*************************

The |SDK| delivers components that enable engineers to develop applications on
the Texas Instruments SimpleLink |DEVICE| family of wireless microcontroller
(MCUs). This powerful software toolkit provides a cohesive and consistent
software experience for all SimpleLink |DEVICE| wireless MCU users by packaging
essential software components, such as a Bluetooth\ |reg| Low Energy (BLE)
protocol stack supporting Bluetooth 5, Thread 1.1 networking stack based on
OpenThread (https://github.com/openthread/openthread), TI’s 15.4 Stack,
RF-Proprietary examples, a Zigbee stack as well as the TI-RTOS kernel and TI
Drivers in one easy-to-use software package along with example applications and
exhaustive documentation. In addition, the Dynamic Multi-Protocol Manager (DMM) 
software component enables multiprotocol development on a single SimpleLink 
wireless MCU through time division multiplexing.

The SimpleLink MCU portfolio offers a single development environment that
delivers flexible hardware, software and tool options for customers developing
wired and wireless applications. With 100 percent code reuse across host MCUs,
Wi-Fi\ |trade|, Bluetooth Low Energy, Sub-1GHz devices and more, choose the MCU
or connectivity standard that fits your design. A one-time investment with the
SimpleLink software development kit (SDK) allows you to reuse often, opening the
door to create unlimited applications. For more information, visit
`www.ti.com/simplelink
<http://www.ti.com/simplelink>`_.

.. note:: 
  The following devices and resources are also included in the |SDK|:
  |LITEDEVICE| and |DEVICE1M|

Prerequisites
=============

The user is expected to have the following:

* |LP|
* A computer running a supported operating system listed in the Release Notes
* At least one of the following IDE supported by the |SDK|:

    * CCS
    * IAR for Arm
    * GNU Arm Embedded Toolchain
* FreeRTOS (Optional - Needed for FreeRTOS projects.) The |SDK| does not
  deliver FreeRTOS sources. User is expected to download it from
  |FREERTOS_WEB| if they want to use FreeRTOS with the SDK.


SDK - Download and Installation
===============================

Using the SDK Online
--------------------

    A quick and easy way to start working with the SDK is to use TI Resource
    Explorer on dev.ti.com. This online tool lets you explore the contents of the
    |SDK|. You can build the examples directly using the cloud
    version of Code Composer Studio. If you choose to use the SDK online, there is
    no need to download the SDK to your local computer or install any tools (other
    than the TI Cloud Agent for first time users).


Installing the SDK
------------------

    You can also download the |SDK| from TI Resource Explorer or the
    software product page on TI’s website.


IDE - Download and Installation
===============================

CCS Download and Installation
-----------------------------

This section covers the required settings for a CCS installation. The CCS
toolchain contains many features beyond the scope of this document. More
information and documentation can be found on the `Code Composer Studio`_ tool
page.

Check the |SDK| release notes to see which CCS version to use and any required
workarounds. Object code produced by CCS may differ in size and performance as
compared to IAR produced object code.

1.  Download CCS

    CCS is available here: `Code Composer Studio`_ .

    Refer to the |SDK| release notes for the version that is compatible with
    this SDK.

    You can choose between a single file (offline) installer and on-demand (web)
    installer.

2.  Installation Options

    During the installation, the following options are recommended:

    * We recommend that you use the default installation folder

    .. _fig_default_install_path:

    .. figure:: resources/ccs-install.png
        :align: center

        Default CCS Installation Location

    * Select SimpleLink CC13xx and CC26xx Wireless MCUs is selected. You can select
      additional processor support options as needed.

    .. _fig_processor_support_options:

    .. figure:: resources/ccs-v122-processor-support.png
        :align: center

        Select Processor Support

    To use a debug probe, select TI XDS Debug Probe Support and any other options
    you would like. The |LP| uses TI XDS Debug Probe by default.

    .. _fig_ccs_debugger_options:

    .. figure:: resources/ccs-v11-debugger-options.png
        :align: center

        CCS Debugger Options

    When the installation has completed, make sure that CC13xx/CC26xx Device Support
    is installed by checking for updates under Help -> Check for Updates.

3.  Discovering the SDK in CCS

    Install the SDK in the default location pointed to by the installer -
    c:\\ti and restart CCS. CCS will automatically detect the latest install.

    You can also Install products manually by selecting Window -> Preferences
    -> Code Composer Studio -> Products and clicking Install and navigating
    to the SDK installation location.

    Code Composer Studio automatically discovers the |SDK| if it installed in its
    default installation directory (``c:/ti``). Once discovered by CCS, it defines a
    build environment variable named |CCS_INSTALL_VAR| which is used by all |SDK|
    projects.

    If a project is imported from a path other than what was specified
    during the |SDK| installation, the |CCS_INSTALL_VAR|
    variable must be redefined after the import proceeding at a project-by-project
    basis.

    To redefine this variable:

    #. Open the CCS project's properties (**Project** -> **Properties**)
    #. Navigate to **Resource** -> **Linked Resources** and *edit*
       |CCS_INSTALL_VAR| and have it point to your
       imported root directory location.

       .. _fig-inc-developing-in-ccs-redefine-ccs-linked-resources:
       .. figure:: resources/redefine-ccs-linked-resources.png
            :align: center
            :width: 75%

            Redefining |CCS_INSTALL_VAR|

4. (Optional) Using a Specific TI Arm Compiler

    1.  Verify Arm Compiler Tools version

        If needed, the CCS and Arm compiler versions can be verified by going to into
        Help -> About Code Composer Studio. Under the Installation Details button, you
        can determine the Arm Compiler Tools version. Please ensure this version
        satisfies the version requirements as stated in the release notes.

        If an update is required, refer to Installing a Specific TI Arm Compiler for the
        procedure to install the required TI Arm Compiler version.

    2.  Install a Specific TI Arm Compiler, refer to the following steps and
        :numref:`fig-verify-ccs-compiler`

        #. **Help** -> **Install New Software**
        #. Under the **Work with:** drop-down list, select **Code Generation Tools
           Update**
        #. Uncheck **Show only the latest versions of available software**
        #. Expand **TI Compiler Update**.
        #. Select the desired Arm Compiler Tools version as stated in the release notes.
        #. Press **Next** to complete the installation. You may have to restart CCS
           afterwards.

    .. _fig-verify-ccs-compiler:
    .. figure:: resources/ti-arm-compiler-version.jpg
        :align: center
        :width: 400px

        TI Arm Compiler Version in Code Composer Studio


IAR Download and Installation
-----------------------------

This section covers the required settings for a IAR installation.
The IAR toolchain contains many features beyond the scope of this document.
More information and documentation can be found at `IAR.com <www.iar.com>`_.

Not all components in the |SDK| support IAR projects. Check the |SDK| and
component release notes to check IAR support, which IAR version to use and any
required workarounds. Object code produced by IAR may differ in size and
performance as compared to CCS produced object code.

1. Download IAR
   Download and install IAR Embedded Workbench for Arm. Please see the SDK
   release notes for what version of IAR the SDK supports. You can get IAR for
   Arm here: https://www.iar.com/iar-embedded-workbench/partners/texas-instruments/ti-wireless/

    To get IAR, choose one of the following methods:

        - Download the IAR Embedded Workbench 30-Day Evaluation Edition –
          This version of IAR is free, has full functionality, and
          includes all of the standard features. The size-limited
          Kickstart evaluation option is not compatible with this SDK.

        - Purchase the full-featured version of IAR Embedded Workbench – For
          complete BLE application development using the |DEVICE|, TI
          recommends purchasing the complete version of IAR without any
          restrictions. You can find the information on purchasing the complete
          version of `IAR <https://www.iar.com/buy>`_.

    .. attention::
        The version required is stated in the release notes.
        Opening IAR project files with a previous version of IAR may cause
        project file corruption.

2.  Installation Options
    Begin Installation by selecting Install IAR Embedded Workbench\ |reg| for
    Arm.

    .. _fig-iar-install:
    .. figure:: resources/iar-install.jpg
       :align: center

       IAR Installer

    Click through the installation confirm windows and license agreement. We
    recommend installing to the default path

    .. _fig-iar-install-dir:
    .. figure:: resources/iar_install_dir.png
       :align: center

       Default IAR Installation Location

    Make sure to select TI XDS as one of the debug probe drivers. You may also
    select other drivers. The driver will be installed towards the end of the
    installation of IAR.

   .. _fig_iar_debugger_options:

   .. figure:: resources/iar_install_debug_drivers.png
      :align: center

      IAR Debugger Options

3. Show Build Messages

   TI recommends showing all the build output messages for full verbosity
   during building. To do this, after importing a workspace, right-click in the
   Debug log window and select **All**.
   (see :numref:`fig-show-all-build-messages`)

   .. _fig-show-all-build-messages:
   .. figure:: resources/iar-show-build-messages.png
       :align: center

       Show All Build Messages in IAR
