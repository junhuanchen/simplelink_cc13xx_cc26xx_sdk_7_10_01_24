.. _sec-flash-vector-table:

Flash Vector Table
==================

This table contains the first 16 critical interrupt vectors required for the
bootup process. 

.. ifconfig:: device in ['cc13x0', 'cc2640']

  The location of this table is controlled by
  `m3Hwi.resetVectorAddress` within the |TIRTOS| config file (`*.cfg`), it defaults
  to address 0x00000000. At bootup time, the |TIRTOS| kernel will run a first
  function to initialize the :term:`Hwi` module.

  For more information about the vector table format, please refer to
  `Cortex-M3 Vector Table
  <http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dui0552a/BABIFJFG.html>`__.

.. ifconfig:: device == 'cc13xx_cc26xx'

  The location of this table is set by default via SysConfig, it defaults
  to address 0x00000000. At bootup time, the |TIRTOS| kernel will run a first
  function to initialize the :term:`Hwi` module.::

  #define Hwi_resetVectorAddress_D 0x0

  For more information about the vector table format, please refer to
  `Cortex-M4 Vector Table
  <http://infocenter.arm.com/help/topic/com.arm.doc.dui0553b/DUI0553.pdf>`__.

  For |DEVICE1M| devices, please refer to `Cortex-M33 Vector Table 
  <https://developer.arm.com/documentation/100235/0004/the-cortex-m33-processor/exception-model/vector-table>`__.

.. ifconfig:: device == 'cc23xx'

    For more information about the vector table format, please refer to
    `Cortex-M0 Vector Table
    <https://developer.arm.com/documentation/dui0497/a/the-cortex-m0-processor/exception-model/vector-table>`__.


For more information on the kernel boot process and first functions, please see
the |TI-RTOS_UG|.

.. _ccfg:

Customer Configuration (CCFG) Table
===================================

The CCFG is placed at the end of the last flash page and lets
customer configure various chip and system parameters in the Customer
Configuration (CCFG) table. The CCFG table is defined in ccfg.c in the provided examples. 
Parameters can be determined in the SysConfig (\*.syscfg) file through
the *TI Devices* |rarr| *Device Configuration* options.
The last (sizeof(ccfg_t)) bytes of the CCFG sector are reserved by the system for the
CCFG table. By default, the linker allocates the unused flash of the last flash
page to the application image for code and data use.

See the |TRM| for details on CCFG fields and related configuration options,
including how to set the CCFG to disable access to internal flash memory
contents.

.. note::

  The CCFG cannot be relocated, and must reside at the end of the last page of
  flash. Consult the |TRM| for more information.

.. note::

  If SET_CCFG_ERASE_CONF_CHIP_ERASE_DIS_N is set to 0 it's not possible to do mass erase.

