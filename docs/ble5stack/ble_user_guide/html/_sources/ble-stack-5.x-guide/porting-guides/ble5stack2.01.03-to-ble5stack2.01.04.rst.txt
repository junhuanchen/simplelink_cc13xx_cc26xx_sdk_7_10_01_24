BLE5-Stack 2.01.03 (SDK 4.20) to BLE5-Stack 2.01.04 (SDK 4.30)
==============================================================

This section will describe a way to migrate a project from BLE5-Stack 2.01.03 to
a BLE5-Stack 2.01.04 project.

The best way to migrate is to open a new project from the new SDK and transfer 
your changes and application code over to the new example. 

Porting Simple Peripheral
-------------------------

For this migration guide, Simple Peripheral from BLE5-Stack 2.01.03 will be 
ported over to BLE5-Stack 2.01.04. The recommended approach is to start with a
BLE5-Stack 2.01.04 project that contains the same base functionality as the
porting target project and merge in any custom functionality.

#. Choose a BLE5-Stack 2.01.04 example project that contains your target
   project's base functionality.

#. Transfer all modified application files from BLE5-Stack 2.01.03 into the
   BLE5-Stack 2.01.04 example project.

   In this example, the following files from BLE5-Stack 2.01.03 were moved into
   Simple Peripheral BLE5-Stack 2.01.04 example:

      - ``simple_peripheral.c``
      - ``simple_peripheral.h``

#. Move any profiles and services that the application is using to the BLE5-Stack
   2.01.04 project.

#. Transfer the SysConfig settings either visually through the GUI or open both 
   the old and the new project .syscfg files and copy-paste the desired settings.

#. If necessary, update the project to use the newer TI-RTOS drivers that are
   supplied with the |SDK|.

#. Refer to the Core SDK release notes for additional information and the TI-RTOS
   examples included with |SDK|.

   For additional information on how BLE5-Stack 2.01.04 uses TI-RTOS see
   :ref:`sec-tirtos-overview`.

   For any utilized TI Drivers, review |TI-RTOS_UG_BLE_MG_LOC| and |TI_DRIVERS_API_BLE_MG_LOC|.


A Few Noteworthy Changes from BLE5-Stack 2.01.03 to BLE5-Stack 2.01.04
-------------------------------------------------------------------------

You can follow the guide above without addressing these updates, they are listed
for your information only. All fine grained details might not be mentioned, 
please refer to the specific example you need to port and to a compare between 
the old and new project files. Please refer to the BLE5-Stack Release Notes for 
all the details.


* An option in SysConfig is now available to enable or disable the sending of
  the connection parameters update after connection establishment. When
  enabled, SysConfig defines the symbol DEFAULT_SEND_PARAM_UPDATE_REQ in the
  file ti_ble_config.h.

* The BLE stack library files (OneLib.a and StackWrapper.a) required by
  the linker are not directly provided by the .projectspec (CCS) or the
  .ipcf (IAR). From now on, the file ti_utils_build_linker.cmd.genlibs,
  generated by SysConfig, includes the libraries required to link the 
  application based on the configurations chosen.

* SysConfig provides new possibilities to enable instrumentation and debug
  features.
