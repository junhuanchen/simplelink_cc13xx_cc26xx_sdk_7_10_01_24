.. |OLD_STACK_VER| replace:: BLE5-Stack 2.02.06
.. |NEW_STACK_VER| replace:: BLE5-Stack 2.02.07

|OLD_STACK_VER| (SDK 6.20) to |NEW_STACK_VER| (SDK 6.30)
========================================================

This section will describe a way to migrate a project from |OLD_STACK_VER| to
a |NEW_STACK_VER| project.

The best way to migrate is to open a new project from the new SDK and transfer 
your changes and application code over to the new example. 

Porting Simple Peripheral
-------------------------

For this migration guide, Simple Peripheral from |OLD_STACK_VER| will be 
ported over to |NEW_STACK_VER|. The recommended approach is to start with a
|NEW_STACK_VER| project that contains the same base functionality as the
porting target project and merge in any custom functionality.

#. Choose a |NEW_STACK_VER| example project that contains your target
   project's base functionality.

#. Transfer all modified application files from |OLD_STACK_VER| into the
   |NEW_STACK_VER| example project.

   In this example, the following files from |OLD_STACK_VER| were moved into
   Simple Peripheral |NEW_STACK_VER| example:

      - ``simple_peripheral.c``
      - ``simple_peripheral.h``

#. Move any profiles and services that the application is using to the 
   |NEW_STACK_VER| project.

#. Transfer the SysConfig settings either visually through the GUI or open both 
   the old and the new project ``.syscfg`` files and copy-paste the desired 
   settings.

#. If necessary, update the project to use the newer TI-RTOS drivers that are
   supplied with the |SDK|. Additional details are provided 
   in :ref:`noteworthy-ble-migration-sdk-6-30`.

#. Refer to the Core SDK release notes for additional information and the 
   TI-RTOS examples included with |SDK|.

   For additional information on how |NEW_STACK_VER| uses TI-RTOS see
   :ref:`sec-tirtos-overview`.

   For any utilized TI Drivers, review |TI-RTOS_UG_BLE_MG_LOC| and |TI_DRIVERS_API_BLE_MG_LOC|.

Porting Simple Central
----------------------

This section of the migration guide will focus on porting Simple Central 
from |OLD_STACK_VER| to the |NEW_STACK_VER|. The recommended approach is 
to start with a |NEW_STACK_VER| project that contains the same base 
functionality as the porting target project and merge in any custom 
functionality.

#. Choose a |NEW_STACK_VER| example project that contains your target
   project's base functionality.

#. Transfer all modified application files from |OLD_STACK_VER| into the
   |NEW_STACK_VER| example project.

   In this example, the following files from |OLD_STACK_VER| were moved into
   Simple Central |NEW_STACK_VER| example:

      - ``simple_central.c``
      - ``simple_central.h``

#. Modify ``main.c`` in the |NEW_STACK_VER| example if additional tasks were
   added in the |OLD_STACK_VER| project.

#. Move any profiles and services that the application is using to the
   |NEW_STACK_VER|.

#. Transfer the Sysconfig settings either visually through the GUI or open both 
   the old and the new project ``.syscfg`` files and copy-paste the desired settings.

#. If necessary, update the project to use the newer TI-RTOS drivers that are
   supplied with the |SDK|. Additional details are provided 
   in :ref:`noteworthy-ble-migration-sdk-6-30`.

#. Refer to the Core SDK release notes for additional information and the TI-RTOS
   examples included with |SDK|.

   For additional information on how |NEW_STACK_VER| uses TI-RTOS see
   :ref:`sec-tirtos-overview`.

   For any utilized TI Drivers, review |TI-RTOS_UG_BLE_MG_LOC| and |TI_DRIVERS_API_BLE_MG_LOC|.


.. _noteworthy-ble-migration-sdk-6-30:

A Few Noteworthy Changes from |OLD_STACK_VER| to |NEW_STACK_VER|
----------------------------------------------------------------

You can follow the guide above without addressing these updates, they are listed
for your information only. All fine grained details might not be mentioned, 
please refer to the specific example you need to port and do a compare between 
the old and new project files. Please refer to the |STACK| Release Notes for 
all the details.

.. note::   
   The examples available in SDK 6.20 and newer

   - Rely either on TI-RTOS7 or FreeRTOS as RTOS
   - Leverage GPIO++ and UART2 drivers for GPIO and UART applications
   - Use TI-CLANG or IAR as compiler
  
   This guide assumes the previously mentioned components are used. If this is not the case for your projects,
   please refer to :ref:`tirtos_to_tirtos7-porting-guide`, :ref:`sec-cc13xx-cc26xx-gpio++-porting-guide`, :ref:`uart_to_uart2-porting-guide`
   and `TI ARM Clang Migration Guide <https://software-dl.ti.com/codegen/docs/tiarmclang/rel1_0_0_sts/tiarmclang_ug/tiarmclang-portfolio/migration_guide/index.html>`_.