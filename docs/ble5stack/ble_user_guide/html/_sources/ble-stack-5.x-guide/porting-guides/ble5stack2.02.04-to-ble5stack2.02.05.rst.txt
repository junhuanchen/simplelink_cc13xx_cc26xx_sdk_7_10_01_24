.. |OLD_STACK_VER| replace:: BLE5-Stack 2.02.04
.. |NEW_STACK_VER| replace:: BLE5-Stack 2.02.05

|OLD_STACK_VER| (SDK 5.40) to |NEW_STACK_VER| (SDK 6.10)
========================================================

This section will describe a way to migrate a project from |OLD_STACK_VER| to
a |NEW_STACK_VER| project.

The best way to migrate is to open a new project from the new SDK and transfer 
your changes and application code over to the new example. 

Porting Simple Peripheral
-------------------------

For this migration guide, Simple Peripheral from |OLD_STACK_VER| will be 
ported over to |NEW_STACK_VER|. The recommended approach is to start with a
|NEW_STACK_VER| project that contains the same base functionality as the
porting target project and merge in any custom functionality.

#. Choose a |NEW_STACK_VER| example project that contains your target
   project's base functionality.

#. Transfer all modified application files from |OLD_STACK_VER| into the
   |NEW_STACK_VER| example project.

   In this example, the following files from |OLD_STACK_VER| were moved into
   Simple Peripheral |NEW_STACK_VER| example:

      - ``simple_peripheral.c``
      - ``simple_peripheral.h``

#. Move any profiles and services that the application is using to the 
   |NEW_STACK_VER| project.

#. Transfer the SysConfig settings either visually through the GUI or open both 
   the old and the new project ``.syscfg`` files and copy-paste the desired 
   settings. Additional details are provided in :ref:`noteworthy-ble-migration-sdk-6-10`.

#. Modify the calls to :ble_api:`Gap_RegisterConnEventCb` as detailed in
   :ref:`ble-conn-event-cb-sdk-6-10`.

#. If necessary, update the project to use the newer TI-RTOS drivers that are
   supplied with the |SDK|.

#. Refer to the Core SDK release notes for additional information and the 
   TI-RTOS examples included with |SDK|.

   For additional information on how |NEW_STACK_VER| uses TI-RTOS see
   :ref:`sec-tirtos-overview`.

   For any utilized TI Drivers, review |TI-RTOS_UG_BLE_MG_LOC| and |TI_DRIVERS_API_BLE_MG_LOC|.

Porting Simple Central
----------------------

This section of the migration guide will focus on porting Simple Central 
from |OLD_STACK_VER| to the |NEW_STACK_VER|. The recommended approach is 
to start with a |NEW_STACK_VER| project that contains the same base 
functionality as the porting target project and merge in any custom 
functionality.

#. Choose a |NEW_STACK_VER| example project that contains your target
   project's base functionality.

#. Transfer all modified application files from |OLD_STACK_VER| into the
   |NEW_STACK_VER| example project.

   In this example, the following files from |OLD_STACK_VER| were moved into
   Simple Central |NEW_STACK_VER| example:

      - ``simple_central.c``
      - ``simple_central.h``

#. Modify ``main.c`` in the |NEW_STACK_VER| example if additional tasks were
   added in the |OLD_STACK_VER| project.

#. Move any profiles and services that the application is using to the
   |NEW_STACK_VER|.

#. Transfer the Sysconfig settings either visually through the GUI or open both 
   the old and the new project ``.syscfg`` files and copy-paste the desired settings.
   Additional details are provided in :ref:`noteworthy-ble-migration-sdk-6-10`.

#. If used, modify the calls to :ble_api:`Gap_RegisterConnEventCb` as detailed in
   :ref:`ble-conn-event-cb-sdk-6-10`.

#. If necessary, update the project to use the newer TI-RTOS drivers that are
   supplied with the |SDK|.

#. Refer to the Core SDK release notes for additional information and the TI-RTOS
   examples included with |SDK|.

   For additional information on how |NEW_STACK_VER| uses TI-RTOS see
   :ref:`sec-tirtos-overview`.

   For any utilized TI Drivers, review |TI-RTOS_UG_BLE_MG_LOC| and |TI_DRIVERS_API_BLE_MG_LOC|.

.. _ble-conn-event-cb-sdk-6-10:

Connection Event Callback Update in |NEW_STACK_VER|
---------------------------------------------------

.. attention:: 

  This update leads to an API compatibility break when migrating from
  |OLD_STACK_VER| to |NEW_STACK_VER|.

|NEW_STACK_VER| implements improved connection event callbacks providing
more information about the connection event. In depth description of this
feature is provided in :ref:`connection_event_callback` section.

Connection event callback registration and unregistration takes one more
argument(`GAP_CB_Event_e`) in |NEW_STACK_VER|.

.. code-block:: c
   :caption: New Gap_RegisterConnEventCb() adds the event parameter
   :emphasize-lines: 3

      bStatus_t Gap_RegisterConnEventCb(pfnGapConnEvtCB_t cb,
                                        GAP_CB_Action_t action,
                                        GAP_CB_Event_e event,
                                        uint16_t connHandle);

Calls to :ble_api:`Gap_RegisterConnEventCb` should be modified as shown below.

.. code-block:: c
    :caption: Connection event callback registering
    :emphasize-lines: 4-5

    // Old function call
    // Gap_RegisterConnEventCb(SimplePeripheral_connEvtCB, GAP_CB_REGISTER, connHandle);

    // New function call
    Gap_RegisterConnEventCb(SimplePeripheral_connEvtCB, GAP_CB_REGISTER, GAP_CB_CONN_EVENT_ALL, connHandle);


.. code-block:: c
    :caption: Connection event callback unregistering
    :emphasize-lines: 4-5

    // Old function call
    // Gap_RegisterConnEventCb(NULL, GAP_CB_UNREGISTER, connHandle);

    // New function call
    Gap_RegisterConnEventCb(NULL, GAP_CB_UNREGISTER, GAP_CB_CONN_EVENT_ALL, connHandle);



.. _noteworthy-ble-migration-sdk-6-10:

A Few Noteworthy Changes from |OLD_STACK_VER| to |NEW_STACK_VER|
----------------------------------------------------------------

You can follow the guide above without addressing these updates, they are listed
for your information only. All fine grained details might not be mentioned, 
please refer to the specific example you need to port and do a compare between 
the old and new project files. Please refer to the |STACK| Release Notes for 
all the details.

* Examples for the new system-in-package module with integrated antenna 
  LP_CC2651R3SIPA have been added. The device and evaluation modules will
  be available soon on `ti.com <https://www.ti.com/wireless>`_

* The examples for LP_CC2651R3SIPA, LP_CC2652RSIP and LP_CC2652PSIP have
  been configured to use TIRTOS7. TIRTOS7 is not yet supported by the
  projects provided for the other devices.

* The content of the ``.syscfg`` file for most of the projects* has been updated 
  in prevision of the migration to TIRTOS7. As long as TIRTOS7 is not used,
  these changes do NOT affect the content of the files generated by SysConfig.
  and can be ignored.

* The path of the ``.syscfg`` file has been modified for most of the projects*.
  The ``.syscfg`` file is now stored in the folder <EXAMPLE>\\<RTOS> (it was
  previously stored directly in the <EXAMPLE> folder). The affected projects
  have been modified to automatically import the proper ``.syscfg`` file.

\* *All the projects in the |SDK| are affected by these changes, except
the RTLS examples, the simple_broadcaster, the multi_sensor and the connection
monitor projects*.