<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="struct_e_d_d_s_a___operation_sign" kind="struct" language="C++" prot="public">
    <compoundname>EDDSA_OperationSign</compoundname>
    <includes refid="_e_d_d_s_a_8h" local="no">EDDSA.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_e_d_d_s_a___operation_sign_1a010d0b79b8620b69f1453efe9d059852" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_e_c_c_params___curve_params" kindref="compound">ECCParams_CurveParams</ref> *</type>
        <definition>const ECCParams_CurveParams* EDDSA_OperationSign::curve</definition>
        <argsstring></argsstring>
        <name>curve</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to the elliptic curve parameters </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/EDDSA.h" line="580" column="1" bodyfile="source/ti/drivers/EDDSA.h" bodystart="580" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_d_d_s_a___operation_sign_1a7ea36ad4a7eb096d7dac66949df3d378" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
        <definition>const CryptoKey* EDDSA_OperationSign::myPrivateKey</definition>
        <argsstring></argsstring>
        <name>myPrivateKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to the randomly generated private key &quot;k&quot; in little endian. Must be 32 bytes for Ed25519. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/EDDSA.h" line="583" column="1" bodyfile="source/ti/drivers/EDDSA.h" bodystart="583" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_d_d_s_a___operation_sign_1a40c50f18bd05d0398a73adb4435c5555" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
        <definition>const CryptoKey* EDDSA_OperationSign::myPublicKey</definition>
        <argsstring></argsstring>
        <name>myPublicKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer public EdDSA key A = s*B in compressed public key format. Must be 32 bytes for Ed25519. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/EDDSA.h" line="588" column="1" bodyfile="source/ti/drivers/EDDSA.h" bodystart="588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_d_d_s_a___operation_sign_1a83a4e1860629e7c98126da108c8f59e9" prot="public" static="no" mutable="no">
        <type>const uint8_t *</type>
        <definition>const uint8_t* EDDSA_OperationSign::preHashedMessage</definition>
        <argsstring></argsstring>
        <name>preHashedMessage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to the (prehashed) message in little endian. In the PureEdDSA scheme, the prehash function is the identity, PH(M) = M. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/EDDSA.h" line="593" column="1" bodyfile="source/ti/drivers/EDDSA.h" bodystart="593" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_d_d_s_a___operation_sign_1a2e6990758fe5642ec02c131731bb5191" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t EDDSA_OperationSign::preHashedMessageLength</definition>
        <argsstring></argsstring>
        <name>preHashedMessageLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Length of the message buffer in bytes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/EDDSA.h" line="598" column="1" bodyfile="source/ti/drivers/EDDSA.h" bodystart="598" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_d_d_s_a___operation_sign_1a8f20ac39ba343a496e00b852bdd42886" prot="public" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* EDDSA_OperationSign::R</definition>
        <argsstring></argsstring>
        <name>R</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Signature component R = r*B in little endian. Must be 32 bytes for Ed25519. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/EDDSA.h" line="601" column="1" bodyfile="source/ti/drivers/EDDSA.h" bodystart="601" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_d_d_s_a___operation_sign_1a9128253e99c933c8a432006f5902447f" prot="public" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* EDDSA_OperationSign::S</definition>
        <argsstring></argsstring>
        <name>S</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Signature component S = r + x*s mod n in little endian. Must be 32 bytes for Ed25519. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/EDDSA.h" line="606" column="1" bodyfile="source/ti/drivers/EDDSA.h" bodystart="606" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Struct containing the parameters required for generating an EdDSA digital signature. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="971">
        <label>CryptoKey</label>
        <link refid="struct_crypto_key"/>
        <childnode refid="972" relation="usage">
          <edgelabel>plaintext</edgelabel>
        </childnode>
        <childnode refid="973" relation="usage">
          <edgelabel>keyStore</edgelabel>
        </childnode>
      </node>
      <node id="969">
        <label>EDDSA_OperationSign</label>
        <link refid="struct_e_d_d_s_a___operation_sign"/>
        <childnode refid="970" relation="usage">
          <edgelabel>curve</edgelabel>
        </childnode>
        <childnode refid="971" relation="usage">
          <edgelabel>myPrivateKey</edgelabel>
          <edgelabel>myPublicKey</edgelabel>
        </childnode>
      </node>
      <node id="970">
        <label>ECCParams_CurveParams</label>
        <link refid="struct_e_c_c_params___curve_params"/>
      </node>
      <node id="972">
        <label>CryptoKey_Plaintext</label>
        <link refid="struct_crypto_key___plaintext"/>
      </node>
      <node id="973">
        <label>CryptoKey_KeyStore</label>
        <link refid="struct_crypto_key___key_store"/>
      </node>
    </collaborationgraph>
    <location file="source/ti/drivers/EDDSA.h" line="579" column="1" bodyfile="source/ti/drivers/EDDSA.h" bodystart="578" bodyend="611"/>
    <listofallmembers>
      <member refid="struct_e_d_d_s_a___operation_sign_1a010d0b79b8620b69f1453efe9d059852" prot="public" virt="non-virtual"><scope>EDDSA_OperationSign</scope><name>curve</name></member>
      <member refid="struct_e_d_d_s_a___operation_sign_1a7ea36ad4a7eb096d7dac66949df3d378" prot="public" virt="non-virtual"><scope>EDDSA_OperationSign</scope><name>myPrivateKey</name></member>
      <member refid="struct_e_d_d_s_a___operation_sign_1a40c50f18bd05d0398a73adb4435c5555" prot="public" virt="non-virtual"><scope>EDDSA_OperationSign</scope><name>myPublicKey</name></member>
      <member refid="struct_e_d_d_s_a___operation_sign_1a83a4e1860629e7c98126da108c8f59e9" prot="public" virt="non-virtual"><scope>EDDSA_OperationSign</scope><name>preHashedMessage</name></member>
      <member refid="struct_e_d_d_s_a___operation_sign_1a2e6990758fe5642ec02c131731bb5191" prot="public" virt="non-virtual"><scope>EDDSA_OperationSign</scope><name>preHashedMessageLength</name></member>
      <member refid="struct_e_d_d_s_a___operation_sign_1a8f20ac39ba343a496e00b852bdd42886" prot="public" virt="non-virtual"><scope>EDDSA_OperationSign</scope><name>R</name></member>
      <member refid="struct_e_d_d_s_a___operation_sign_1a9128253e99c933c8a432006f5902447f" prot="public" virt="non-virtual"><scope>EDDSA_OperationSign</scope><name>S</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
