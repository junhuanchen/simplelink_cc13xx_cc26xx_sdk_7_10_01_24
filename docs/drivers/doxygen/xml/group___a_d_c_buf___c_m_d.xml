<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="group___a_d_c_buf___c_m_d" kind="group">
    <compoundname>ADCBuf_CMD</compoundname>
    <title>Command Codes</title>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___a_d_c_buf___c_m_d_1gad718c3bba0f5e4319c9b09e7bf5dc3ba" prot="public" static="no">
        <name>ADCBufCC26X2_CMD_ACQUIRE_ADC_SEMAPHORE</name>
        <initializer><ref refid="group___a_d_c_buf___c_o_n_t_r_o_l_1ga6d889e191027535ad318be0b9c3765d1" kindref="member">ADCBuf_CMD_RESERVED</ref> + 1</initializer>
        <briefdescription>
<para>This control function acquires the semaphore that arbitrates access to the ADC between the CM3 and the sensor controller. </para>        </briefdescription>
        <detaileddescription>
<para>This function pre-acquires the ADC semaphore before <ref refid="_a_d_c_buf_8h_1a762253a94875258c5a71b591f03f9d97" kindref="member">ADCBuf_convert()</ref> is called by the application. Normally, the ADC driver acquires the ADC semaphore when calling ADCBufCC26X2_convert(). The driver may need to wait for the sensor controller to release the semaphore in order to access the ADC hardware module. Consequently, the time at which the conversion is actually made is normally non-deterministic. Pre-acquiring the semaphore makes the <ref refid="_a_d_c_buf_8h_1a762253a94875258c5a71b591f03f9d97" kindref="member">ADCBuf_convert()</ref> call deterministic.</para><para><simplesect kind="note"><para>This function returns an error if the handle is not open or a transfer is in progress </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="342" column="9" bodyfile="source/ti/drivers/adcbuf/ADCBufCC26X2.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c_buf___c_m_d_1ga297e57ceef7d21efad09a4c9f8cc5e9a" prot="public" static="no">
        <name>ADCBufCC26X2_CMD_KEEP_ADC_SEMAPHORE</name>
        <initializer><ref refid="group___a_d_c_buf___c_o_n_t_r_o_l_1ga6d889e191027535ad318be0b9c3765d1" kindref="member">ADCBuf_CMD_RESERVED</ref> + 2</initializer>
        <briefdescription>
<para>This function makes the ADC driver keep the ADC semaphore until released. </para>        </briefdescription>
        <detaileddescription>
<para>Calling this function will make the ADC driver keep the ADC semaphore until it is released by the application by calling the control function ADCBufCC26X2_CMD_RELEASE_ADC_SEMAPHORE. This enables multiple deterministic conversions to be made. Usually, the driver will release the semaphore after the conversion finishes.</para><para><simplesect kind="warning"><para>The sensor controller can no longer access the ADC until the semaphore is released by the application manually.</para></simplesect>
<simplesect kind="see"><para><ref refid="group___a_d_c_buf___c_m_d_1gadd5ecbab7264c2cd7b29d9d8e5736387" kindref="member">ADCBufCC26X2_CMD_KEEP_ADC_SEMAPHORE_DISABLE</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="358" column="9" bodyfile="source/ti/drivers/adcbuf/ADCBufCC26X2.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c_buf___c_m_d_1gadd5ecbab7264c2cd7b29d9d8e5736387" prot="public" static="no">
        <name>ADCBufCC26X2_CMD_KEEP_ADC_SEMAPHORE_DISABLE</name>
        <initializer><ref refid="group___a_d_c_buf___c_o_n_t_r_o_l_1ga6d889e191027535ad318be0b9c3765d1" kindref="member">ADCBuf_CMD_RESERVED</ref> + 3</initializer>
        <briefdescription>
<para>This function makes the ADC driver no longer keep the ADC semaphore until released. </para>        </briefdescription>
        <detaileddescription>
<para>This function effectively reverses a call to ADCBufCC26X2_CMD_KEEP_ADC_SEMAPHORE_DISABLE.</para><para><simplesect kind="see"><para><ref refid="group___a_d_c_buf___c_m_d_1ga297e57ceef7d21efad09a4c9f8cc5e9a" kindref="member">ADCBufCC26X2_CMD_KEEP_ADC_SEMAPHORE</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="368" column="9" bodyfile="source/ti/drivers/adcbuf/ADCBufCC26X2.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c_buf___c_m_d_1ga760d6e0d9c8d79bd7fadbd1e72204ce8" prot="public" static="no">
        <name>ADCBufCC26X2_CMD_RELEASE_ADC_SEMAPHORE</name>
        <initializer><ref refid="group___a_d_c_buf___c_o_n_t_r_o_l_1ga6d889e191027535ad318be0b9c3765d1" kindref="member">ADCBuf_CMD_RESERVED</ref> + 4</initializer>
        <briefdescription>
<para>This function releases the ADC semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function returns an error if the handle is not open or a transfer is in progress </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/adcbuf/ADCBufCC26X2.h" line="376" column="9" bodyfile="source/ti/drivers/adcbuf/ADCBufCC26X2.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c_buf___c_m_d_1ga0a536e47b039d0f506a4245079af247e" prot="public" static="no">
        <name>ADCBufCC26XX_CMD_ACQUIRE_ADC_SEMAPHORE</name>
        <initializer><ref refid="group___a_d_c_buf___c_o_n_t_r_o_l_1ga6d889e191027535ad318be0b9c3765d1" kindref="member">ADCBuf_CMD_RESERVED</ref> + 1</initializer>
        <briefdescription>
<para>This control function acquires the semaphore that arbitrates access to the ADC between the CM3 and the sensor controller. </para>        </briefdescription>
        <detaileddescription>
<para>This function pre-acquires the ADC semaphore before <ref refid="_a_d_c_buf_8h_1a762253a94875258c5a71b591f03f9d97" kindref="member">ADCBuf_convert()</ref> is called by the application. Normally, the ADC driver acquires the ADC semaphore when calling ADCBufCC26XX_convert(). The driver may need to wait for the sensor controller to release the semaphore in order to access the ADC hardware module. Consequently, the time at which the conversion is actually made is normally non-deterministic. Pre-acquiring the semaphore makes the <ref refid="_a_d_c_buf_8h_1a762253a94875258c5a71b591f03f9d97" kindref="member">ADCBuf_convert()</ref> call deterministic.</para><para><simplesect kind="note"><para>This function returns an error if the handle is not open or a transfer is in progress </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/adcbuf/ADCBufCC26XX.h" line="350" column="9" bodyfile="source/ti/drivers/adcbuf/ADCBufCC26XX.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c_buf___c_m_d_1ga830dac4199ded43c278e48bb1fe9725e" prot="public" static="no">
        <name>ADCBufCC26XX_CMD_KEEP_ADC_SEMAPHORE</name>
        <initializer><ref refid="group___a_d_c_buf___c_o_n_t_r_o_l_1ga6d889e191027535ad318be0b9c3765d1" kindref="member">ADCBuf_CMD_RESERVED</ref> + 2</initializer>
        <briefdescription>
<para>This function makes the ADC driver keep the ADC semaphore until released. </para>        </briefdescription>
        <detaileddescription>
<para>Calling this function will make the ADC driver keep the ADC semaphore until it is released by the application by calling the control function ADCBufCC26XX_CMD_RELEASE_ADC_SEMAPHORE. This enables multiple deterministic conversions to be made. Usually, the driver will release the semaphore after the conversion finishes.</para><para><simplesect kind="warning"><para>The sensor controller can no longer access the ADC until the semaphore is released by the application manually.</para></simplesect>
<simplesect kind="see"><para><ref refid="group___a_d_c_buf___c_m_d_1ga23015764922f21c49518aa1050d70c0e" kindref="member">ADCBufCC26XX_CMD_KEEP_ADC_SEMAPHORE_DISABLE</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/adcbuf/ADCBufCC26XX.h" line="367" column="9" bodyfile="source/ti/drivers/adcbuf/ADCBufCC26XX.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c_buf___c_m_d_1ga23015764922f21c49518aa1050d70c0e" prot="public" static="no">
        <name>ADCBufCC26XX_CMD_KEEP_ADC_SEMAPHORE_DISABLE</name>
        <initializer><ref refid="group___a_d_c_buf___c_o_n_t_r_o_l_1ga6d889e191027535ad318be0b9c3765d1" kindref="member">ADCBuf_CMD_RESERVED</ref> + 3</initializer>
        <briefdescription>
<para>This function makes the ADC driver no longer keep the ADC semaphore until released. </para>        </briefdescription>
        <detaileddescription>
<para>This function effectively reverses a call to ADCBufCC26XX_CMD_KEEP_ADC_SEMAPHORE_DISABLE.</para><para><simplesect kind="see"><para><ref refid="group___a_d_c_buf___c_m_d_1ga830dac4199ded43c278e48bb1fe9725e" kindref="member">ADCBufCC26XX_CMD_KEEP_ADC_SEMAPHORE</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/adcbuf/ADCBufCC26XX.h" line="377" column="9" bodyfile="source/ti/drivers/adcbuf/ADCBufCC26XX.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_c_buf___c_m_d_1gaaacc1d31de8c38e71c351bc1fcd54340" prot="public" static="no">
        <name>ADCBufCC26XX_CMD_RELEASE_ADC_SEMAPHORE</name>
        <initializer><ref refid="group___a_d_c_buf___c_o_n_t_r_o_l_1ga6d889e191027535ad318be0b9c3765d1" kindref="member">ADCBuf_CMD_RESERVED</ref> + 4</initializer>
        <briefdescription>
<para>This function releases the ADC semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function returns an error if the handle is not open or a transfer is in progress </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/adcbuf/ADCBufCC26XX.h" line="385" column="9" bodyfile="source/ti/drivers/adcbuf/ADCBufCC26XX.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>ADCBuf_CMD_* macros are general command codes for <ref refid="_i2_c_8h_1a4c74b1b9f8e76ac22bec7608491cb223" kindref="member">I2C_control()</ref>. Not all ADCBuf driver implementations support these command codes.</para><para>ADCBufCC26X2_CMD_* macros are command codes only defined in the <ref refid="_a_d_c_buf_c_c26_x2_8h" kindref="compound">ADCBufCC26X2.h</ref> driver implementation and need to: <programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/adc/ADCBufCC26X2.h&gt;</highlight></codeline>
</programlisting></para><para>ADCBufCC26XX_CMD_* macros are command codes only defined in the <ref refid="_a_d_c_buf_c_c26_x_x_8h" kindref="compound">ADCBufCC26XX.h</ref> driver implementation and need to: <programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/adc/ADCBufCC26XX.h&gt;</highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
