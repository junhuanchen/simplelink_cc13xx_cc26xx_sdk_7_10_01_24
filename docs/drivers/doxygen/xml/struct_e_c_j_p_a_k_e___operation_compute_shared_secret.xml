<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="struct_e_c_j_p_a_k_e___operation_compute_shared_secret" kind="struct" language="C++" prot="public">
    <compoundname>ECJPAKE_OperationComputeSharedSecret</compoundname>
    <includes refid="_e_c_j_p_a_k_e_8h" local="no">ECJPAKE.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_compute_shared_secret_1a37d1500a311757555ae775f40c7fc8ab" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_e_c_c_params___curve_params" kindref="compound">ECCParams_CurveParams</ref> *</type>
        <definition>const ECCParams_CurveParams* ECJPAKE_OperationComputeSharedSecret::curve</definition>
        <argsstring></argsstring>
        <name>curve</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to the elliptic curve parameters used in the operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/ECJPAKE.h" line="1019" column="1" bodyfile="source/ti/drivers/ECJPAKE.h" bodystart="1019" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_compute_shared_secret_1a9141620809db06c0839bcaa504e35962" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
        <definition>const CryptoKey* ECJPAKE_OperationComputeSharedSecret::myCombinedPrivateKey</definition>
        <argsstring></argsstring>
        <name>myCombinedPrivateKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to a private ECC key. Must be of the same length as other params of the curve used. Generated in round one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/ECJPAKE.h" line="1022" column="1" bodyfile="source/ti/drivers/ECJPAKE.h" bodystart="1022" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_compute_shared_secret_1a2e18c8f059736f66f4c768201ed475a8" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
        <definition>const CryptoKey* ECJPAKE_OperationComputeSharedSecret::theirCombinedPublicKey</definition>
        <argsstring></argsstring>
        <name>theirCombinedPublicKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> describing the second public key received from the other party. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/ECJPAKE.h" line="1026" column="1" bodyfile="source/ti/drivers/ECJPAKE.h" bodystart="1026" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_compute_shared_secret_1a789ee04ff7193f20aa330b5ad12a61b9" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
        <definition>const CryptoKey* ECJPAKE_OperationComputeSharedSecret::theirPublicKey2</definition>
        <argsstring></argsstring>
        <name>theirPublicKey2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to a private ECC key. Must be of the same length as other params of the curve used. Result of multiplying <computeroutput>myPrivateKey2</computeroutput> by <computeroutput>preSharedSecret</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/ECJPAKE.h" line="1029" column="1" bodyfile="source/ti/drivers/ECJPAKE.h" bodystart="1029" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_compute_shared_secret_1a700f29dfb260521cbeae1d86c06bce00" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
        <definition>const CryptoKey* ECJPAKE_OperationComputeSharedSecret::myPrivateKey2</definition>
        <argsstring></argsstring>
        <name>myPrivateKey2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Combined public key received in the second round and verified by the application against the second round ZKP signature. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/ECJPAKE.h" line="1034" column="1" bodyfile="source/ti/drivers/ECJPAKE.h" bodystart="1034" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_compute_shared_secret_1a8486981c6cc2ba1b949322f7178a3dc4" prot="public" static="no" mutable="no">
        <type><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
        <definition>CryptoKey* ECJPAKE_OperationComputeSharedSecret::sharedSecret</definition>
        <argsstring></argsstring>
        <name>sharedSecret</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The shared secret that is identical between both parties. Formatted as a public key. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/ECJPAKE.h" line="1038" column="1" bodyfile="source/ti/drivers/ECJPAKE.h" bodystart="1038" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Struct containing the parameters required to compute the shared secret. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="904">
        <label>ECJPAKE_OperationComputeSharedSecret</label>
        <link refid="struct_e_c_j_p_a_k_e___operation_compute_shared_secret"/>
        <childnode refid="905" relation="usage">
          <edgelabel>curve</edgelabel>
        </childnode>
        <childnode refid="906" relation="usage">
          <edgelabel>theirPublicKey2</edgelabel>
          <edgelabel>myPrivateKey2</edgelabel>
          <edgelabel>myCombinedPrivateKey</edgelabel>
          <edgelabel>sharedSecret</edgelabel>
          <edgelabel>theirCombinedPublicKey</edgelabel>
        </childnode>
      </node>
      <node id="906">
        <label>CryptoKey</label>
        <link refid="struct_crypto_key"/>
        <childnode refid="907" relation="usage">
          <edgelabel>plaintext</edgelabel>
        </childnode>
        <childnode refid="908" relation="usage">
          <edgelabel>keyStore</edgelabel>
        </childnode>
      </node>
      <node id="905">
        <label>ECCParams_CurveParams</label>
        <link refid="struct_e_c_c_params___curve_params"/>
      </node>
      <node id="907">
        <label>CryptoKey_Plaintext</label>
        <link refid="struct_crypto_key___plaintext"/>
      </node>
      <node id="908">
        <label>CryptoKey_KeyStore</label>
        <link refid="struct_crypto_key___key_store"/>
      </node>
    </collaborationgraph>
    <location file="source/ti/drivers/ECJPAKE.h" line="1018" column="1" bodyfile="source/ti/drivers/ECJPAKE.h" bodystart="1017" bodyend="1041"/>
    <listofallmembers>
      <member refid="struct_e_c_j_p_a_k_e___operation_compute_shared_secret_1a37d1500a311757555ae775f40c7fc8ab" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationComputeSharedSecret</scope><name>curve</name></member>
      <member refid="struct_e_c_j_p_a_k_e___operation_compute_shared_secret_1a9141620809db06c0839bcaa504e35962" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationComputeSharedSecret</scope><name>myCombinedPrivateKey</name></member>
      <member refid="struct_e_c_j_p_a_k_e___operation_compute_shared_secret_1a700f29dfb260521cbeae1d86c06bce00" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationComputeSharedSecret</scope><name>myPrivateKey2</name></member>
      <member refid="struct_e_c_j_p_a_k_e___operation_compute_shared_secret_1a8486981c6cc2ba1b949322f7178a3dc4" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationComputeSharedSecret</scope><name>sharedSecret</name></member>
      <member refid="struct_e_c_j_p_a_k_e___operation_compute_shared_secret_1a2e18c8f059736f66f4c768201ed475a8" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationComputeSharedSecret</scope><name>theirCombinedPublicKey</name></member>
      <member refid="struct_e_c_j_p_a_k_e___operation_compute_shared_secret_1a789ee04ff7193f20aa330b5ad12a61b9" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationComputeSharedSecret</scope><name>theirPublicKey2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
