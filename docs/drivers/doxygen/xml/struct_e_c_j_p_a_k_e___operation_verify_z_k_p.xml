<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="struct_e_c_j_p_a_k_e___operation_verify_z_k_p" kind="struct" language="C++" prot="public">
    <compoundname>ECJPAKE_OperationVerifyZKP</compoundname>
    <includes refid="_e_c_j_p_a_k_e_8h" local="no">ECJPAKE.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_verify_z_k_p_1aa9fd0c3220148eb260da304767b845e7" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_e_c_c_params___curve_params" kindref="compound">ECCParams_CurveParams</ref> *</type>
        <definition>const ECCParams_CurveParams* ECJPAKE_OperationVerifyZKP::curve</definition>
        <argsstring></argsstring>
        <name>curve</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to the elliptic curve parameters used in the operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/ECJPAKE.h" line="914" column="1" bodyfile="source/ti/drivers/ECJPAKE.h" bodystart="914" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_verify_z_k_p_1acf6d864f4e02a34195700a538f3ec3c4" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
        <definition>const CryptoKey* ECJPAKE_OperationVerifyZKP::theirGenerator</definition>
        <argsstring></argsstring>
        <name>theirGenerator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> describing the generator point to be used. In the first round, this will be the default generator of the curve. In the second round, this parameter is computed by <ref refid="_e_c_j_p_a_k_e_8h_1a6b0de26fef61a785906120acb0277074" kindref="member">ECJPAKE_roundTwoGenerateKeys()</ref>.</para><para>Formatted as a public key. If NULL, default generator point from <computeroutput>curve</computeroutput> is used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/ECJPAKE.h" line="917" column="1" bodyfile="source/ti/drivers/ECJPAKE.h" bodystart="917" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_verify_z_k_p_1a22bf5b561832f7be21e7c766573f906a" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
        <definition>const CryptoKey* ECJPAKE_OperationVerifyZKP::theirPublicKey</definition>
        <argsstring></argsstring>
        <name>theirPublicKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> describing the public key received from the other party that the ZKP to be verified supposedly signed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/ECJPAKE.h" line="926" column="1" bodyfile="source/ti/drivers/ECJPAKE.h" bodystart="926" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_verify_z_k_p_1a4be0a99f30ddb02784ae088d8b36d497" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
        <definition>const CryptoKey* ECJPAKE_OperationVerifyZKP::theirPublicV</definition>
        <argsstring></argsstring>
        <name>theirPublicV</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> describing the public V of the ZKP. Received from the other party. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/ECJPAKE.h" line="930" column="1" bodyfile="source/ti/drivers/ECJPAKE.h" bodystart="930" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_verify_z_k_p_1ad524369b4c52fbff25abef2b7dc5f2b2" prot="public" static="no" mutable="no">
        <type>const uint8_t *</type>
        <definition>const uint8_t* ECJPAKE_OperationVerifyZKP::hash</definition>
        <argsstring></argsstring>
        <name>hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The hash of the ZKP generated as the other party generated it to compute r. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/ECJPAKE.h" line="933" column="1" bodyfile="source/ti/drivers/ECJPAKE.h" bodystart="933" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_verify_z_k_p_1acd55d6b35c8713a96fe853cf813df8ac" prot="public" static="no" mutable="no">
        <type>const uint8_t *</type>
        <definition>const uint8_t* ECJPAKE_OperationVerifyZKP::r</definition>
        <argsstring></argsstring>
        <name>r</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>R component of the ZKP signature. Received from the other party. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/ECJPAKE.h" line="936" column="1" bodyfile="source/ti/drivers/ECJPAKE.h" bodystart="936" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Struct containing the parameters required to verify a ZKP. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="928">
        <label>ECJPAKE_OperationVerifyZKP</label>
        <link refid="struct_e_c_j_p_a_k_e___operation_verify_z_k_p"/>
        <childnode refid="929" relation="usage">
          <edgelabel>curve</edgelabel>
        </childnode>
        <childnode refid="930" relation="usage">
          <edgelabel>theirGenerator</edgelabel>
          <edgelabel>theirPublicKey</edgelabel>
          <edgelabel>theirPublicV</edgelabel>
        </childnode>
      </node>
      <node id="930">
        <label>CryptoKey</label>
        <link refid="struct_crypto_key"/>
        <childnode refid="931" relation="usage">
          <edgelabel>plaintext</edgelabel>
        </childnode>
        <childnode refid="932" relation="usage">
          <edgelabel>keyStore</edgelabel>
        </childnode>
      </node>
      <node id="929">
        <label>ECCParams_CurveParams</label>
        <link refid="struct_e_c_c_params___curve_params"/>
      </node>
      <node id="931">
        <label>CryptoKey_Plaintext</label>
        <link refid="struct_crypto_key___plaintext"/>
      </node>
      <node id="932">
        <label>CryptoKey_KeyStore</label>
        <link refid="struct_crypto_key___key_store"/>
      </node>
    </collaborationgraph>
    <location file="source/ti/drivers/ECJPAKE.h" line="913" column="1" bodyfile="source/ti/drivers/ECJPAKE.h" bodystart="912" bodyend="939"/>
    <listofallmembers>
      <member refid="struct_e_c_j_p_a_k_e___operation_verify_z_k_p_1aa9fd0c3220148eb260da304767b845e7" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationVerifyZKP</scope><name>curve</name></member>
      <member refid="struct_e_c_j_p_a_k_e___operation_verify_z_k_p_1ad524369b4c52fbff25abef2b7dc5f2b2" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationVerifyZKP</scope><name>hash</name></member>
      <member refid="struct_e_c_j_p_a_k_e___operation_verify_z_k_p_1acd55d6b35c8713a96fe853cf813df8ac" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationVerifyZKP</scope><name>r</name></member>
      <member refid="struct_e_c_j_p_a_k_e___operation_verify_z_k_p_1acf6d864f4e02a34195700a538f3ec3c4" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationVerifyZKP</scope><name>theirGenerator</name></member>
      <member refid="struct_e_c_j_p_a_k_e___operation_verify_z_k_p_1a22bf5b561832f7be21e7c766573f906a" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationVerifyZKP</scope><name>theirPublicKey</name></member>
      <member refid="struct_e_c_j_p_a_k_e___operation_verify_z_k_p_1a4be0a99f30ddb02784ae088d8b36d497" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationVerifyZKP</scope><name>theirPublicV</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
