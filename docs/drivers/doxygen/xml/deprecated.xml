<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="deprecated" kind="page">
    <compoundname>deprecated</compoundname>
    <title>Deprecated List</title>
    <detaileddescription>
<para><variablelist>
<varlistentry><term><anchor id="deprecated_1_deprecated000001"/>Global <ref refid="_a_d_c_8h_1ab9f0fda9cf7e26636cee5817789f0030" kindref="member">ADC_convertRawToMicroVolts</ref>  </term></varlistentry>
<listitem><para><ref refid="_a_d_c_8h_1ab9f0fda9cf7e26636cee5817789f0030" kindref="member">ADC_convertRawToMicroVolts()</ref> is succeeded by <ref refid="_a_d_c_8h_1aa1cd6feaa85ea5409dbe1769586bff20" kindref="member">ADC_convertToMicroVolts()</ref>.  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000002"/>Global <ref refid="_a_e_s_c_b_c_8h_1a4f412502b110e7046c203e23722aaa89" kindref="member">AESCBC_Operation</ref>  </term></varlistentry>
<listitem><para>Define a typedef for deprecated operation AESCBC_Operation. Existing code should be refactored to use <ref refid="struct_a_e_s_c_b_c___one_step_operation" kindref="compound">AESCBC_OneStepOperation</ref>. This reference may be removed at some point in the future </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000003"/>Global <ref refid="_a_e_s_c_b_c_8h_1a0864488e0826602937308930ab60e200" kindref="member">AESCBC_Operation_init</ref>  (AESCBC_Operation *operationStruct)</term></varlistentry>
<listitem><para>This function should be replaced by calls to operation-specific init functions. </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000004"/>Global <ref refid="_a_e_s_c_c_m_8h_1a1546f451996da52b51b153524f4ad6e0" kindref="member">AESCCM_Operation</ref>  </term></varlistentry>
<listitem><para>Define a typedef for deprecated operation AESCCM_Operation. Existing code should be refactored to use <ref refid="struct_a_e_s_c_c_m___one_step_operation" kindref="compound">AESCCM_OneStepOperation</ref>. This reference may be removed at some point in the future </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000005"/>Global <ref refid="_a_e_s_c_c_m_8h_1a737c52bee6913123f4f1fa54c5c3c2a0" kindref="member">AESCCM_Operation_init</ref>  (AESCCM_Operation *operationStruct)</term></varlistentry>
<listitem><para>This function should be replaced by calls to operation-specific init functions. </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000006"/>Global <ref refid="_a_e_s_c_t_r_8h_1a5afaf34387204843aee3513ce646596f" kindref="member">AESCTR_Operation</ref>  </term></varlistentry>
<listitem><para>Define a typedef for deprecated operation AESCTR_Operation. Existing code should be refactored to use <ref refid="struct_a_e_s_c_t_r___one_step_operation" kindref="compound">AESCTR_OneStepOperation</ref>. This reference may be removed at some point in the future.  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000007"/>Global <ref refid="_a_e_s_c_t_r_8h_1a55748990b81e9dfbfebf783ab9e21df2" kindref="member">AESCTR_Operation_init</ref>  (AESCTR_Operation *operation)</term></varlistentry>
<listitem><para>Use <ref refid="_a_e_s_c_t_r_8h_1a795df729c916c7e2eb22b8dac194b086" kindref="member">AESCTR_OneStepOperation_init()</ref> or <ref refid="_a_e_s_c_t_r_8h_1adc4622c828393764b4eedea50982ca23" kindref="member">AESCTR_SegmentedOperation_init()</ref> based on whether it is a one-step or a segmented AESCTR operation. </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000008"/>Global <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1ae6ec8bac3354b04546b7027a7500b5e9" kindref="member">AESCTRDRBG_getBytes</ref>  (AESCTRDRBG_Handle handle, <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *randomBytes)</term></varlistentry>
<listitem><para>This function has been replaced by a pair of new functions. See <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1aa7c032878ac9493ad06dc8a50cdca980" kindref="member">AESCTRDRBG_generateKey()</ref> and <ref refid="_a_e_s_c_t_r_d_r_b_g_8h_1acc127938e866f022c6d77aaccdf62355" kindref="member">AESCTRDRBG_getRandomBytes()</ref>. </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000009"/>Global <ref refid="_a_e_s_g_c_m_8h_1a2be2e68d527e2840b3214420497cc90e" kindref="member">AESGCM_Operation</ref>  </term></varlistentry>
<listitem><para>Define a typedef for deprecated operation AESGCM_Operation. Existing code should be refactored to use <ref refid="struct_a_e_s_g_c_m___one_step_operation" kindref="compound">AESGCM_OneStepOperation</ref>. This reference may be removed at some point in the future </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000010"/>Global <ref refid="_a_e_s_g_c_m_8h_1a7632b455c1c1a08ab12155b26734dcf6" kindref="member">AESGCM_Operation_init</ref>  (AESGCM_Operation *operationStruct)</term></varlistentry>
<listitem><para>This function should be replaced by calls to operation-specific init functions. </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000011"/>Global <ref refid="_e_d_d_s_a_8h_1a7a4d9af13d672685671c39a94016b6ca" kindref="member">EDDSA_cancelOperation</ref>  (EDDSA_Handle handle)</term></varlistentry>
<listitem><para>This function will be deprecated in the 3Q20 SDK release. The asynchronicity of the function can not be handled by all accelerators. </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000012"/>Global <ref refid="_t_r_n_g_8h_1a602fd3db9db486b24efbe71e9a841887" kindref="member">TRNG_CallbackFxn</ref>  </term></varlistentry>
<listitem><para><ref refid="_t_r_n_g_8h_1a602fd3db9db486b24efbe71e9a841887" kindref="member">TRNG_CallbackFxn</ref> will be replaced by <ref refid="_t_r_n_g_8h_1aca5783fdcaae4122d32c20acc50624ca" kindref="member">TRNG_CryptoKeyCallbackFxn</ref>  </para></listitem>
<varlistentry><term><anchor id="deprecated_1_deprecated000013"/>Global <ref refid="_t_r_n_g_8h_1a3afd5042c7bb40f654e546ed5cc70246" kindref="member">TRNG_generateEntropy</ref>  (TRNG_Handle handle, <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *entropy)</term></varlistentry>
<listitem><para>This function has been replaced by a pair of new functions. See <ref refid="_t_r_n_g_8h_1a5e16c78c037c0793d7126c2cce7f007d" kindref="member">TRNG_generateKey()</ref> and <ref refid="_t_r_n_g_8h_1ac671624bdf54d57adf1f403e4be1a778" kindref="member">TRNG_getRandomBytes()</ref>.</para></listitem>
</variablelist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
