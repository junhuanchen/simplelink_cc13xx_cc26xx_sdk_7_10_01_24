<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_flash_c_c26_x4__ns_8h" kind="file" language="C++">
    <compoundname>FlashCC26X4_ns.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">ti/devices/DeviceFamily.h</includes>
    <includes local="no">DeviceFamily_constructPath(inc/hw_nvmnw.h)</includes>
    <includes local="no">DeviceFamily_constructPath(inc/hw_memmap.h)</includes>
    <includes local="no">DeviceFamily_constructPath(inc/hw_types.h)</includes>
    <includes local="no">DeviceFamily_constructPath(cmsis/core/cmsis_compiler.h)</includes>
    <incdepgraph>
      <node id="888">
        <label>FlashCC26X4_ns.h</label>
        <link refid="_flash_c_c26_x4__ns_8h"/>
        <childnode refid="889" relation="include">
        </childnode>
        <childnode refid="890" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
        <childnode refid="894" relation="include">
        </childnode>
        <childnode refid="895" relation="include">
        </childnode>
      </node>
      <node id="890">
        <label>stdint.h</label>
      </node>
      <node id="889">
        <label>stddef.h</label>
      </node>
      <node id="891">
        <label>ti/devices/DeviceFamily.h</label>
      </node>
      <node id="893">
        <label>DeviceFamily_constructPath(inc/hw_memmap.h)</label>
      </node>
      <node id="894">
        <label>DeviceFamily_constructPath(inc/hw_types.h)</label>
      </node>
      <node id="892">
        <label>DeviceFamily_constructPath(inc/hw_nvmnw.h)</label>
      </node>
      <node id="895">
        <label>DeviceFamily_constructPath(cmsis/core/cmsis_compiler.h)</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_flash_c_c26_x4__ns_8h_1a2873808d6fc3c3627b7b882f5d8416d9" prot="public" static="no">
        <name>FAPI_STATUS_SUCCESS</name>
        <initializer>0x00000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" line="95" column="9" bodyfile="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flash_c_c26_x4__ns_8h_1ac803ba38608b907c9a37edbaea6f60d5" prot="public" static="no">
        <name>FAPI_STATUS_FSM_BUSY</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" line="96" column="9" bodyfile="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flash_c_c26_x4__ns_8h_1a6dc7f17a0e39cb30c6b27926ae88e2a6" prot="public" static="no">
        <name>FAPI_STATUS_FSM_READY</name>
        <initializer>0x00000002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" line="97" column="9" bodyfile="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flash_c_c26_x4__ns_8h_1a7d203641570dd4058f88fae7ca494584" prot="public" static="no">
        <name>FAPI_STATUS_INCORRECT_DATABUFFER_LENGTH</name>
        <initializer>0x00000003</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" line="98" column="9" bodyfile="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flash_c_c26_x4__ns_8h_1a58b3728c010c8de7007a1a625c61b5e4" prot="public" static="no">
        <name>FAPI_STATUS_FSM_ERROR</name>
        <initializer>0x00000004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" line="99" column="9" bodyfile="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flash_c_c26_x4__ns_8h_1aeebd047aab907390b464d1eccfe71f1a" prot="public" static="no">
        <name>FAPI_STATUS_ADDRESS_ERROR</name>
        <initializer>0x00000005</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" line="100" column="9" bodyfile="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flash_c_c26_x4__ns_8h_1a78e4e78e6e095f136c3ba1c24ddacd74" prot="public" static="no">
        <name>FAPI_STATUS_ADDRESS_ALIGN_ERROR</name>
        <initializer>0x00000006</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" line="101" column="9" bodyfile="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flash_c_c26_x4__ns_8h_1a1a49674f1f9451f319d78ca7581a0405" prot="public" static="no">
        <name>FAPI_STATUS_BANK_NUM_ERROR</name>
        <initializer>0x00000007</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" line="102" column="9" bodyfile="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flash_c_c26_x4__ns_8h_1a1b0f4ed91254c5de6af25204d2496e08" prot="public" static="no">
        <name>FAPI_STATUS_NOSUPPORT_ERROR</name>
        <initializer>0x00000008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" line="103" column="9" bodyfile="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flash_c_c26_x4__ns_8h_1ac8d3cee2ad642a8e7a8155112cc25953" prot="public" static="no">
        <name>FAPI_STATUS_UNPROTECT_ERROR</name>
        <initializer>0x00000009</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" line="104" column="9" bodyfile="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_flash_c_c26_x4__ns_8h_1a4012b64038ebe0cf6285a7a058589ab5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t FlashOpen</definition>
        <argsstring>(void)</argsstring>
        <name>FlashOpen</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize a PSA connection to the Secure Flash Service. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>None</para></simplesect>
<simplesect kind="return"><para>A value greater than 0 indicates the value of a successfuly established connection handle. On failure a PSA_ERROR code will be returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flash_c_c26_x4__ns_8h_1add15fdf73e8ee763bf06a5244da4fc38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FlashClose</definition>
        <argsstring>(void)</argsstring>
        <name>FlashClose</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>End the PSA connection to the Secure Flash Service. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_flash_c_c26_x4__ns_8h_1a4012b64038ebe0cf6285a7a058589ab5" kindref="member">FlashOpen()</ref> was called.</para></simplesect>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flash_c_c26_x4__ns_8h_1aca0d39806f2d9bec6a341712d242647d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t FlashProtectionGet</definition>
        <argsstring>(uint32_t ui32SectorAddress)</argsstring>
        <name>FlashProtectionGet</name>
        <param>
          <type>uint32_t</type>
          <declname>ui32SectorAddress</declname>
        </param>
        <briefdescription>
<para>Call FlashProtectionGet API using Secure Flash Service. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_flash_c_c26_x4__ns_8h_1a4012b64038ebe0cf6285a7a058589ab5" kindref="member">FlashOpen()</ref> was called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ui32SectorAddress</parametername>
</parameternamelist>
<parameterdescription>
<para>The start address of the sector to protect.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the sector protection value (0 or 1) on success or FAPI_STATUS code on failure. If a PSA error occurs this will take precedence and a PSA_ERROR code will be returned instead. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flash_c_c26_x4__ns_8h_1ace3e1af81dafa8192dc1cd583d246ce9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t FlashSectorErase</definition>
        <argsstring>(uint32_t ui32SectorAddress)</argsstring>
        <name>FlashSectorErase</name>
        <param>
          <type>uint32_t</type>
          <declname>ui32SectorAddress</declname>
        </param>
        <briefdescription>
<para>Call FlashSectorErase API using Secure Flash Service. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_flash_c_c26_x4__ns_8h_1a4012b64038ebe0cf6285a7a058589ab5" kindref="member">FlashOpen()</ref> was called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ui32SectorAddress</parametername>
</parameternamelist>
<parameterdescription>
<para>The start address of the sector to erase.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an FAPI_STATUS status code based on status of erase operation. If a PSA error occurs this will take precedence and a PSA_ERROR code will be returned instead. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flash_c_c26_x4__ns_8h_1a0d891d79df6dbba0288b15a8c30c1331" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t FlashProgram</definition>
        <argsstring>(uint8_t *pui8DataBuffer, uint32_t ui32Address, uint32_t ui32Count)</argsstring>
        <name>FlashProgram</name>
        <param>
          <type>uint8_t *</type>
          <declname>pui8DataBuffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ui32Address</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ui32Count</declname>
        </param>
        <briefdescription>
<para>Call FlashProgram API using Secure Flash Service. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_flash_c_c26_x4__ns_8h_1a4012b64038ebe0cf6285a7a058589ab5" kindref="member">FlashOpen()</ref> was called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pui8DataBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be programmed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ui32Address</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting address in flash to be programmed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ui32Count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to be programmed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an FAPI_STATUS status code based on status of flash operation. If a PSA error occurs this will take precedence and a PSA_ERROR code will be returned instead. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flash_c_c26_x4__ns_8h_1ad1138abe16257199fbacb5822542919e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t FlashProgram4X</definition>
        <argsstring>(uint8_t *pui8DataBuffer, uint32_t ui32Address, uint32_t ui32Count)</argsstring>
        <name>FlashProgram4X</name>
        <param>
          <type>uint8_t *</type>
          <declname>pui8DataBuffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ui32Address</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ui32Count</declname>
        </param>
        <briefdescription>
<para>Call FlashProgram4X API using Secure Flash Service. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_flash_c_c26_x4__ns_8h_1a4012b64038ebe0cf6285a7a058589ab5" kindref="member">FlashOpen()</ref> was called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pui8DataBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be programmed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ui32Address</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting address in flash to be programmed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ui32Count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to be programmed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an FAPI_STATUS status code based on status of flash operation. If a PSA error occurs this will take precedence and a PSA_ERROR code will be returned instead. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flash_c_c26_x4__ns_8h_1ae6a0b07bfbddf6d21e0dbbd7753e4b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t FlashSectorSizeGet</definition>
        <argsstring>(void)</argsstring>
        <name>FlashSectorSizeGet</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Call FlashSectorSizeGet API using Secure Flash Service. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_flash_c_c26_x4__ns_8h_1a4012b64038ebe0cf6285a7a058589ab5" kindref="member">FlashOpen()</ref> was called.</para></simplesect>
<simplesect kind="return"><para>Returns the size of Flash Sector on success or an FAPI_STATUS status code on failure. Values greater than FAPI_STATUS_UNPROTECT_ERROR will be considered a valid Flash Sector size. If a PSA error occurs this will take precedence and a PSA_ERROR code will be returned instead. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flash_c_c26_x4__ns_8h_1a79bccd4cdbd7930d880df9e185935d41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t FlashSizeGet</definition>
        <argsstring>(void)</argsstring>
        <name>FlashSizeGet</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Call FlashSizeGet API using Secure Flash Service. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_flash_c_c26_x4__ns_8h_1a4012b64038ebe0cf6285a7a058589ab5" kindref="member">FlashOpen()</ref> was called.</para></simplesect>
<simplesect kind="return"><para>Returns the size of Flash on success or an FAPI_STATUS status code on failure. Values greater than FAPI_STATUS_UNPROTECT_ERROR will be considered a valid Flash size. If a PSA error occurs this will take precedence and a PSA_ERROR code will be returned instead. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h" line="204" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Non-Secure Flash Client Interface for CC26X4 devices. </para>    </briefdescription>
    <detaileddescription>
<para><hruler/>
</para><para>The defined APIs are identical to the function calls in flash.c. This client interface allows the access to the Secure Flash Service.</para><para><heading level="1">Initialization</heading>
</para><para>Users will need to call <ref refid="_flash_c_c26_x4__ns_8h_1a4012b64038ebe0cf6285a7a058589ab5" kindref="member">FlashOpen()</ref> once prior to any other function calls. <ref refid="_flash_c_c26_x4__ns_8h_1a4012b64038ebe0cf6285a7a058589ab5" kindref="member">FlashOpen()</ref> will only need to be called again if <ref refid="_flash_c_c26_x4__ns_8h_1add15fdf73e8ee763bf06a5244da4fc38" kindref="member">FlashClose()</ref> is called.</para><para><heading level="1">Error Codes</heading>
</para><para>Typically the Flash Driver (flash.c) returns either a FAPI_STATUS code or a valid value greater than the FAPI_STATUS code range. FAPI_STATUS codes are positive and are defined below in <ref refid="_flash_c_c26_x4__ns_8h" kindref="compound">FlashCC26X4_ns.h</ref>. The Non-Secure Flash Client Interface is responsible for interfacing with the Secure Partition Manager (SPM). Requests to the SPM may result in Platform Security Architecture (PSA) error codes. These error codes are referred to as PSA_ERROR codes. PSA_ERROR codes are negative values and are defined in &quot;error.h&quot;. Due to the FAPI_STATUS and PSA_ERROR codes not overlapping, API&apos;s of the Non-Secure Flash Client Interface can dynamically return either value type. PSA_ERROR codes are considered higher priority and will take precedence. Therefore, if a PSA_ERROR occurs, a PSA_ERROR is returned. Otherwise, a valid Flash driver value will be returned. Each API will follow this guideline but please reference each API individually for specific return characteristics.</para><para><heading level="1">PSA_ERROR_PROGRAMMER_ERROR</heading>
</para><para>A PSA_ERROR_PROGRAMMER_ERROR is a strict error code returned by the SPM. Once this error code is returned, the SPM will terminate the connection to the service. All subsequent requests to the service from the same client will not be processed and will continue to return a PSA_ERROR_PROGRAMMER_ERROR. The client must close the connection to the SPM and then re-establish the connection to continue. This can be accomplished in the Non-Secure Flash Client Interface by calling <ref refid="_flash_c_c26_x4__ns_8h_1add15fdf73e8ee763bf06a5244da4fc38" kindref="member">FlashClose()</ref> followed by <ref refid="_flash_c_c26_x4__ns_8h_1a4012b64038ebe0cf6285a7a058589ab5" kindref="member">FlashOpen()</ref>. In the Non-Secure Flash Client Interface, PSA_ERROR_PROGRAMMER_ERROR codes will primarily be returned due to requests trying to read from or write to secure memory regions. Please reference the PSA Firmware Framework specification for more details regarding the PSA_ERROR_PROGRAMMER_ERROR code. <hruler/>
 </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>-<sp/>http://www.ti.com</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*!*****************************************************************************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>@file<sp/><sp/><sp/><sp/><sp/><sp/><sp/>FlashCC26X4_ns.h</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>@brief<sp/><sp/><sp/><sp/><sp/><sp/>Non-Secure<sp/>Flash<sp/>Client<sp/>Interface<sp/>for<sp/>CC26X4<sp/>devices.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>defined<sp/>APIs<sp/>are<sp/>identical<sp/>to<sp/>the<sp/>function<sp/>calls<sp/>in<sp/>flash.c.<sp/>This<sp/>client</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/>interface<sp/>allows<sp/>the<sp/>access<sp/>to<sp/>the<sp/>Secure<sp/>Flash<sp/>Service.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Initialization<sp/>#</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/>Users<sp/>will<sp/>need<sp/>to<sp/>call<sp/>FlashOpen()<sp/>once<sp/>prior<sp/>to<sp/>any<sp/>other<sp/>function<sp/>calls.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/><sp/>FlashOpen()<sp/>will<sp/>only<sp/>need<sp/>to<sp/>be<sp/>called<sp/>again<sp/>if<sp/>FlashClose()<sp/>is<sp/>called.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Error<sp/>Codes<sp/>#</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/>Typically<sp/>the<sp/>Flash<sp/>Driver<sp/>(flash.c)<sp/>returns<sp/>either<sp/>a<sp/>FAPI_STATUS<sp/>code</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/><sp/>or<sp/>a<sp/>valid<sp/>value<sp/>greater<sp/>than<sp/>the<sp/>FAPI_STATUS<sp/>code<sp/>range.<sp/>FAPI_STATUS<sp/>codes</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/><sp/>are<sp/>positive<sp/>and<sp/>are<sp/>defined<sp/>below<sp/>in<sp/>FlashCC26X4_ns.h.<sp/>The<sp/>Non-Secure<sp/>Flash</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/><sp/>Client<sp/>Interface<sp/>is<sp/>responsible<sp/>for<sp/>interfacing<sp/>with<sp/>the<sp/>Secure<sp/>Partition</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/><sp/>Manager<sp/>(SPM).<sp/>Requests<sp/>to<sp/>the<sp/>SPM<sp/>may<sp/>result<sp/>in<sp/>Platform<sp/>Security</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/>Architecture<sp/>(PSA)<sp/>error<sp/>codes.<sp/>These<sp/>error<sp/>codes<sp/>are<sp/>referred<sp/>to<sp/>as</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/><sp/>PSA_ERROR<sp/>codes.<sp/>PSA_ERROR<sp/>codes<sp/>are<sp/>negative<sp/>values<sp/>and<sp/>are<sp/>defined<sp/>in</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/><sp/>&quot;error.h&quot;.<sp/>Due<sp/>to<sp/>the<sp/>FAPI_STATUS<sp/>and<sp/>PSA_ERROR<sp/>codes<sp/>not<sp/>overlapping,</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/><sp/>API&apos;s<sp/>of<sp/>the<sp/>Non-Secure<sp/>Flash<sp/>Client<sp/>Interface<sp/>can<sp/>dynamically<sp/>return<sp/>either</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/>value<sp/>type.<sp/>PSA_ERROR<sp/>codes<sp/>are<sp/>considered<sp/>higher<sp/>priority<sp/>and<sp/>will<sp/>take</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/><sp/>precedence.<sp/>Therefore,<sp/>if<sp/>a<sp/>PSA_ERROR<sp/>occurs,<sp/>a<sp/>PSA_ERROR<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/>Otherwise,<sp/>a<sp/>valid<sp/>Flash<sp/>driver<sp/>value<sp/>will<sp/>be<sp/>returned.<sp/>Each<sp/>API<sp/>will<sp/>follow</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>guideline<sp/>but<sp/>please<sp/>reference<sp/>each<sp/>API<sp/>individually<sp/>for<sp/>specific</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/>return<sp/>characteristics.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>PSA_ERROR_PROGRAMMER_ERROR<sp/>#</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/>A<sp/>PSA_ERROR_PROGRAMMER_ERROR<sp/>is<sp/>a<sp/>strict<sp/>error<sp/>code<sp/>returned<sp/>by<sp/>the<sp/>SPM.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/><sp/>Once<sp/>this<sp/>error<sp/>code<sp/>is<sp/>returned,<sp/>the<sp/>SPM<sp/>will<sp/>terminate<sp/>the<sp/>connection</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>the<sp/>service.<sp/>All<sp/>subsequent<sp/>requests<sp/>to<sp/>the<sp/>service<sp/>from<sp/>the<sp/>same<sp/>client</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/><sp/>will<sp/>not<sp/>be<sp/>processed<sp/>and<sp/>will<sp/>continue<sp/>to<sp/>return<sp/>a</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/><sp/>PSA_ERROR_PROGRAMMER_ERROR.<sp/>The<sp/>client<sp/>must<sp/>close<sp/>the<sp/>connection<sp/>to<sp/>the<sp/>SPM</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>then<sp/>re-establish<sp/>the<sp/>connection<sp/>to<sp/>continue.<sp/>This<sp/>can<sp/>be<sp/>accomplished</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/><sp/>in<sp/>the<sp/>Non-Secure<sp/>Flash<sp/>Client<sp/>Interface<sp/>by<sp/>calling<sp/>FlashClose()<sp/>followed<sp/>by</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/><sp/>FlashOpen().<sp/>In<sp/>the<sp/>Non-Secure<sp/>Flash<sp/>Client<sp/>Interface,</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/><sp/>PSA_ERROR_PROGRAMMER_ERROR<sp/>codes<sp/>will<sp/>primarily<sp/>be<sp/>returned<sp/>due<sp/>to<sp/>requests</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/><sp/>trying<sp/>to<sp/>read<sp/>from<sp/>or<sp/>write<sp/>to<sp/>secure<sp/>memory<sp/>regions.<sp/>Please<sp/>reference<sp/>the</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/><sp/>PSA<sp/>Firmware<sp/>Framework<sp/>specification<sp/>for<sp/>more<sp/>details<sp/>regarding<sp/>the</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/><sp/>PSA_ERROR_PROGRAMMER_ERROR<sp/>code.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/><sp/>============================================================================</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ti_drivers_nvs_flash_FlashCC26X4_ns_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_nvs_flash_FlashCC26X4_ns_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ti/devices/DeviceFamily.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>DeviceFamily_constructPath(inc/hw_nvmnw.h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>DeviceFamily_constructPath(inc/hw_memmap.h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>DeviceFamily_constructPath(inc/hw_types.h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>DeviceFamily_constructPath(cmsis/core/cmsis_compiler.h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>***************************************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Values<sp/>that<sp/>can<sp/>be<sp/>returned<sp/>from<sp/>the<sp/>API<sp/>functions<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>***************************************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="_flash_c_c26_x4__ns_8h_1a2873808d6fc3c3627b7b882f5d8416d9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAPI_STATUS_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000000<sp/>//<sp/>Function<sp/>completed<sp/>successfully</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="_flash_c_c26_x4__ns_8h_1ac803ba38608b907c9a37edbaea6f60d5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAPI_STATUS_FSM_BUSY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000001<sp/>//<sp/>FSM<sp/>is<sp/>Busy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="_flash_c_c26_x4__ns_8h_1a6dc7f17a0e39cb30c6b27926ae88e2a6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAPI_STATUS_FSM_READY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000002<sp/>//<sp/>FSM<sp/>is<sp/>Ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="_flash_c_c26_x4__ns_8h_1a7d203641570dd4058f88fae7ca494584" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAPI_STATUS_INCORRECT_DATABUFFER_LENGTH<sp/>0x00000003<sp/>//<sp/>Incorrect<sp/>parameter<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="_flash_c_c26_x4__ns_8h_1a58b3728c010c8de7007a1a625c61b5e4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAPI_STATUS_FSM_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000004<sp/>//<sp/>Operation<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="_flash_c_c26_x4__ns_8h_1aeebd047aab907390b464d1eccfe71f1a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAPI_STATUS_ADDRESS_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000005<sp/>//<sp/>Operation<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="_flash_c_c26_x4__ns_8h_1a78e4e78e6e095f136c3ba1c24ddacd74" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAPI_STATUS_ADDRESS_ALIGN_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000006<sp/>//<sp/>addr<sp/>alignment<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="_flash_c_c26_x4__ns_8h_1a1a49674f1f9451f319d78ca7581a0405" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAPI_STATUS_BANK_NUM_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000007<sp/>//<sp/>bank<sp/>number<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="_flash_c_c26_x4__ns_8h_1a1b0f4ed91254c5de6af25204d2496e08" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAPI_STATUS_NOSUPPORT_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000008<sp/>//<sp/>Flash<sp/>API<sp/>is<sp/>not<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="_flash_c_c26_x4__ns_8h_1ac8d3cee2ad642a8e7a8155112cc25953" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAPI_STATUS_UNPROTECT_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000009<sp/>//<sp/>can&apos;t<sp/>unprotect<sp/>for<sp/>saved<sp/>setting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">int_fast16_t<sp/><ref refid="_flash_c_c26_x4__ns_8h_1a4012b64038ebe0cf6285a7a058589ab5" kindref="member">FlashOpen</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_flash_c_c26_x4__ns_8h_1add15fdf73e8ee763bf06a5244da4fc38" kindref="member">FlashClose</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">uint32_t<sp/><ref refid="_flash_c_c26_x4__ns_8h_1aca0d39806f2d9bec6a341712d242647d" kindref="member">FlashProtectionGet</ref>(uint32_t<sp/>ui32SectorAddress);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">uint32_t<sp/><ref refid="_flash_c_c26_x4__ns_8h_1ace3e1af81dafa8192dc1cd583d246ce9" kindref="member">FlashSectorErase</ref>(uint32_t<sp/>ui32SectorAddress);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">uint32_t<sp/><ref refid="_flash_c_c26_x4__ns_8h_1a0d891d79df6dbba0288b15a8c30c1331" kindref="member">FlashProgram</ref>(uint8_t<sp/>*pui8DataBuffer,<sp/>uint32_t<sp/>ui32Address,<sp/>uint32_t<sp/>ui32Count);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">uint32_t<sp/><ref refid="_flash_c_c26_x4__ns_8h_1ad1138abe16257199fbacb5822542919e" kindref="member">FlashProgram4X</ref>(uint8_t<sp/>*pui8DataBuffer,<sp/>uint32_t<sp/>ui32Address,<sp/>uint32_t<sp/>ui32Count);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">uint32_t<sp/><ref refid="_flash_c_c26_x4__ns_8h_1ae6a0b07bfbddf6d21e0dbbd7753e4b30" kindref="member">FlashSectorSizeGet</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">uint32_t<sp/><ref refid="_flash_c_c26_x4__ns_8h_1a79bccd4cdbd7930d880df9e185935d41" kindref="member">FlashSizeGet</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_nvs_flash_FlashCC26X4_ns_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="source/ti/drivers/nvs/flash/FlashCC26X4_ns.h"/>
  </compounddef>
</doxygen>
