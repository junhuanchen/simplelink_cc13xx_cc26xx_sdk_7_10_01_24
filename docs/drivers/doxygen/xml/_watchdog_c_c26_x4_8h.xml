<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_watchdog_c_c26_x4_8h" kind="file" language="C++">
    <compoundname>WatchdogCC26X4.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes refid="_watchdog_8h" local="no">ti/drivers/Watchdog.h</includes>
    <includes local="no">ti/drivers/dpl/HwiP.h</includes>
    <incdepgraph>
      <node id="1588">
        <label>stdbool.h</label>
      </node>
      <node id="1587">
        <label>stdint.h</label>
      </node>
      <node id="1590">
        <label>ti/drivers/dpl/HwiP.h</label>
      </node>
      <node id="1586">
        <label>WatchdogCC26X4.h</label>
        <link refid="_watchdog_c_c26_x4_8h"/>
        <childnode refid="1587" relation="include">
        </childnode>
        <childnode refid="1588" relation="include">
        </childnode>
        <childnode refid="1589" relation="include">
        </childnode>
        <childnode refid="1590" relation="include">
        </childnode>
      </node>
      <node id="1589">
        <label>ti/drivers/Watchdog.h</label>
        <link refid="_watchdog_8h"/>
        <childnode refid="1587" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_watchdog_c_c26_x4___h_w_attrs" prot="public">WatchdogCC26X4_HWAttrs</innerclass>
    <innerclass refid="struct_watchdog_c_c26_x4___object" prot="public">WatchdogCC26X4_Object</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_watchdog_c_c26_x4_8h_1a48441e11f5cd10887f3a917749ea4532" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_watchdog___fxn_table" kindref="compound">Watchdog_FxnTable</ref></type>
        <definition>const Watchdog_FxnTable WatchdogCC26X4_fxnTable</definition>
        <argsstring></argsstring>
        <name>WatchdogCC26X4_fxnTable</name>
        <briefdescription>
<para>Watchdog function table for CC26X4. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/watchdog/WatchdogCC26X4.h" line="175" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Watchdog driver implementation for CC13X4/CC26X4. </para>    </briefdescription>
    <detaileddescription>
<para><hruler/>
</para><para><heading level="1">Driver include</heading>
</para><para>The Watchdog header file should be included in an application as follows: <programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/Watchdog.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/watchdog/WatchdogCC26X4.h&gt;</highlight></codeline>
</programlisting></para><para>Refer to <ref refid="_watchdog_8h" kindref="compound">Watchdog.h</ref> for a complete description of APIs.</para><para><heading level="1">Overview</heading>
</para><para>The general Watchdog API should be used in application code, i.e. <ref refid="_watchdog_8h_1a26795f67f599b74de830ca7bf36bdced" kindref="member">Watchdog_open()</ref> should be used instead of WatchdogCC26X4_open(). The board file will define the device specific config, and casting in the general API will ensure that the correct device specific functions are called.</para><para><heading level="1">General Behavior</heading>
</para><para>This Watchdog driver implementation is designed to operate on a CC13X4/CC26X4 device. Before using the Watchdog on CC13X4/CC26X4, the Watchdog driver is initialized by calling <ref refid="_watchdog_8h_1afaadfb59be17661ae95562f2081355e7" kindref="member">Watchdog_init()</ref>. The Watchdog HW is configured by calling <ref refid="_watchdog_8h_1a26795f67f599b74de830ca7bf36bdced" kindref="member">Watchdog_open()</ref>. Once opened, the Watchdog will count down from the reload value specified in <ref refid="struct_watchdog_c_c26_x4___h_w_attrs" kindref="compound">WatchdogCC26X4_HWAttrs</ref>. If it times out, a reset signal will be generated. To prevent a reset, <ref refid="_watchdog_8h_1a396decd6b1807db10c636f9987c3be4c" kindref="member">Watchdog_clear()</ref> must be called to reload the timer.</para><para>The Watchdog counts down at the rate of the device clock SCLK_LF. SCLK_LF will tick at different rates depending on the SCLK_LF source selected in CCFG, ranging between 31250 Hz and 32768 Hz. The Watchdog driver internally calculates the correct tick value depending on the target SCLK_LF source selected in CCFG. RCOSC_LF is an inherently inaccurate clock source and will present variations around the target 32768 Hz frequency. These inaccuracies have to be taken into consideration at the application level if RSCOC_LF is selected as the source of SCLK_LF.</para><para>The reload value from which the Watchdog timer counts down may be changed during runtime using <ref refid="_watchdog_8h_1a63ea82dda83e42e236578b9810e56880" kindref="member">Watchdog_setReload()</ref>. This value should be specified in Watchdog clock ticks and should not exceed &quot;2^32 - 1&quot;. This corresponds to a timeout period of 131071 seconds, calculated at the highest rate of 32768 kHz. If the reload value is set to zero, the Watchdog reset is immediately generated.</para><para><ref refid="_watchdog_8h_1a1c0dfea7011b06f303d01afb631ffbdd" kindref="member">Watchdog_close()</ref> is <bold>not</bold> supported by this driver implementation. Once started, the Watchdog timer can only be stopped by a hardware reset.</para><para><bold>No</bold> CC13X4/CC26X4 specific command has been implemented. Any call to <ref refid="_watchdog_8h_1a513c121c62f277318a7c35b0b2bdc869" kindref="member">Watchdog_control()</ref> will receive the return code Watchdog_STATUS_UNDEFINEDCMD.</para><para>The Watchdog module available on CC13X4/CC26X4 devices does not support reset masking or interrupt generation. Therefore, the two parameters <ref refid="struct_watchdog___params_1a94b5d650f8beb7dce719360404039ccf" kindref="member">Watchdog_Params::resetMode</ref> and <ref refid="struct_watchdog___params_1a710aaa2504356ab3d3f9a27ac19ddb85" kindref="member">Watchdog_Params::callbackFxn</ref> in the <ref refid="struct_watchdog___params" kindref="compound">Watchdog_Params</ref> struct are not supported and will be ignored by the Watchdog driver.</para><para><heading level="1">Power Management</heading>
</para><para>Once started, the Watchdog will keep running in Active, Idle and Standby mode.</para><para><heading level="1">Supported Functions</heading>
</para><para>| Generic API Function | API Function | Description | |---------------------------<mdash/> |-------------------------------<mdash/> |------------------------------------------------<mdash/> | | <ref refid="_watchdog_8h_1afaadfb59be17661ae95562f2081355e7" kindref="member">Watchdog_init()</ref> | WatchdogCC26X4_init() | Initialize Watchdog driver | | <ref refid="_watchdog_8h_1a26795f67f599b74de830ca7bf36bdced" kindref="member">Watchdog_open()</ref> | WatchdogCC26X4_open() | Initialize Watchdog HW and set system dependencies | | <ref refid="_watchdog_8h_1a396decd6b1807db10c636f9987c3be4c" kindref="member">Watchdog_clear()</ref> | WatchdogCC26X4_clear() | Reload Watchdog counter | | <ref refid="_watchdog_8h_1a63ea82dda83e42e236578b9810e56880" kindref="member">Watchdog_setReload()</ref> | WatchdogCC26X4_setReload() | Update Watchdog timer reload value in clock ticks | | <ref refid="_watchdog_8h_1a7b93cd0bd3a6f11aa28b0c7219755979" kindref="member">Watchdog_convertMsToTicks()</ref> | WatchdogCC26X4_convertMsToTicks() | Converts milliseconds to clock ticks |</para><para><simplesect kind="note"><para>All calls should go through the generic API. Please refer to <ref refid="_watchdog_8h" kindref="compound">Watchdog.h</ref> for a complete description of the generic APIs.</para></simplesect>
<heading level="1">Use Cases</heading>
</para><para><heading level="2">Basic Watchdog</heading>
</para><para>In this basic watchdog example, the application is expected to start the Watchdog timer by calling <ref refid="_watchdog_8h_1a26795f67f599b74de830ca7bf36bdced" kindref="member">Watchdog_open()</ref>. If needed, <ref refid="_watchdog_8h_1a63ea82dda83e42e236578b9810e56880" kindref="member">Watchdog_setReload()</ref> may be called to change the timeout period. If all monitored tasks are doing alright, <ref refid="_watchdog_8h_1a396decd6b1807db10c636f9987c3be4c" kindref="member">Watchdog_clear()</ref> should be called regularly to reload the counter so as to restart the timeout period and to avoid the Watchdog resetting the device. If the <ref refid="_watchdog_8h_1a396decd6b1807db10c636f9987c3be4c" kindref="member">Watchdog_clear()</ref> is missed and the Watchdog timer is allowed to timeout, the device will be reset.</para><para>The following code example shows how to correctly initialize the driver&apos;s parameters, start the Watchdog timer and modify at runtime the timeout period. <programlisting><codeline><highlight class="normal">Watchdog_Handle<sp/>handle;</highlight></codeline>
<codeline><highlight class="normal">Watchdog_Params<sp/>params;</highlight></codeline>
<codeline><highlight class="normal">uint32_t<sp/>tickValue;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Watchdog_init();</highlight></codeline>
<codeline><highlight class="normal">Watchdog_Params_init(&amp;params);</highlight></codeline>
<codeline><highlight class="normal">handle<sp/>=<sp/>Watchdog_open(Watchdog_configIndex,<sp/>&amp;params);</highlight></codeline>
<codeline><highlight class="normal">//<sp/>set<sp/>timeout<sp/>period<sp/>to<sp/>100<sp/>ms</highlight></codeline>
<codeline><highlight class="normal">tickValue<sp/>=<sp/>Watchdog_convertMsToTicks(handle,<sp/>100);</highlight></codeline>
<codeline><highlight class="normal">Watchdog_setReload(handle,<sp/>tickValue);</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2022,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*!****************************************************************************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>@file<sp/><sp/><sp/><sp/><sp/><sp/><sp/>WatchdogCC26X4.h</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/>@brief<sp/><sp/><sp/><sp/><sp/><sp/>Watchdog<sp/>driver<sp/>implementation<sp/>for<sp/>CC13X4/CC26X4</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Driver<sp/>include<sp/>#</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>Watchdog<sp/>header<sp/>file<sp/>should<sp/>be<sp/>included<sp/>in<sp/>an<sp/>application<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/>@code</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/>#include<sp/>&lt;ti/drivers/Watchdog.h&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/><sp/>#include<sp/>&lt;ti/drivers/watchdog/WatchdogCC26X4.h&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/>@endcode</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/>Refer<sp/>to<sp/>@ref<sp/>Watchdog.h<sp/>for<sp/>a<sp/>complete<sp/>description<sp/>of<sp/>APIs.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Overview<sp/>#</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>general<sp/>Watchdog<sp/>API<sp/>should<sp/>be<sp/>used<sp/>in<sp/>application<sp/>code,<sp/>i.e.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/>#Watchdog_open()<sp/>should<sp/>be<sp/>used<sp/>instead<sp/>of<sp/>WatchdogCC26X4_open().<sp/>The<sp/>board</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/><sp/>file<sp/>will<sp/>define<sp/>the<sp/>device<sp/>specific<sp/>config,<sp/>and<sp/>casting<sp/>in<sp/>the<sp/>general<sp/>API</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/><sp/>will<sp/>ensure<sp/>that<sp/>the<sp/>correct<sp/>device<sp/>specific<sp/>functions<sp/>are<sp/>called.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>General<sp/>Behavior<sp/>#</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>Watchdog<sp/>driver<sp/>implementation<sp/>is<sp/>designed<sp/>to<sp/>operate<sp/>on<sp/>a<sp/>CC13X4/CC26X4</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/>device.<sp/>Before<sp/>using<sp/>the<sp/>Watchdog<sp/>on<sp/>CC13X4/CC26X4,<sp/>the<sp/>Watchdog<sp/>driver<sp/>is</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/><sp/>initialized<sp/>by<sp/>calling<sp/>#Watchdog_init().<sp/>The<sp/>Watchdog<sp/>HW<sp/>is<sp/>configured<sp/>by</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/>calling<sp/>#Watchdog_open().<sp/>Once<sp/>opened,<sp/>the<sp/>Watchdog<sp/>will<sp/>count<sp/>down<sp/>from</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>reload<sp/>value<sp/>specified<sp/>in<sp/>#WatchdogCC26X4_HWAttrs.<sp/>If<sp/>it<sp/>times<sp/>out,<sp/>a<sp/>reset</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/><sp/>signal<sp/>will<sp/>be<sp/>generated.<sp/>To<sp/>prevent<sp/>a<sp/>reset,<sp/>#Watchdog_clear()<sp/>must<sp/>be<sp/>called</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>reload<sp/>the<sp/>timer.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>Watchdog<sp/>counts<sp/>down<sp/>at<sp/>the<sp/>rate<sp/>of<sp/>the<sp/>device<sp/>clock<sp/>SCLK_LF.<sp/>SCLK_LF<sp/>will</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/><sp/>tick<sp/>at<sp/>different<sp/>rates<sp/>depending<sp/>on<sp/>the<sp/>SCLK_LF<sp/>source<sp/>selected<sp/>in<sp/>CCFG,</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/><sp/>ranging<sp/>between<sp/>31250<sp/>Hz<sp/>and<sp/>32768<sp/>Hz.<sp/>The<sp/>Watchdog<sp/>driver<sp/>internally<sp/>calculates</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>correct<sp/>tick<sp/>value<sp/>depending<sp/>on<sp/>the<sp/>target<sp/>SCLK_LF<sp/>source<sp/>selected<sp/>in<sp/>CCFG.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/><sp/>RCOSC_LF<sp/>is<sp/>an<sp/>inherently<sp/>inaccurate<sp/>clock<sp/>source<sp/>and<sp/>will<sp/>present<sp/>variations</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/><sp/>around<sp/>the<sp/>target<sp/>32768<sp/>Hz<sp/>frequency.<sp/>These<sp/>inaccuracies<sp/>have<sp/>to<sp/>be<sp/>taken<sp/>into</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/><sp/>consideration<sp/>at<sp/>the<sp/>application<sp/>level<sp/>if<sp/>RSCOC_LF<sp/>is<sp/>selected<sp/>as<sp/>the<sp/>source</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/><sp/>of<sp/>SCLK_LF.</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>reload<sp/>value<sp/>from<sp/>which<sp/>the<sp/>Watchdog<sp/>timer<sp/>counts<sp/>down<sp/>may<sp/>be<sp/>changed</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/><sp/>during<sp/>runtime<sp/>using<sp/>#Watchdog_setReload().<sp/>This<sp/>value<sp/>should<sp/>be<sp/>specified</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/><sp/>in<sp/>Watchdog<sp/>clock<sp/>ticks<sp/>and<sp/>should<sp/>not<sp/>exceed<sp/>&quot;2^32<sp/>-<sp/>1&quot;.<sp/>This<sp/>corresponds<sp/>to</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>timeout<sp/>period<sp/>of<sp/>131071<sp/>seconds,<sp/>calculated<sp/>at<sp/>the<sp/>highest<sp/>rate<sp/>of<sp/>32768</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/><sp/>kHz.<sp/>If<sp/>the<sp/>reload<sp/>value<sp/>is<sp/>set<sp/>to<sp/>zero,<sp/>the<sp/>Watchdog<sp/>reset<sp/>is<sp/>immediately</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/><sp/>generated.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/><sp/>Watchdog_close()<sp/>is<sp/>&lt;b&gt;not&lt;/b&gt;<sp/>supported<sp/>by<sp/>this<sp/>driver<sp/>implementation.<sp/>Once</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/><sp/>started,<sp/>the<sp/>Watchdog<sp/>timer<sp/>can<sp/>only<sp/>be<sp/>stopped<sp/>by<sp/>a<sp/>hardware<sp/>reset.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/><sp/>&lt;b&gt;No&lt;/b&gt;<sp/>CC13X4/CC26X4<sp/>specific<sp/>command<sp/>has<sp/>been<sp/>implemented.<sp/>Any<sp/>call<sp/>to</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/><sp/>Watchdog_control()<sp/>will<sp/>receive<sp/>the<sp/>return<sp/>code<sp/>Watchdog_STATUS_UNDEFINEDCMD.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>Watchdog<sp/>module<sp/>available<sp/>on<sp/>CC13X4/CC26X4<sp/>devices<sp/>does<sp/>not<sp/>support<sp/>reset</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/><sp/>masking<sp/>or<sp/>interrupt<sp/>generation.<sp/>Therefore,<sp/>the<sp/>two<sp/>parameters<sp/>\ref</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/><sp/>Watchdog_Params.resetMode<sp/>and<sp/>\ref<sp/>Watchdog_Params.callbackFxn<sp/>in<sp/>the<sp/>\ref</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/><sp/>Watchdog_Params<sp/>struct<sp/>are<sp/>not<sp/>supported<sp/>and<sp/>will<sp/>be<sp/>ignored<sp/>by<sp/>the<sp/>Watchdog</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/><sp/>driver.</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Power<sp/>Management<sp/>#</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/><sp/>Once<sp/>started,<sp/>the<sp/>Watchdog<sp/>will<sp/>keep<sp/>running<sp/>in<sp/>Active,<sp/>Idle<sp/>and<sp/>Standby<sp/>mode.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>#<sp/>Supported<sp/>Functions<sp/>#</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/><sp/>|<sp/>Generic<sp/>API<sp/>Function<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>API<sp/>Function<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Description<sp/>|</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/><sp/>|------------------------------<sp/>|----------------------------------</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>|---------------------------------------------------<sp/>|<sp/>|<sp/>#Watchdog_init()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>WatchdogCC26X4_init()<sp/>|</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>Watchdog<sp/>driver<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>|<sp/>#Watchdog_open()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>WatchdogCC26X4_open()<sp/>|</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>Watchdog<sp/>HW<sp/>and<sp/>set<sp/>system<sp/>dependencies<sp/>|<sp/>|<sp/>#Watchdog_clear()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>WatchdogCC26X4_clear()<sp/>|</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>Reload<sp/>Watchdog<sp/>counter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>|<sp/>#Watchdog_setReload()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>WatchdogCC26X4_setReload()<sp/>|</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>Update<sp/>Watchdog<sp/>timer<sp/>reload<sp/>value<sp/>in<sp/>clock<sp/>ticks<sp/><sp/>|<sp/>|<sp/>#Watchdog_convertMsToTicks()<sp/><sp/>|</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>WatchdogCC26X4_convertMsToTicks()<sp/>|<sp/>Converts<sp/>milliseconds<sp/>to<sp/>clock<sp/>ticks<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>All<sp/>calls<sp/>should<sp/>go<sp/>through<sp/>the<sp/>generic<sp/>API.<sp/>Please<sp/>refer<sp/>to<sp/>@ref<sp/>Watchdog.h<sp/>for<sp/>a</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/><sp/>complete<sp/>description<sp/>of<sp/>the<sp/>generic<sp/>APIs.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>#<sp/>Use<sp/>Cases<sp/>#</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>##<sp/>Basic<sp/>Watchdog<sp/>#</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/><sp/>In<sp/>this<sp/>basic<sp/>watchdog<sp/>example,<sp/>the<sp/>application<sp/>is<sp/>expected<sp/>to<sp/>start<sp/>the<sp/>Watchdog</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/><sp/>timer<sp/>by<sp/>calling<sp/>#Watchdog_open().<sp/>If<sp/>needed,<sp/>#Watchdog_setReload()<sp/>may<sp/>be</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/><sp/>called<sp/>to<sp/>change<sp/>the<sp/>timeout<sp/>period.<sp/>If<sp/>all<sp/>monitored<sp/>tasks<sp/>are<sp/>doing<sp/>alright,</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/><sp/>#Watchdog_clear()<sp/>should<sp/>be<sp/>called<sp/>regularly<sp/>to<sp/>reload<sp/>the<sp/>counter<sp/>so<sp/>as<sp/>to</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/><sp/>restart<sp/>the<sp/>timeout<sp/>period<sp/>and<sp/>to<sp/>avoid<sp/>the<sp/>Watchdog<sp/>resetting<sp/>the<sp/>device.</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>#Watchdog_clear()<sp/>is<sp/>missed<sp/>and<sp/>the<sp/>Watchdog<sp/>timer<sp/>is<sp/>allowed<sp/>to</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/><sp/>timeout,<sp/>the<sp/>device<sp/>will<sp/>be<sp/>reset.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>following<sp/>code<sp/>example<sp/>shows<sp/>how<sp/>to<sp/>correctly<sp/>initialize<sp/>the<sp/>driver&apos;s</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/><sp/>parameters,<sp/>start<sp/>the<sp/>Watchdog<sp/>timer<sp/>and<sp/>modify<sp/>at<sp/>runtime<sp/>the<sp/>timeout<sp/>period.</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/><sp/>@code</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/><sp/>Watchdog_Handle<sp/>handle;</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/><sp/>Watchdog_Params<sp/>params;</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/><sp/>uint32_t<sp/>tickValue;</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/><sp/>Watchdog_init();</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/><sp/>Watchdog_Params_init(&amp;params);</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/><sp/>handle<sp/>=<sp/>Watchdog_open(Watchdog_configIndex,<sp/>&amp;params);</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/><sp/>//<sp/>set<sp/>timeout<sp/>period<sp/>to<sp/>100<sp/>ms</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/><sp/>tickValue<sp/>=<sp/>Watchdog_convertMsToTicks(handle,<sp/>100);</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/><sp/>Watchdog_setReload(handle,<sp/>tickValue);</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/><sp/>@endcode</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ti_drivers_watchdog_WatchdogCC26X4__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_watchdog_WatchdogCC26X4__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_watchdog_8h" kindref="compound">ti/drivers/Watchdog.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ti/drivers/dpl/HwiP.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="comment">/*<sp/>Add<sp/>WatchdogCC26X4_STATUS_*<sp/>macros<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="comment">/*<sp/>Add<sp/>WatchdogCC26X4_CMD_*<sp/>macros<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_watchdog___fxn_table" kindref="compound">Watchdog_FxnTable</ref><sp/><ref refid="_watchdog_c_c26_x4_8h_1a48441e11f5cd10887f3a917749ea4532" kindref="member">WatchdogCC26X4_fxnTable</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="struct_watchdog_c_c26_x4___h_w_attrs" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182" refid="struct_watchdog_c_c26_x4___h_w_attrs_1a79048f255912f0f2a2ab9b7bbfb76e10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="struct_watchdog_c_c26_x4___h_w_attrs_1a79048f255912f0f2a2ab9b7bbfb76e10" kindref="member">reloadValue</ref>;<sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal">}<sp/><ref refid="struct_watchdog_c_c26_x4___h_w_attrs" kindref="compound">WatchdogCC26X4_HWAttrs</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="struct_watchdog_c_c26_x4___object" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192" refid="struct_watchdog_c_c26_x4___object_1af1082df0ef21af11f0ae75e882d65ff4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_watchdog_c_c26_x4___object_1af1082df0ef21af11f0ae75e882d65ff4" kindref="member">isOpen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flag<sp/>for<sp/>open/close<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="struct_watchdog_c_c26_x4___object_1a79177e165b25afc11ea4c5d1b9fc6edf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_watchdog_8h_1ab1aa5862661c88a16b9d7bc12709d51e" kindref="member">Watchdog_DebugMode</ref><sp/><ref refid="struct_watchdog_c_c26_x4___object_1a79177e165b25afc11ea4c5d1b9fc6edf" kindref="member">debugStallMode</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Mode<sp/>to<sp/>stall<sp/>Watchdog<sp/>at<sp/>breakpoints<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Watchdog<sp/>SYS/BIOS<sp/>objects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="struct_watchdog_c_c26_x4___object_1a52c891d7d23cc2c058a05f69ec9458d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>HwiP_Struct<sp/><ref refid="struct_watchdog_c_c26_x4___object_1a52c891d7d23cc2c058a05f69ec9458d1" kindref="member">hwi</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Hwi<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">}<sp/><ref refid="struct_watchdog_c_c26_x4___object" kindref="compound">WatchdogCC26X4_Object</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_watchdog_WatchdogCC26X4__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="source/ti/drivers/watchdog/WatchdogCC26X4.h"/>
  </compounddef>
</doxygen>
