<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_attestation___p_s_a_8h" kind="file" language="C++">
    <compoundname>Attestation_PSA.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">psa/initial_attestation.h</includes>
    <incdepgraph>
      <node id="452">
        <label>Attestation_PSA.h</label>
        <link refid="_attestation___p_s_a_8h"/>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
      </node>
      <node id="453">
        <label>stdint.h</label>
      </node>
      <node id="454">
        <label>stddef.h</label>
      </node>
      <node id="455">
        <label>psa/initial_attestation.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_attestation___p_s_a_8h_1adae34ab06767ff5cd69edda974dd0d7e" prot="public" static="no">
        <name>ATTESTATION_PSA_MAX_TOKEN_SIZE</name>
        <initializer>(PSA_INITIAL_ATTEST_MAX_TOKEN_SIZE)</initializer>
        <briefdescription>
<para>Maximum attestation token size. </para>        </briefdescription>
        <detaileddescription>
<para>The maximum size of an attestation token that can be generated by the attestation service. Used to configure buffers for services that verify the produced tokens. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/attestation/Attestation_PSA.h" line="103" column="9" bodyfile="source/ti/drivers/attestation/Attestation_PSA.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_attestation___p_s_a_8h_1afef599da005b041792cb0ceb5ec95cb9" prot="public" static="no">
        <name>ATTESTATION_PSA_STATUS_SUCCESS</name>
        <initializer>((int_fast16_t)0)</initializer>
        <briefdescription>
<para>Successful status code. </para>        </briefdescription>
        <detaileddescription>
<para>Functions return ATTESTATION_PSA_STATUS_SUCCESS if the function was executed successfully. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/attestation/Attestation_PSA.h" line="111" column="9" bodyfile="source/ti/drivers/attestation/Attestation_PSA.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_attestation___p_s_a_8h_1a74220b6e52845f7b1fcce471bbb18a93" prot="public" static="no">
        <name>ATTESTATION_PSA_STATUS_ERROR</name>
        <initializer>((int_fast16_t)-1)</initializer>
        <briefdescription>
<para>Generic error status code. </para>        </briefdescription>
        <detaileddescription>
<para>Functions return ATTESTATION_PSA_STATUS_ERROR if the function was not executed successfully and no more pertinent error code could be returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/attestation/Attestation_PSA.h" line="119" column="9" bodyfile="source/ti/drivers/attestation/Attestation_PSA.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_attestation___p_s_a_8h_1a4477d306686e168244101edef692e3bb" prot="public" static="no">
        <name>ATTESTATION_PSA_STATUS_RESOURCE_UNAVAILABLE</name>
        <initializer>((int_fast16_t)-2)</initializer>
        <briefdescription>
<para>An error status code returned if the hardware or software resource is currently unavailable. </para>        </briefdescription>
        <detaileddescription>
<para>Attestation driver implementations may have hardware or software limitations on how many clients can simultaneously perform operations. This status code is returned if the mutual exclusion mechanism signals that an operation cannot currently be performed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/attestation/Attestation_PSA.h" line="129" column="9" bodyfile="source/ti/drivers/attestation/Attestation_PSA.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_attestation___p_s_a_8h_1acb1b97c7955abb3828189bc8a6c16279" prot="public" static="no">
        <name>ATTESTATION_PSA_STATUS_INVALID_INPUTS</name>
        <initializer>((int_fast16_t)-3)</initializer>
        <briefdescription>
<para>Operation failed due to invalid inputs. </para>        </briefdescription>
        <detaileddescription>
<para>Functions return ATTESTATION_PSA_STATUS_INVALID_INPUTS if input validation fails. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/attestation/Attestation_PSA.h" line="136" column="9" bodyfile="source/ti/drivers/attestation/Attestation_PSA.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_attestation___p_s_a_8h_1a488ab0f5f2f4b8dd6c1f21ce72d5d8b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t Attestation_PSA_getToken</definition>
        <argsstring>(const uint8_t *auth_challenge, size_t challenge_size, uint8_t *token_buf, size_t token_buf_size, size_t *token_size)</argsstring>
        <name>Attestation_PSA_getToken</name>
        <param>
          <type>const uint8_t *</type>
          <declname>auth_challenge</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>challenge_size</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>token_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>token_buf_size</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>token_size</declname>
        </param>
        <briefdescription>
<para>Get initial attestation token. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">auth_challenge</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer where challenge input is stored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">challenge_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of challenge object in bytes. Must be 32, 48, or 64-bytes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">token_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer where attestation token will be stored, with a maximum buffer size of ATTESTATION_PSA_MAX_TOKEN_SIZE. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">token_buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of allocated buffer for token, in bytes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">token_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the token that has been returned, in bytes.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="_attestation___p_s_a_8h_1afef599da005b041792cb0ceb5ec95cb9" kindref="member">ATTESTATION_PSA_STATUS_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation succeeded. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_attestation___p_s_a_8h_1a74220b6e52845f7b1fcce471bbb18a93" kindref="member">ATTESTATION_PSA_STATUS_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation failed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_attestation___p_s_a_8h_1a4477d306686e168244101edef692e3bb" kindref="member">ATTESTATION_PSA_STATUS_RESOURCE_UNAVAILABLE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The required hardware resource was not available. Try again later. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_attestation___p_s_a_8h_1acb1b97c7955abb3828189bc8a6c16279" kindref="member">ATTESTATION_PSA_STATUS_INVALID_INPUTS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Input validation failed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/attestation/Attestation_PSA.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_attestation___p_s_a_8h_1a18dbb8605897cf2d88b1f8b9e062036f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t Attestation_PSA_getTokenSize</definition>
        <argsstring>(size_t challenge_size, size_t *token_size)</argsstring>
        <name>Attestation_PSA_getTokenSize</name>
        <param>
          <type>size_t</type>
          <declname>challenge_size</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>token_size</declname>
        </param>
        <briefdescription>
<para>Get the exact size of initial attestation token in bytes. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the size of the IAT token. It can be used if the caller dynamically allocates memory for the token buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">challenge_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of challenge object in bytes. Must be 32, 48, or 64-bytes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">token_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the token in bytes, which is created by initial attestation service.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="_attestation___p_s_a_8h_1afef599da005b041792cb0ceb5ec95cb9" kindref="member">ATTESTATION_PSA_STATUS_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation succeeded. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_attestation___p_s_a_8h_1a74220b6e52845f7b1fcce471bbb18a93" kindref="member">ATTESTATION_PSA_STATUS_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation failed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_attestation___p_s_a_8h_1a4477d306686e168244101edef692e3bb" kindref="member">ATTESTATION_PSA_STATUS_RESOURCE_UNAVAILABLE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The required hardware resource was not available. Try again later. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_attestation___p_s_a_8h_1acb1b97c7955abb3828189bc8a6c16279" kindref="member">ATTESTATION_PSA_STATUS_INVALID_INPUTS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Input validation failed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/attestation/Attestation_PSA.h" line="181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_attestation___p_s_a_8h_1ad43165aaa334ef93f969b5b28764ee76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Attestation_PSA_init</definition>
        <argsstring>(void)</argsstring>
        <name>Attestation_PSA_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function initializes the Attestation module. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>This function must also be called before any other Attestation driver APIs. This function call does not modify any peripheral registers. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/attestation/Attestation_PSA.h" line="190" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Attestation driver header. </para>    </briefdescription>
    <detaileddescription>
<para>============================================================================</para><para><heading level="1">Overview</heading>
</para><para>This file contains the APIs to generate an attestation token and obtain the expected token size to create a buffer to store the generated token. Attestation_PSA APIs are only available when TF-M is enabled and this file provides the non-secure interface to the Attestation_PSA driver.</para><para><heading level="1">Usage</heading>
</para><para>After calling the Attestation initialization function, a token can be generated using the challenge provided by the attestation service to Attestation_PSA API. To generate a token, Attestation_PSA APIs assume that attestation keys are pre-provisioned in the pre-provisioned key sector.</para><para><anchor id="_attestation___p_s_a_8h_1ti_drivers_attestation_Attestation_PSA_Example"/> <heading level="2">Generating an attestation token</heading>
</para><para><programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/attestation/Attestation_PSA.h&gt;</highlight></codeline>
<codeline><highlight class="normal">....</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Initialize<sp/>Attestation_PSA<sp/>driver</highlight></codeline>
<codeline><highlight class="normal">Attestation_PSA_init();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>A<sp/>buffer<sp/>of<sp/>maximum<sp/>allowed<sp/>token<sp/>size<sp/>to<sp/>store<sp/>the<sp/>generated<sp/>token</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Alternatively,<sp/>application<sp/>can<sp/>obtain<sp/>the<sp/>size<sp/>of<sp/>token<sp/>using<sp/>Attestation_PSA_getTokenSize()</highlight></codeline>
<codeline><highlight class="normal">//<sp/>to<sp/>dynamically<sp/>allocate<sp/>buffer<sp/>of<sp/>required<sp/>size</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>token[ATTESTATION_PSA_MAX_TOKEN_SIZE];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>A<sp/>buffer<sp/>for<sp/>nonce<sp/>or<sp/>challenge<sp/>provided<sp/>by<sp/>the<sp/>attestation<sp/>service<sp/>to<sp/>prevent<sp/>replay<sp/>or<sp/>re-use<sp/>of<sp/>token</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>nonce[32];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">int_fast16_t<sp/>status;</highlight></codeline>
<codeline><highlight class="normal">size_t<sp/>tokenLength;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Generate<sp/>the<sp/>token</highlight></codeline>
<codeline><highlight class="normal">status<sp/>=<sp/>Attestation_PSA_getToken(&amp;nonce[0],<sp/>sizeof(nonce),<sp/>&amp;token[0],<sp/>sizeof(token),<sp/>&amp;tokenLength);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(status<sp/>!=<sp/>ATTESTATION_PSA_STATUS_SUCCESS)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>//<sp/>Handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2022-2023,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor">#ifndef<sp/>ti_drivers_attestation_Attestation_PSA__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_attestation_Attestation_PSA__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;psa/initial_attestation.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="_attestation___p_s_a_8h_1adae34ab06767ff5cd69edda974dd0d7e" refkind="member"><highlight class="preprocessor">#define<sp/>ATTESTATION_PSA_MAX_TOKEN_SIZE<sp/>(PSA_INITIAL_ATTEST_MAX_TOKEN_SIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="_attestation___p_s_a_8h_1afef599da005b041792cb0ceb5ec95cb9" refkind="member"><highlight class="preprocessor">#define<sp/>ATTESTATION_PSA_STATUS_SUCCESS<sp/>((int_fast16_t)0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="_attestation___p_s_a_8h_1a74220b6e52845f7b1fcce471bbb18a93" refkind="member"><highlight class="preprocessor">#define<sp/>ATTESTATION_PSA_STATUS_ERROR<sp/>((int_fast16_t)-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="_attestation___p_s_a_8h_1a4477d306686e168244101edef692e3bb" refkind="member"><highlight class="preprocessor">#define<sp/>ATTESTATION_PSA_STATUS_RESOURCE_UNAVAILABLE<sp/>((int_fast16_t)-2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="_attestation___p_s_a_8h_1acb1b97c7955abb3828189bc8a6c16279" refkind="member"><highlight class="preprocessor">#define<sp/>ATTESTATION_PSA_STATUS_INVALID_INPUTS<sp/>((int_fast16_t)-3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">int_fast16_t<sp/><ref refid="_attestation___p_s_a_8h_1a488ab0f5f2f4b8dd6c1f21ce72d5d8b3" kindref="member">Attestation_PSA_getToken</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*auth_challenge,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>challenge_size,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*token_buf,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>token_buf_size,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*token_size);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">int_fast16_t<sp/><ref refid="_attestation___p_s_a_8h_1a18dbb8605897cf2d88b1f8b9e062036f" kindref="member">Attestation_PSA_getTokenSize</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>challenge_size,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*token_size);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_attestation___p_s_a_8h_1ad43165aaa334ef93f969b5b28764ee76" kindref="member">Attestation_PSA_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_attestation_Attestation_PSA__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="source/ti/drivers/attestation/Attestation_PSA.h"/>
  </compounddef>
</doxygen>
