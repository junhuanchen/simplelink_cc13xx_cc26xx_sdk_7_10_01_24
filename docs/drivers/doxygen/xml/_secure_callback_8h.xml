<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_secure_callback_8h" kind="file" language="C++">
    <compoundname>SecureCallback.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includes refid="_list_8h" local="no">ti/drivers/utils/List.h</includes>
    <includedby refid="_a_e_s_c_b_c_c_c26_x4__s_8h" local="no">AESCBCCC26X4_s.h</includedby>
    <includedby refid="_a_e_s_c_c_m_c_c26_x4__s_8h" local="no">AESCCMCC26X4_s.h</includedby>
    <includedby refid="_a_e_s_c_m_a_c_c_c26_x4__s_8h" local="no">AESCMACCC26X4_s.h</includedby>
    <includedby refid="_a_e_s_c_t_r_c_c26_x4__s_8h" local="no">AESCTRCC26X4_s.h</includedby>
    <includedby refid="_a_e_s_e_c_b_c_c26_x4__s_8h" local="no">AESECBCC26X4_s.h</includedby>
    <includedby refid="_a_e_s_g_c_m_c_c26_x4__s_8h" local="no">AESGCMCC26X4_s.h</includedby>
    <includedby refid="_e_c_d_h_c_c26_x4__s_8h" local="no">ECDHCC26X4_s.h</includedby>
    <includedby refid="_e_c_d_s_a_c_c26_x4__s_8h" local="no">ECDSACC26X4_s.h</includedby>
    <includedby refid="_s_h_a2_c_c26_x4__s_8h" local="no">SHA2CC26X4_s.h</includedby>
    <includedby refid="_t_r_n_g_c_c26_x4__s_8h" local="no">TRNGCC26X4_s.h</includedby>
    <incdepgraph>
      <node id="1277">
        <label>stdbool.h</label>
      </node>
      <node id="1275">
        <label>stdint.h</label>
      </node>
      <node id="1274">
        <label>stddef.h</label>
      </node>
      <node id="1273">
        <label>SecureCallback.h</label>
        <link refid="_secure_callback_8h"/>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
      </node>
      <node id="1276">
        <label>ti/drivers/utils/List.h</label>
        <link refid="_list_8h"/>
        <childnode refid="1275" relation="include">
        </childnode>
        <childnode refid="1277" relation="include">
        </childnode>
        <childnode refid="1274" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1282">
        <label>AESCTRCC26X4_s.h</label>
        <link refid="_a_e_s_c_t_r_c_c26_x4__s_8h"/>
      </node>
      <node id="1288">
        <label>TRNGCC26X4_s.h</label>
        <link refid="_t_r_n_g_c_c26_x4__s_8h"/>
        <childnode refid="1289" relation="include">
        </childnode>
      </node>
      <node id="1287">
        <label>SHA2CC26X4_s.h</label>
        <link refid="_s_h_a2_c_c26_x4__s_8h"/>
      </node>
      <node id="1281">
        <label>AESCMACCC26X4_s.h</label>
        <link refid="_a_e_s_c_m_a_c_c_c26_x4__s_8h"/>
      </node>
      <node id="1285">
        <label>ECDHCC26X4_s.h</label>
        <link refid="_e_c_d_h_c_c26_x4__s_8h"/>
      </node>
      <node id="1286">
        <label>ECDSACC26X4_s.h</label>
        <link refid="_e_c_d_s_a_c_c26_x4__s_8h"/>
      </node>
      <node id="1289">
        <label>TRNGCC26X4_ns.h</label>
        <link refid="_t_r_n_g_c_c26_x4__ns_8h"/>
      </node>
      <node id="1278">
        <label>SecureCallback.h</label>
        <link refid="_secure_callback_8h"/>
        <childnode refid="1279" relation="include">
        </childnode>
        <childnode refid="1280" relation="include">
        </childnode>
        <childnode refid="1281" relation="include">
        </childnode>
        <childnode refid="1282" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
        <childnode refid="1284" relation="include">
        </childnode>
        <childnode refid="1285" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
        <childnode refid="1287" relation="include">
        </childnode>
        <childnode refid="1288" relation="include">
        </childnode>
      </node>
      <node id="1283">
        <label>AESECBCC26X4_s.h</label>
        <link refid="_a_e_s_e_c_b_c_c26_x4__s_8h"/>
      </node>
      <node id="1280">
        <label>AESCCMCC26X4_s.h</label>
        <link refid="_a_e_s_c_c_m_c_c26_x4__s_8h"/>
      </node>
      <node id="1279">
        <label>AESCBCCC26X4_s.h</label>
        <link refid="_a_e_s_c_b_c_c_c26_x4__s_8h"/>
      </node>
      <node id="1284">
        <label>AESGCMCC26X4_s.h</label>
        <link refid="_a_e_s_g_c_m_c_c26_x4__s_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_secure_callback___object" prot="public">SecureCallback_Object</innerclass>
    <innerclass refid="struct_secure_callback___config" prot="public">SecureCallback_Config</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_secure_callback_8h_1ab71a7ed3a26b82b8149837677290077c" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* SecureCallback_FuncPtr) (uintptr_t arg)</definition>
        <argsstring>)(uintptr_t arg)</argsstring>
        <name>SecureCallback_FuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/tfm/SecureCallback.h" line="49" column="1" bodyfile="source/ti/drivers/tfm/SecureCallback.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_secure_callback_8h_1aa399e0dacc4a7f12c0b796c14aeed7d1" prot="public" static="no">
        <type>struct <ref refid="struct_secure_callback___object" kindref="compound">SecureCallback_Object</ref></type>
        <definition>typedef struct SecureCallback_Object  SecureCallback_Object</definition>
        <argsstring></argsstring>
        <name>SecureCallback_Object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/tfm/SecureCallback.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_secure_callback_8h_1a60f6e941f489ee5c8b7b9613c4666b04" prot="public" static="no">
        <type><ref refid="struct_secure_callback___object" kindref="compound">SecureCallback_Object</ref> *</type>
        <definition>typedef SecureCallback_Object* SecureCallback_Handle</definition>
        <argsstring></argsstring>
        <name>SecureCallback_Handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/tfm/SecureCallback.h" line="59" column="1" bodyfile="source/ti/drivers/tfm/SecureCallback.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_secure_callback_8h_1a0f22e979fd549e6918d26bc4b5aabe8e" prot="public" static="no">
        <type>struct <ref refid="struct_secure_callback___config" kindref="compound">SecureCallback_Config</ref></type>
        <definition>typedef struct SecureCallback_Config  SecureCallback_Config</definition>
        <argsstring></argsstring>
        <name>SecureCallback_Config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/tfm/SecureCallback.h" line="65" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_secure_callback_8h_1a50a6bf8f8e736c9234544629497c0399" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SecureCallback_init</definition>
        <argsstring>(void)</argsstring>
        <name>SecureCallback_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize SecureCallback driver. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This API is only available to non-secure code. Must be called once prior to invoking any other SecureCallback APIs. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/tfm/SecureCallback.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_secure_callback_8h_1a31ac0711c7716888bf3517616c8083f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_secure_callback_8h_1a60f6e941f489ee5c8b7b9613c4666b04" kindref="member">SecureCallback_Handle</ref></type>
        <definition>SecureCallback_Handle SecureCallback_construct</definition>
        <argsstring>(SecureCallback_Object *object, SecureCallback_FuncPtr fxn, uintptr_t arg)</argsstring>
        <name>SecureCallback_construct</name>
        <param>
          <type><ref refid="struct_secure_callback___object" kindref="compound">SecureCallback_Object</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="_secure_callback_8h_1ab71a7ed3a26b82b8149837677290077c" kindref="member">SecureCallback_FuncPtr</ref></type>
          <declname>fxn</declname>
        </param>
        <param>
          <type>uintptr_t</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Construct a callback object and adds it to the servicing list. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This API is only available to non-secure code.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_secure_callback___object" kindref="compound">SecureCallback_Object</ref> structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fxn</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to this object&apos;s callback function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">arg</parametername>
</parameternamelist>
<parameterdescription>
<para>A uint argument passed to the callback function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/tfm/SecureCallback.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_secure_callback_8h_1adb12172c0c1ded6444fbd4c2ee9d5654" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SecureCallback_destruct</definition>
        <argsstring>(SecureCallback_Object *object)</argsstring>
        <name>SecureCallback_destruct</name>
        <param>
          <type><ref refid="struct_secure_callback___object" kindref="compound">SecureCallback_Object</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Destruct a callback object, removing it from the servicing list. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This API is only available to non-secure code.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_secure_callback___object" kindref="compound">SecureCallback_Object</ref> structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/tfm/SecureCallback.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_secure_callback_8h_1add81e02a3d4061df85c6a491e407193a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SecureCallback_post</definition>
        <argsstring>(SecureCallback_Handle handle)</argsstring>
        <name>SecureCallback_post</name>
        <param>
          <type><ref refid="_secure_callback_8h_1a60f6e941f489ee5c8b7b9613c4666b04" kindref="member">SecureCallback_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Triggers the dispatcher targeting the specified callback. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This API is available to both non-secure and secure code.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="_secure_callback_8h_1a60f6e941f489ee5c8b7b9613c4666b04" kindref="member">SecureCallback_Handle</ref> pointer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>The callback object must have been created by <ref refid="_secure_callback_8h_1a31ac0711c7716888bf3517616c8083f2" kindref="member">SecureCallback_construct()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/tfm/SecureCallback.h" line="106" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2022<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>-<sp/>http://www.ti.com</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>========<sp/>SecureCallback.h<sp/>========</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ti_drivers_tfm_SecureCallback__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_tfm_SecureCallback__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_list_8h" kindref="compound">ti/drivers/utils/List.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="_secure_callback_8h_1ab71a7ed3a26b82b8149837677290077c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_secure_callback_8h_1ab71a7ed3a26b82b8149837677290077c" kindref="member">SecureCallback_FuncPtr</ref>)(uintptr_t<sp/>arg);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="struct_secure_callback___object" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_secure_callback___object" kindref="compound">SecureCallback_Object</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53" refid="struct_secure_callback___object_1a48e011dffe5c563bcde93476d4a2d542" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_list___elem__" kindref="compound">List_Elem</ref><sp/><ref refid="struct_secure_callback___object_1a48e011dffe5c563bcde93476d4a2d542" kindref="member">elem</ref>;</highlight></codeline>
<codeline lineno="54" refid="struct_secure_callback___object_1a810a02f5350299a460594b3b5bef92d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uintptr_t<sp/><ref refid="struct_secure_callback___object_1a810a02f5350299a460594b3b5bef92d0" kindref="member">arg</ref>;</highlight></codeline>
<codeline lineno="55" refid="struct_secure_callback___object_1a0bd24e28f124f171702e23223c3bb626" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_secure_callback___object_1a0bd24e28f124f171702e23223c3bb626" kindref="member">pending</ref>;</highlight></codeline>
<codeline lineno="56" refid="struct_secure_callback___object_1a16c39719dd604f89f5c35f29ac7d293d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_secure_callback_8h_1ab71a7ed3a26b82b8149837677290077c" kindref="member">SecureCallback_FuncPtr</ref><sp/><ref refid="struct_secure_callback___object_1a16c39719dd604f89f5c35f29ac7d293d" kindref="member">fxn</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}<sp/><ref refid="_secure_callback_8h_1aa399e0dacc4a7f12c0b796c14aeed7d1" kindref="member">SecureCallback_Object</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="_secure_callback_8h_1a60f6e941f489ee5c8b7b9613c4666b04" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_secure_callback___object" kindref="compound">SecureCallback_Object</ref><sp/>*<ref refid="_secure_callback_8h_1a60f6e941f489ee5c8b7b9613c4666b04" kindref="member">SecureCallback_Handle</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="struct_secure_callback___config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_secure_callback___config" kindref="compound">SecureCallback_Config</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63" refid="struct_secure_callback___config_1a4b8addbdc077640ddcb6b97a235b2370" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_secure_callback___config_1a4b8addbdc077640ddcb6b97a235b2370" kindref="member">intNumber</ref>;</highlight></codeline>
<codeline lineno="64" refid="struct_secure_callback___config_1afb1f979deb633076152faa940bc4f062" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_secure_callback___config_1afb1f979deb633076152faa940bc4f062" kindref="member">intPriority</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}<sp/><ref refid="_secure_callback_8h_1a0f22e979fd549e6918d26bc4b5aabe8e" kindref="member">SecureCallback_Config</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_secure_callback_8h_1a50a6bf8f8e736c9234544629497c0399" kindref="member">SecureCallback_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">SecureCallback_Handle<sp/><ref refid="_secure_callback_8h_1a31ac0711c7716888bf3517616c8083f2" kindref="member">SecureCallback_construct</ref>(<ref refid="struct_secure_callback___object" kindref="compound">SecureCallback_Object</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_secure_callback_8h_1ab71a7ed3a26b82b8149837677290077c" kindref="member">SecureCallback_FuncPtr</ref><sp/><ref refid="struct_secure_callback___object_1a16c39719dd604f89f5c35f29ac7d293d" kindref="member">fxn</ref>,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uintptr_t<sp/><ref refid="struct_secure_callback___object_1a810a02f5350299a460594b3b5bef92d0" kindref="member">arg</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_secure_callback_8h_1adb12172c0c1ded6444fbd4c2ee9d5654" kindref="member">SecureCallback_destruct</ref>(<ref refid="struct_secure_callback___object" kindref="compound">SecureCallback_Object</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_secure_callback_8h_1add81e02a3d4061df85c6a491e407193a" kindref="member">SecureCallback_post</ref>(SecureCallback_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_tfm_SecureCallback__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="source/ti/drivers/tfm/SecureCallback.h"/>
  </compounddef>
</doxygen>
