<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_power_c_c26_x2__helpers_8h" kind="file" language="C++">
    <compoundname>PowerCC26X2_helpers.h</compoundname>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="1178">
        <label>PowerCC26X2_helpers.h</label>
        <link refid="_power_c_c26_x2__helpers_8h"/>
        <childnode refid="1179" relation="include">
        </childnode>
      </node>
      <node id="1179">
        <label>string.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1aec0ec947bed524fe268c308cf7b385fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_oscCtlClearXtal</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_oscCtlClearXtal</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a25f3ee9db4ef20f258eb62dc5542c8a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_pmctlDisableJtag</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_pmctlDisableJtag</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1af8cb45bea5779759c0b86d069e2e7095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_sysctrlShutdownWithAbort</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_sysctrlShutdownWithAbort</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a1ac17a496e83d23165fe7649e5ba9c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_prcmEnableCacheRetention</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_prcmEnableCacheRetention</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1ae39e1c069ce0410dd8ccd088429b1131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_oschfSwitchToRcosc</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_oschfSwitchToRcosc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1acea332c033c8729823b393fd60e9e573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t PowerCC26X2_oscClockSourceGet</definition>
        <argsstring>(uint32_t ui32SrcClk)</argsstring>
        <name>PowerCC26X2_oscClockSourceGet</name>
        <param>
          <type>uint32_t</type>
          <declname>ui32SrcClk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a611574ad76624279116cf83155b8c529" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_oscDisableQualifiers</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_oscDisableQualifiers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a08be0e16324c4dab172154a5214dbda9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PowerCC26X2_getOscHfSourceReady</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_getOscHfSourceReady</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a241a9395b93a694535ccc0de7be60ae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t PowerCC26X2_oschfTrySwitchToXosc</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_oschfTrySwitchToXosc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a11dfaead43f39e5201cdc69d446c2a95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PowerCC26X2_oscIsHPOSCEnabledWithHfDerivedLfClock</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_oscIsHPOSCEnabledWithHfDerivedLfClock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a886bdcf083347ffac0432b7454277ca9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_enableTCXOQual</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_enableTCXOQual</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a3aac2bbb767245efd61956bfd4f7dbb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_disableTCXOQual</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_disableTCXOQual</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a3d787b89c0e85f05fe8b4951727b9b2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_switchToTCXO</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_switchToTCXO</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a7bc600fba4cb5e042553c3ae04d31c51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_turnOnXosc</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_turnOnXosc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a8b39cf1260739c8e0c24c3181d733a0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_sysCtrlStandby</definition>
        <argsstring>(bool retainCache)</argsstring>
        <name>PowerCC26X2_sysCtrlStandby</name>
        <param>
          <type>bool</type>
          <declname>retainCache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1acad147e88be6a6aba3b71f1b5ac379bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_sysCtrlVoltageConditionalControl</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_sysCtrlVoltageConditionalControl</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1afc249ce96b823e928fdb69a3d788d16c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_sysCtrlIdle</definition>
        <argsstring>(uint32_t vimsPdMode)</argsstring>
        <name>PowerCC26X2_sysCtrlIdle</name>
        <param>
          <type>uint32_t</type>
          <declname>vimsPdMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a8c1086379ffd3c6f8c883475868d2f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_setPeriphDependency</definition>
        <argsstring>(uint32_t prcmPeriph)</argsstring>
        <name>PowerCC26X2_setPeriphDependency</name>
        <param>
          <type>uint32_t</type>
          <declname>prcmPeriph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a7d7f505ae30c8a5275fb1892eb65b7f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_releasePeriphDependency</definition>
        <argsstring>(uint32_t prcmPeriph)</argsstring>
        <name>PowerCC26X2_releasePeriphDependency</name>
        <param>
          <type>uint32_t</type>
          <declname>prcmPeriph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a1f3c3e9e2d93c5eba1a22f0ccf86d9e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_setPeriphDeepSleepEnable</definition>
        <argsstring>(uint32_t prcmPeriph)</argsstring>
        <name>PowerCC26X2_setPeriphDeepSleepEnable</name>
        <param>
          <type>uint32_t</type>
          <declname>prcmPeriph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a2996e6a14f8f0ef7f933fdc353cf9e6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t PowerCC26X2_sysCtrlGetResetSource</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_sysCtrlGetResetSource</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a146ec27f164931e660f03d511650626b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_setSubSecIncToXoscLf</definition>
        <argsstring>(uint32_t subsecinc)</argsstring>
        <name>PowerCC26X2_setSubSecIncToXoscLf</name>
        <param>
          <type>uint32_t</type>
          <declname>subsecinc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a258deed0c22fb06434c09c63d51eb0b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_sysCtrlUpdateVoltageRegulator</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_sysCtrlUpdateVoltageRegulator</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a7e10008fa257d319b53ee2b9e4a0882f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_sysCtrlReset</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_sysCtrlReset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a6db1cda8675f9599747ed55da409ecd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_updateSubSecInc</definition>
        <argsstring>(bool firstLF)</argsstring>
        <name>PowerCC26X2_updateSubSecInc</name>
        <param>
          <type>bool</type>
          <declname>firstLF</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a593b1384f28b804847dc93bb85ad7ada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t PowerCC26X2_readCtrim</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_readCtrim</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1aa293bad32a7ad7f26337d77cad9319a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t PowerCC26X2_readCtrimFract</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_readCtrimFract</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a9b4ca07624893d195b754055da7d900c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t PowerCC26X2_readRtrim</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_readRtrim</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1ae436d8938287625a96be1728cc05e41c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_writeCtrim</definition>
        <argsstring>(int32_t newValue)</argsstring>
        <name>PowerCC26X2_writeCtrim</name>
        <param>
          <type>int32_t</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1ad1b05a553bbf4d962060c5c950c4ca87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_writeCtrimFract</definition>
        <argsstring>(int32_t newValue)</argsstring>
        <name>PowerCC26X2_writeCtrimFract</name>
        <param>
          <type>int32_t</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a62ff2b126ab9d2b0e7278611997970a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_writeCtrimFractEn</definition>
        <argsstring>(int32_t newValue)</argsstring>
        <name>PowerCC26X2_writeCtrimFractEn</name>
        <param>
          <type>int32_t</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1af6f4853376abc8916143dc77b39d6c05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_writeRtrim</definition>
        <argsstring>(int32_t newValue)</argsstring>
        <name>PowerCC26X2_writeRtrim</name>
        <param>
          <type>int32_t</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1a33c320b35cc656fb84ce64db814bd05f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_setTdcClkSrc24M</definition>
        <argsstring>(void)</argsstring>
        <name>PowerCC26X2_setTdcClkSrc24M</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_power_c_c26_x2__helpers_8h_1ae45c306cc4a56946bf5d21187bae7a1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PowerCC26X2_setAclkRefSrc</definition>
        <argsstring>(uint32_t source)</argsstring>
        <name>PowerCC26X2_setAclkRefSrc</name>
        <param>
          <type>uint32_t</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/power/PowerCC26X2_helpers.h" line="77" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021-2023<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>-<sp/>http://www.ti.com</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>file<sp/>is<sp/>for<sp/>internal<sp/>use<sp/>only.<sp/>These<sp/>functions<sp/>are<sp/>called<sp/>by<sp/>the<sp/>power</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>driver<sp/>during<sp/>normal<sp/>operation,<sp/>but<sp/>may<sp/>trigger<sp/>a<sp/>secure<sp/>gateway<sp/>instruction</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>on<sp/>devices<sp/>where<sp/>the<sp/>core<sp/>supports<sp/>it.<sp/>Other<sp/>calls<sp/>to<sp/>these<sp/>functions<sp/>may</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>have<sp/>a<sp/>negative<sp/>impact<sp/>on<sp/>the<sp/>power<sp/>driver.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Functions<sp/>implemented<sp/>in<sp/>PowerCC26X2_helpers.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1aec0ec947bed524fe268c308cf7b385fa" kindref="member">PowerCC26X2_oscCtlClearXtal</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1a25f3ee9db4ef20f258eb62dc5542c8a4" kindref="member">PowerCC26X2_pmctlDisableJtag</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1af8cb45bea5779759c0b86d069e2e7095" kindref="member">PowerCC26X2_sysctrlShutdownWithAbort</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1a1ac17a496e83d23165fe7649e5ba9c9d" kindref="member">PowerCC26X2_prcmEnableCacheRetention</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1ae39e1c069ce0410dd8ccd088429b1131" kindref="member">PowerCC26X2_oschfSwitchToRcosc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">uint32_t<sp/><ref refid="_power_c_c26_x2__helpers_8h_1acea332c033c8729823b393fd60e9e573" kindref="member">PowerCC26X2_oscClockSourceGet</ref>(uint32_t<sp/>ui32SrcClk);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1a611574ad76624279116cf83155b8c529" kindref="member">PowerCC26X2_oscDisableQualifiers</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1a08be0e16324c4dab172154a5214dbda9" kindref="member">PowerCC26X2_getOscHfSourceReady</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">uint32_t<sp/><ref refid="_power_c_c26_x2__helpers_8h_1a241a9395b93a694535ccc0de7be60ae6" kindref="member">PowerCC26X2_oschfTrySwitchToXosc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1a11dfaead43f39e5201cdc69d446c2a95" kindref="member">PowerCC26X2_oscIsHPOSCEnabledWithHfDerivedLfClock</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1a886bdcf083347ffac0432b7454277ca9" kindref="member">PowerCC26X2_enableTCXOQual</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1a3aac2bbb767245efd61956bfd4f7dbb1" kindref="member">PowerCC26X2_disableTCXOQual</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1a3d787b89c0e85f05fe8b4951727b9b2e" kindref="member">PowerCC26X2_switchToTCXO</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1a7bc600fba4cb5e042553c3ae04d31c51" kindref="member">PowerCC26X2_turnOnXosc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1a8b39cf1260739c8e0c24c3181d733a0a" kindref="member">PowerCC26X2_sysCtrlStandby</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retainCache);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1acad147e88be6a6aba3b71f1b5ac379bc" kindref="member">PowerCC26X2_sysCtrlVoltageConditionalControl</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1afc249ce96b823e928fdb69a3d788d16c" kindref="member">PowerCC26X2_sysCtrlIdle</ref>(uint32_t<sp/>vimsPdMode);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1a8c1086379ffd3c6f8c883475868d2f73" kindref="member">PowerCC26X2_setPeriphDependency</ref>(uint32_t<sp/>prcmPeriph);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1a7d7f505ae30c8a5275fb1892eb65b7f7" kindref="member">PowerCC26X2_releasePeriphDependency</ref>(uint32_t<sp/>prcmPeriph);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1a1f3c3e9e2d93c5eba1a22f0ccf86d9e3" kindref="member">PowerCC26X2_setPeriphDeepSleepEnable</ref>(uint32_t<sp/>prcmPeriph);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">uint32_t<sp/><ref refid="_power_c_c26_x2__helpers_8h_1a2996e6a14f8f0ef7f933fdc353cf9e6f" kindref="member">PowerCC26X2_sysCtrlGetResetSource</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1a146ec27f164931e660f03d511650626b" kindref="member">PowerCC26X2_setSubSecIncToXoscLf</ref>(uint32_t<sp/>subsecinc);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1a258deed0c22fb06434c09c63d51eb0b8" kindref="member">PowerCC26X2_sysCtrlUpdateVoltageRegulator</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1a7e10008fa257d319b53ee2b9e4a0882f" kindref="member">PowerCC26X2_sysCtrlReset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Functions<sp/>implemented<sp/>in<sp/>PowerCC26X2_calibrateRCOSC_helpers.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1a6db1cda8675f9599747ed55da409ecd9" kindref="member">PowerCC26X2_updateSubSecInc</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>firstLF);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">int32_t<sp/><ref refid="_power_c_c26_x2__helpers_8h_1a593b1384f28b804847dc93bb85ad7ada" kindref="member">PowerCC26X2_readCtrim</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">int32_t<sp/><ref refid="_power_c_c26_x2__helpers_8h_1aa293bad32a7ad7f26337d77cad9319a6" kindref="member">PowerCC26X2_readCtrimFract</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">int32_t<sp/><ref refid="_power_c_c26_x2__helpers_8h_1a9b4ca07624893d195b754055da7d900c" kindref="member">PowerCC26X2_readRtrim</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1ae436d8938287625a96be1728cc05e41c" kindref="member">PowerCC26X2_writeCtrim</ref>(int32_t<sp/>newValue);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1ad1b05a553bbf4d962060c5c950c4ca87" kindref="member">PowerCC26X2_writeCtrimFract</ref>(int32_t<sp/>newValue);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1a62ff2b126ab9d2b0e7278611997970a8" kindref="member">PowerCC26X2_writeCtrimFractEn</ref>(int32_t<sp/>newValue);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1af6f4853376abc8916143dc77b39d6c05" kindref="member">PowerCC26X2_writeRtrim</ref>(int32_t<sp/>newValue);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1a33c320b35cc656fb84ce64db814bd05f" kindref="member">PowerCC26X2_setTdcClkSrc24M</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_power_c_c26_x2__helpers_8h_1ae45c306cc4a56946bf5d21187bae7a1b" kindref="member">PowerCC26X2_setAclkRefSrc</ref>(uint32_t<sp/>source);</highlight></codeline>
    </programlisting>
    <location file="source/ti/drivers/power/PowerCC26X2_helpers.h"/>
  </compounddef>
</doxygen>
