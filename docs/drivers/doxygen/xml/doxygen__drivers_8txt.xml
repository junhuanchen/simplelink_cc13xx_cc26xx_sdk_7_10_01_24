<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="doxygen__drivers_8txt" kind="file" language="C++">
    <compoundname>doxygen_drivers.txt</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="doxygen__drivers_8txt_1aedbb9b8e52e225489bcb7bfb3633391c" prot="public" static="no" mutable="no">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> peripheral <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> for TI s SimpleLink portfolio The <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> a real time operating</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating and NoRTOS with examples provided for each variant the drivers are supported by SysConfig to enable easy re configuration of the drivers par FreeRTOS</definition>
        <argsstring></argsstring>
        <name>FreeRTOS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="45" column="1" bodyfile="source/etc/doxygen_drivers.txt" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="doxygen__drivers_8txt_1a771604b2d92f9f155ab2752d01b6b335" prot="public" static="no" mutable="no">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> peripheral <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> for TI s SimpleLink portfolio The <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> a real time operating and NoRTOS with examples provided for each variant</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation******************************************************************************* TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating and NoRTOS with examples provided for each variant Lastly</definition>
        <argsstring></argsstring>
        <name>Lastly</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="46" column="1" bodyfile="source/etc/doxygen_drivers.txt" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="doxygen__drivers_8txt_1aff808b3e121e9dc1c6e5b489b5f1eb57" prot="public" static="no" mutable="no">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> peripheral <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> for TI s SimpleLink portfolio The <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> a real time operating and NoRTOS with examples provided for each variant the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are supported by SysConfig to enable easy re configuration <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> par</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation******************************************************************************* TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating and NoRTOS with examples provided for each variant the drivers are supported by SysConfig to enable easy re configuration of the drivers par Features</definition>
        <argsstring></argsstring>
        <name>Features</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="49" column="1" bodyfile="source/etc/doxygen_drivers.txt" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" prot="public" static="no" mutable="no">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective of peripheral <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> for TI s SimpleLink portfolio The <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating and NoRTOS with examples provided for each variant the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are supported by SysConfig to enable easy re configuration of the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> par and NoRTOS&lt;/b &gt; li&lt; b &gt; Thread safe APIs&lt;/b &gt; li&lt; b &gt; SysConfig support&lt;/b &gt; li&lt; b &gt; Example usage&lt;/b &gt; li&lt; b &gt; Power management support&lt;/b &gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation******************************************************************************* TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating and NoRTOS with examples provided for each variant the drivers are supported by SysConfig to enable easy re configuration of the drivers par and NoRTOS&lt;/b&gt; li&lt;b&gt; Thread safe APIs&lt;/b&gt; li&lt;b&gt; SysConfig support&lt;/b&gt; li&lt;b&gt; Example usage&lt;/b&gt; li&lt;b&gt; Power management support&lt;/b&gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists of</definition>
        <argsstring></argsstring>
        <name>of</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="60" column="1" bodyfile="source/etc/doxygen_drivers.txt" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="doxygen__drivers_8txt_1a3c817d7b43d954183fdd3561a1d0b749" prot="public" static="no" mutable="no">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> peripheral <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> for TI s SimpleLink portfolio The <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> a real time operating and NoRTOS with examples provided for each variant the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are supported by SysConfig to enable easy re configuration <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> par and NoRTOS&lt;/b &gt; li&lt; b &gt; Thread safe APIs&lt;/b &gt; li&lt; b &gt; SysConfig support&lt;/b &gt; li&lt; b &gt; Example usage&lt;/b &gt; li&lt; b &gt; Power management support&lt;/b &gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation******************************************************************************* TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating and NoRTOS with examples provided for each variant the drivers are supported by SysConfig to enable easy re configuration of the drivers par and NoRTOS&lt;/b&gt; li&lt;b&gt; Thread safe APIs&lt;/b&gt; li&lt;b&gt; SysConfig support&lt;/b&gt; li&lt;b&gt; Example usage&lt;/b&gt; li&lt;b&gt; Power management support&lt;/b&gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists open</definition>
        <argsstring></argsstring>
        <name>open</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="66" column="1" bodyfile="source/etc/doxygen_drivers.txt" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" prot="public" static="no" mutable="no">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> peripheral <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> for TI s SimpleLink portfolio The <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> a real time operating and NoRTOS with examples provided for each variant the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are supported by SysConfig to enable easy re configuration <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> par and NoRTOS&lt;/b &gt; li&lt; b &gt; Thread safe APIs&lt;/b &gt; li&lt; b &gt; SysConfig support&lt;/b &gt; li&lt; b &gt; Example usage&lt;/b &gt; li&lt; b &gt; Power management support&lt;/b &gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation******************************************************************************* TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating and NoRTOS with examples provided for each variant the drivers are supported by SysConfig to enable easy re configuration of the drivers par and NoRTOS&lt;/b&gt; li&lt;b&gt; Thread safe APIs&lt;/b&gt; li&lt;b&gt; SysConfig support&lt;/b&gt; li&lt;b&gt; Example usage&lt;/b&gt; li&lt;b&gt; Power management support&lt;/b&gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists use</definition>
        <argsstring></argsstring>
        <name>use</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="66" column="1" bodyfile="source/etc/doxygen_drivers.txt" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="doxygen__drivers_8txt_1ad6afb9886f1650d5cfe379e0a3252df8" prot="public" static="no" mutable="no">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> peripheral <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> for TI s SimpleLink portfolio The <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> a real time operating and NoRTOS with examples provided for each variant the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are supported by SysConfig to enable easy re configuration <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> par and NoRTOS&lt;/b &gt; li&lt; b &gt; Thread safe APIs&lt;/b &gt; li&lt; b &gt; SysConfig support&lt;/b &gt; li&lt; b &gt; Example usage&lt;/b &gt; li&lt; b &gt; Power management support&lt;/b &gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation******************************************************************************* TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating and NoRTOS with examples provided for each variant the drivers are supported by SysConfig to enable easy re configuration of the drivers par and NoRTOS&lt;/b&gt; li&lt;b&gt; Thread safe APIs&lt;/b&gt; li&lt;b&gt; SysConfig support&lt;/b&gt; li&lt;b&gt; Example usage&lt;/b&gt; li&lt;b&gt; Power management support&lt;/b&gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise stated</definition>
        <argsstring></argsstring>
        <name>stated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="67" column="1" bodyfile="source/etc/doxygen_drivers.txt" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="doxygen__drivers_8txt_1af2a708cd58d191b2a04f35b77c7f6440" prot="public" static="no" mutable="no">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> peripheral <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> for TI s SimpleLink portfolio The <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> a real time operating and NoRTOS with examples provided for each variant the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are supported by SysConfig to enable easy re configuration <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> par and NoRTOS&lt;/b &gt; li&lt; b &gt; Thread safe APIs&lt;/b &gt; li&lt; b &gt; SysConfig support&lt;/b &gt; li&lt; b &gt; Example usage&lt;/b &gt; li&lt; b &gt; Power management support&lt;/b &gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating and NoRTOS with examples provided for each variant the drivers are supported by SysConfig to enable easy re configuration of the drivers par and NoRTOS&lt;/b &gt; li&lt; b &gt; Thread safe APIs&lt;/b &gt; li&lt; b &gt; SysConfig support&lt;/b &gt; li&lt; b &gt; Example usage&lt;/b &gt; li&lt; b &gt; Power management support&lt;/b &gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt; b &gt; may be called multiple times by the application It is only required that the initialization is done once For drivers which have an open function</definition>
        <argsstring></argsstring>
        <name>function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="67" column="1" bodyfile="source/etc/doxygen_drivers.txt" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="doxygen__drivers_8txt_1a9dde05e200276b7b4f889e2c66a7b45e" prot="public" static="no" mutable="no">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> peripheral <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> for TI s SimpleLink portfolio The <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> a real time operating and NoRTOS with examples provided for each variant the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are supported by SysConfig to enable easy re configuration <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> par and NoRTOS&lt;/b &gt; li&lt; b &gt; Thread safe APIs&lt;/b &gt; li&lt; b &gt; SysConfig support&lt;/b &gt; li&lt; b &gt; Example usage&lt;/b &gt; li&lt; b &gt; Power management support&lt;/b &gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt; b &gt;</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation******************************************************************************* TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating and NoRTOS with examples provided for each variant the drivers are supported by SysConfig to enable easy re configuration of the drivers par and NoRTOS&lt;/b&gt; li&lt;b&gt; Thread safe APIs&lt;/b&gt; li&lt;b&gt; SysConfig support&lt;/b&gt; li&lt;b&gt; Example usage&lt;/b&gt; li&lt;b&gt; Power management support&lt;/b&gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt;b&gt; Driver_init&lt;/b &gt;</definition>
        <argsstring></argsstring>
        <name>Driver_init&lt;/b &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="67" column="1" bodyfile="source/etc/doxygen_drivers.txt" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="doxygen__drivers_8txt_1a3feea13105a741d9ee36d2b5c212376d" prot="public" static="no" mutable="no">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> peripheral <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> for TI s SimpleLink portfolio The <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> a real time operating and NoRTOS with examples provided for each variant the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are supported by SysConfig to enable easy re configuration <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> par and NoRTOS&lt;/b &gt; li&lt; b &gt; Thread safe APIs&lt;/b &gt; li&lt; b &gt; SysConfig support&lt;/b &gt; li&lt; b &gt; Example usage&lt;/b &gt; li&lt; b &gt; Power management support&lt;/b &gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt; b &gt; may be called multiple times by the application It is only required that the initialization is done once For <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> which have an <ref refid="doxygen__drivers_8txt_1a3c817d7b43d954183fdd3561a1d0b749" kindref="member">open</ref>&lt; b &gt;</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation******************************************************************************* TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating and NoRTOS with examples provided for each variant the drivers are supported by SysConfig to enable easy re configuration of the drivers par and NoRTOS&lt;/b&gt; li&lt;b&gt; Thread safe APIs&lt;/b&gt; li&lt;b&gt; SysConfig support&lt;/b&gt; li&lt;b&gt; Example usage&lt;/b&gt; li&lt;b&gt; Power management support&lt;/b&gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt;b&gt; may be called multiple times by the application It is only required that the initialization is done once For drivers which have an open&lt;b&gt; Driver_open&lt;/b &gt;</definition>
        <argsstring></argsstring>
        <name>Driver_open&lt;/b &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="69" column="1" bodyfile="source/etc/doxygen_drivers.txt" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="doxygen__drivers_8txt_1a23eda4ea0ef424e8163ad5e90e7357ef" prot="public" static="no" mutable="no">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> peripheral <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> for TI s SimpleLink portfolio The <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> a real time operating and NoRTOS with examples provided for each variant the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are supported by SysConfig to enable easy re configuration <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> par and NoRTOS&lt;/b &gt; li&lt; b &gt; Thread safe APIs&lt;/b &gt; li&lt; b &gt; SysConfig support&lt;/b &gt; li&lt; b &gt; Example usage&lt;/b &gt; li&lt; b &gt; Power management support&lt;/b &gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt; b &gt; may be called multiple times by the application It is only required that the initialization is done once For <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> which have an <ref refid="doxygen__drivers_8txt_1a3c817d7b43d954183fdd3561a1d0b749" kindref="member">open</ref>&lt; b &gt; it must be called per instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver to be used Each instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver corresponds to a unique index in the ref</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation******************************************************************************* TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating and NoRTOS with examples provided for each variant the drivers are supported by SysConfig to enable easy re configuration of the drivers par and NoRTOS&lt;/b&gt; li&lt;b&gt; Thread safe APIs&lt;/b&gt; li&lt;b&gt; SysConfig support&lt;/b&gt; li&lt;b&gt; Example usage&lt;/b&gt; li&lt;b&gt; Power management support&lt;/b&gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt;b&gt; may be called multiple times by the application It is only required that the initialization is done once For drivers which have an open&lt;b&gt; it must be called per instance of the driver to be used Each instance of the driver corresponds to a unique index in the ref driver_configuration</definition>
        <argsstring></argsstring>
        <name>driver_configuration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="72" column="1" bodyfile="source/etc/doxygen_drivers.txt" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="doxygen__drivers_8txt_1aae4cacc66193979b8d54db1c912e2402" prot="public" static="no" mutable="no">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> peripheral <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> for TI s SimpleLink portfolio The <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> a real time operating and NoRTOS with examples provided for each variant the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are supported by SysConfig to enable easy re configuration <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> par and NoRTOS&lt;/b &gt; li&lt; b &gt; Thread safe APIs&lt;/b &gt; li&lt; b &gt; SysConfig support&lt;/b &gt; li&lt; b &gt; Example usage&lt;/b &gt; li&lt; b &gt; Power management support&lt;/b &gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt; b &gt; may be called multiple times by the application It is only required that the initialization is done once For <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> which have an <ref refid="doxygen__drivers_8txt_1a3c817d7b43d954183fdd3561a1d0b749" kindref="member">open</ref>&lt; b &gt; it must be called per instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver to be used Each instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver corresponds to a unique index in the ref&lt; b &gt; Driver_config&lt;/b &gt; Multiple software entities may <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> the same driver concurrently For</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating and NoRTOS with examples provided for each variant the drivers are supported by SysConfig to enable easy re configuration of the drivers par and NoRTOS&lt;/b &gt; li&lt; b &gt; Thread safe APIs&lt;/b &gt; li&lt; b &gt; SysConfig support&lt;/b &gt; li&lt; b &gt; Example usage&lt;/b &gt; li&lt; b &gt; Power management support&lt;/b &gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt; b &gt; may be called multiple times by the application It is only required that the initialization is done once For drivers which have an open&lt; b &gt; it must be called per instance of the driver to be used Each instance of the driver corresponds to a unique index in the ref&lt; b &gt; Driver_config&lt;/b &gt; Multiple software entities may use the same driver concurrently For a Bluetooth or WiFi stack may utilize a driver instance The application may concurrently use the same driver assuming it has opened a unique instance of the driver Let s examine the ADC driver for example include Driver_init h A couple observations from this code example</definition>
        <argsstring></argsstring>
        <name>example</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="73" column="1" bodyfile="source/etc/doxygen_drivers.txt" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="doxygen__drivers_8txt_1aac20f4f02ffddb1b8f77d1db3cb16ae2" prot="public" static="no" mutable="no">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> peripheral <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> for TI s SimpleLink portfolio The <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> a real time operating and NoRTOS with examples provided for each variant the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are supported by SysConfig to enable easy re configuration <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> par and NoRTOS&lt;/b &gt; li&lt; b &gt; Thread safe APIs&lt;/b &gt; li&lt; b &gt; SysConfig support&lt;/b &gt; li&lt; b &gt; Example usage&lt;/b &gt; li&lt; b &gt; Power management support&lt;/b &gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt; b &gt; may be called multiple times by the application It is only required that the initialization is done once For <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> which have an <ref refid="doxygen__drivers_8txt_1a3c817d7b43d954183fdd3561a1d0b749" kindref="member">open</ref>&lt; b &gt; it must be called per instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver to be used Each instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver corresponds to a unique index in the ref&lt; b &gt; Driver_config&lt;/b &gt; Multiple software entities may <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> the same driver concurrently For a Bluetooth or WiFi stack may utilize a driver instance The application may concurrently <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> the same driver assuming it has opened a unique instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver Let s examine the ADC driver for <ref refid="doxygen__drivers_8txt_1aae4cacc66193979b8d54db1c912e2402" kindref="member">example</ref> include Driver_init h A couple observations from this code we <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> the that s all we need</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation******************************************************************************* TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating and NoRTOS with examples provided for each variant the drivers are supported by SysConfig to enable easy re configuration of the drivers par and NoRTOS&lt;/b&gt; li&lt;b&gt; Thread safe APIs&lt;/b&gt; li&lt;b&gt; SysConfig support&lt;/b&gt; li&lt;b&gt; Example usage&lt;/b&gt; li&lt;b&gt; Power management support&lt;/b&gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt;b&gt; may be called multiple times by the application It is only required that the initialization is done once For drivers which have an open&lt;b&gt; it must be called per instance of the driver to be used Each instance of the driver corresponds to a unique index in the ref&lt;b&gt; Driver_config&lt;/b&gt; Multiple software entities may use the same driver concurrently For a Bluetooth or WiFi stack may utilize a driver instance The application may concurrently use the same driver assuming it has opened a unique instance of the driver Let s examine the ADC driver for example include Driver_init h A couple observations from this code we use the that s all we need However</definition>
        <argsstring></argsstring>
        <name>However</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="95" column="1" bodyfile="source/etc/doxygen_drivers.txt" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" prot="public" static="no" mutable="no">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> a real time operating and NoRTOS with examples provided for each variant the drivers are supported by SysConfig to enable easy re configuration <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the drivers par and NoRTOS&lt;/b &gt; li&lt; b &gt; Thread safe APIs&lt;/b &gt; li&lt; b &gt; SysConfig support&lt;/b &gt; li&lt; b &gt; Example usage&lt;/b &gt; li&lt; b &gt; Power management support&lt;/b &gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt; b &gt; may be called multiple times by the application It is only required that the initialization is done once For drivers which have an <ref refid="doxygen__drivers_8txt_1a3c817d7b43d954183fdd3561a1d0b749" kindref="member">open</ref>&lt; b &gt; it must be called per instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver to be used Each instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver corresponds to a unique index in the ref&lt; b &gt; Driver_config&lt;/b &gt; Multiple software entities may <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> the same driver concurrently For a Bluetooth or WiFi stack may utilize a driver instance The application may concurrently <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> the same driver assuming it has opened a unique instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver Let s examine the ADC driver for <ref refid="doxygen__drivers_8txt_1aae4cacc66193979b8d54db1c912e2402" kindref="member">example</ref> include Driver_init h A couple observations from this code we <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> the that s all we need for full details on the ADC and other</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation******************************************************************************* TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating and NoRTOS with examples provided for each variant the drivers are supported by SysConfig to enable easy re configuration of the drivers par and NoRTOS&lt;/b&gt; li&lt;b&gt; Thread safe APIs&lt;/b&gt; li&lt;b&gt; SysConfig support&lt;/b&gt; li&lt;b&gt; Example usage&lt;/b&gt; li&lt;b&gt; Power management support&lt;/b&gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt;b&gt; may be called multiple times by the application It is only required that the initialization is done once For drivers which have an open&lt;b&gt; it must be called per instance of the driver to be used Each instance of the driver corresponds to a unique index in the ref&lt;b&gt; Driver_config&lt;/b&gt; Multiple software entities may use the same driver concurrently For a Bluetooth or WiFi stack may utilize a driver instance The application may concurrently use the same driver assuming it has opened a unique instance of the driver Let s examine the ADC driver for example include Driver_init h A couple observations from this code we use the that s all we need for full details on the ADC and other drivers</definition>
        <argsstring></argsstring>
        <name>drivers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="96" column="1" bodyfile="source/etc/doxygen_drivers.txt" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="doxygen__drivers_8txt_1a3d07cb6d65f07a356ec74fd1f886dbf8" prot="public" static="no" mutable="no">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> peripheral <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> for TI s SimpleLink portfolio The <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> a real time operating and NoRTOS with examples provided for each variant the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are supported by SysConfig to enable easy re configuration <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> par and NoRTOS&lt;/b &gt; li&lt; b &gt; Thread safe APIs&lt;/b &gt; li&lt; b &gt; SysConfig support&lt;/b &gt; li&lt; b &gt; Example usage&lt;/b &gt; li&lt; b &gt; Power management support&lt;/b &gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt; b &gt; may be called multiple times by the application It is only required that the initialization is done once For <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> which have an <ref refid="doxygen__drivers_8txt_1a3c817d7b43d954183fdd3561a1d0b749" kindref="member">open</ref>&lt; b &gt; it must be called per instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver to be used Each instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver corresponds to a unique index in the ref&lt; b &gt; Driver_config&lt;/b &gt; Multiple software entities may <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> the same driver concurrently For a Bluetooth or WiFi stack may utilize a driver instance The application may concurrently <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> the same driver assuming it has opened a unique instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver Let s examine the ADC driver for <ref refid="doxygen__drivers_8txt_1aae4cacc66193979b8d54db1c912e2402" kindref="member">example</ref> include Driver_init h A couple observations from this code we <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> the that s all we need for full details on the ADC and other reference the&lt; b &gt; Drivers and Documentation&lt;/b &gt; section below endparblock *******************************************************************************The Display driver is designed abstract to operations &amp;considerations specific to a given output method *******************************************************************************&lt; TABLE &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TH &gt; Display Driver Interface&lt;/TH &gt;&lt; TH &gt; Implementations&lt;/TH &gt;&lt;/TR &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TD &gt; ref Display h&lt;/TD &gt;&lt; TD &gt; ref DisplayHost h n ref DisplayUart2 h&lt;/TD &gt;&lt;/TR &gt;&lt;/TABLE &gt; *******************************************************************************&lt; TABLE &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TH &gt; Display Driver Interface&lt;/TH &gt;&lt; TH &gt; Implementations&lt;/TH &gt;&lt;/TR &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TD &gt; ref Display h&lt;/TD &gt;&lt; TD &gt; ref DisplaySharp h n ref DisplayHost h n ref DisplayExt h n ref DisplayUart2 h&lt;/TD &gt;&lt;/TR &gt;&lt;/TABLE &gt; *******************************************************************************Logging is a lightweight framework for instrumenting target code *******************************************************************************&lt; TABLE &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TH &gt; Log Interface&lt;/TH &gt;&lt; TH &gt; Sinks&lt;/TH &gt;&lt;/TR &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TD &gt;&lt; a class=&quot;el&quot; href=&quot;../../../tiutils/html/group__ti__log__LOG.html&quot;&gt; Log h&lt;/a &gt;&lt;/TD &gt;&lt; TD &gt; ref LogSinkBuf h&lt;/TD &gt;&lt;/TR &gt;&lt;/TABLE &gt; *******************************************************************************&lt; TABLE &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TH &gt; Log Interface&lt;/TH &gt;&lt; TH &gt; Sinks&lt;/TH &gt;&lt;/TR &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TD &gt;&lt; a class=&quot;el&quot; href=&quot;../../../tiutils/html/group__ti__log__LOG.html&quot;&gt; Log h&lt;/a &gt;&lt;/TD &gt;&lt; TD &gt; ref LogSinkBuf h n ref LogSinkITM h&lt;/TD &gt;&lt;/TR &gt;&lt;/TABLE &gt; *******************************************************************************The NoRTOS framework module is provided to enable <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> without an underlying operating <ref refid="doxygen__drivers_8txt_1a97ee032a54b6aa1a8de247b5b7390756" kindref="member">system</ref> The module provides interfaces used by <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> to perform</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation******************************************************************************* TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating and NoRTOS with examples provided for each variant the drivers are supported by SysConfig to enable easy re configuration of the drivers par and NoRTOS&lt;/b&gt; li&lt;b&gt; Thread safe APIs&lt;/b&gt; li&lt;b&gt; SysConfig support&lt;/b&gt; li&lt;b&gt; Example usage&lt;/b&gt; li&lt;b&gt; Power management support&lt;/b&gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt;b&gt; may be called multiple times by the application It is only required that the initialization is done once For drivers which have an open&lt;b&gt; it must be called per instance of the driver to be used Each instance of the driver corresponds to a unique index in the ref&lt;b&gt; Driver_config&lt;/b&gt; Multiple software entities may use the same driver concurrently For a Bluetooth or WiFi stack may utilize a driver instance The application may concurrently use the same driver assuming it has opened a unique instance of the driver Let s examine the ADC driver for example include Driver_init h A couple observations from this code we use the that s all we need for full details on the ADC and other reference the&lt;b&gt; Drivers and Documentation&lt;/b&gt; section below endparblock******************************************************************************* The Display driver is designed abstract to operations&amp; considerations specific to a given output method*******************************************************************************&lt;TABLE&gt;&lt;TR align =&quot;center&quot;&gt;&lt;TH&gt; Display Driver Interface&lt;/TH&gt;&lt;TH&gt; Implementations&lt;/TH&gt;&lt;/TR&gt;&lt;TR align =&quot;center&quot;&gt;&lt;TD&gt; ref Display h&lt;/TD&gt;&lt;TD&gt; ref DisplayHost h n ref DisplayUart2 h&lt;/TD&gt;&lt;/TR&gt;&lt;/TABLE&gt; *******************************************************************************&lt;TABLE&gt;&lt;TR align =&quot;center&quot;&gt;&lt;TH&gt; Display Driver Interface&lt;/TH&gt;&lt;TH&gt; Implementations&lt;/TH&gt;&lt;/TR&gt;&lt;TR align =&quot;center&quot;&gt;&lt;TD&gt; ref Display h&lt;/TD&gt;&lt;TD&gt; ref DisplaySharp h n ref DisplayHost h n ref DisplayExt h n ref DisplayUart2 h&lt;/TD&gt;&lt;/TR&gt;&lt;/TABLE&gt; ******************************************************************************* Logging is a lightweight framework for instrumenting target code*******************************************************************************&lt;TABLE&gt;&lt;TR align =&quot;center&quot;&gt;&lt;TH&gt; Log Interface&lt;/TH&gt;&lt;TH&gt; Sinks&lt;/TH&gt;&lt;/TR&gt;&lt;TR align =&quot;center&quot;&gt;&lt;TD&gt;&lt;a class=&quot;el&quot; href=&quot;../../../tiutils/html/group__ti__log__LOG.html&quot;&gt; Log h&lt;/a&gt;&lt;/TD&gt;&lt;TD&gt; ref LogSinkBuf h&lt;/TD&gt;&lt;/TR&gt;&lt;/TABLE&gt; *******************************************************************************&lt;TABLE&gt;&lt;TR align =&quot;center&quot;&gt;&lt;TH&gt; Log Interface&lt;/TH&gt;&lt;TH&gt; Sinks&lt;/TH&gt;&lt;/TR&gt;&lt;TR align =&quot;center&quot;&gt;&lt;TD&gt;&lt;a class=&quot;el&quot; href=&quot;../../../tiutils/html/group__ti__log__LOG.html&quot;&gt; Log h&lt;/a&gt;&lt;/TD&gt;&lt;TD&gt; ref LogSinkBuf h n ref LogSinkITM h&lt;/TD&gt;&lt;/TR&gt;&lt;/TABLE&gt; ******************************************************************************* The NoRTOS framework module is provided to enable use of drivers without an underlying operating system The module provides interfaces used by drivers to perform delays</definition>
        <argsstring></argsstring>
        <name>delays</name>
        <briefdescription>
<para>[drivers_common_overview] </para>        </briefdescription>
        <detaileddescription>
<para>[drivers_common_display] [drivers_common_display] [drivers_common_display_table] [drivers_common_display_table] [drivers_full_display_table] [drivers_full_display_table] [drivers_common_log] [drivers_common_log] [drivers_common_log_table] [drivers_common_log_table] [drivers_full_log_table] [drivers_full_log_table] [drivers_common_nortos] </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="174" column="1" bodyfile="source/etc/doxygen_drivers.txt" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="doxygen__drivers_8txt_1a6231a4ce8655a6f1437729cd8622f88e" prot="public" static="no" mutable="no">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> peripheral <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> for TI s SimpleLink portfolio The <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> a real time operating and NoRTOS with examples provided for each variant the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are supported by SysConfig to enable easy re configuration <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> par and NoRTOS&lt;/b &gt; li&lt; b &gt; Thread safe APIs&lt;/b &gt; li&lt; b &gt; SysConfig support&lt;/b &gt; li&lt; b &gt; Example usage&lt;/b &gt; li&lt; b &gt; Power management support&lt;/b &gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt; b &gt; may be called multiple times by the application It is only required that the initialization is done once For <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> which have an <ref refid="doxygen__drivers_8txt_1a3c817d7b43d954183fdd3561a1d0b749" kindref="member">open</ref>&lt; b &gt; it must be called per instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver to be used Each instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver corresponds to a unique index in the ref&lt; b &gt; Driver_config&lt;/b &gt; Multiple software entities may <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> the same driver concurrently For a Bluetooth or WiFi stack may utilize a driver instance The application may concurrently <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> the same driver assuming it has opened a unique instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver Let s examine the ADC driver for <ref refid="doxygen__drivers_8txt_1aae4cacc66193979b8d54db1c912e2402" kindref="member">example</ref> include Driver_init h A couple observations from this code we <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> the that s all we need for full details on the ADC and other reference the&lt; b &gt; Drivers and Documentation&lt;/b &gt; section below endparblock *******************************************************************************The Display driver is designed abstract to operations &amp;considerations specific to a given output method *******************************************************************************&lt; TABLE &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TH &gt; Display Driver Interface&lt;/TH &gt;&lt; TH &gt; Implementations&lt;/TH &gt;&lt;/TR &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TD &gt; ref Display h&lt;/TD &gt;&lt; TD &gt; ref DisplayHost h n ref DisplayUart2 h&lt;/TD &gt;&lt;/TR &gt;&lt;/TABLE &gt; *******************************************************************************&lt; TABLE &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TH &gt; Display Driver Interface&lt;/TH &gt;&lt; TH &gt; Implementations&lt;/TH &gt;&lt;/TR &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TD &gt; ref Display h&lt;/TD &gt;&lt; TD &gt; ref DisplaySharp h n ref DisplayHost h n ref DisplayExt h n ref DisplayUart2 h&lt;/TD &gt;&lt;/TR &gt;&lt;/TABLE &gt; *******************************************************************************Logging is a lightweight framework for instrumenting target code *******************************************************************************&lt; TABLE &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TH &gt; Log Interface&lt;/TH &gt;&lt; TH &gt; Sinks&lt;/TH &gt;&lt;/TR &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TD &gt;&lt; a class=&quot;el&quot; href=&quot;../../../tiutils/html/group__ti__log__LOG.html&quot;&gt; Log h&lt;/a &gt;&lt;/TD &gt;&lt; TD &gt; ref LogSinkBuf h&lt;/TD &gt;&lt;/TR &gt;&lt;/TABLE &gt; *******************************************************************************&lt; TABLE &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TH &gt; Log Interface&lt;/TH &gt;&lt; TH &gt; Sinks&lt;/TH &gt;&lt;/TR &gt;&lt; TR align=&quot;center&quot;&gt;&lt; TD &gt;&lt; a class=&quot;el&quot; href=&quot;../../../tiutils/html/group__ti__log__LOG.html&quot;&gt; Log h&lt;/a &gt;&lt;/TD &gt;&lt; TD &gt; ref LogSinkBuf h n ref LogSinkITM h&lt;/TD &gt;&lt;/TR &gt;&lt;/TABLE &gt; *******************************************************************************The NoRTOS framework module is provided to enable <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> without an underlying operating <ref refid="doxygen__drivers_8txt_1a97ee032a54b6aa1a8de247b5b7390756" kindref="member">system</ref> The module provides interfaces used by <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> to perform block</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation******************************************************************************* TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating and NoRTOS with examples provided for each variant the drivers are supported by SysConfig to enable easy re configuration of the drivers par and NoRTOS&lt;/b&gt; li&lt;b&gt; Thread safe APIs&lt;/b&gt; li&lt;b&gt; SysConfig support&lt;/b&gt; li&lt;b&gt; Example usage&lt;/b&gt; li&lt;b&gt; Power management support&lt;/b&gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt;b&gt; may be called multiple times by the application It is only required that the initialization is done once For drivers which have an open&lt;b&gt; it must be called per instance of the driver to be used Each instance of the driver corresponds to a unique index in the ref&lt;b&gt; Driver_config&lt;/b&gt; Multiple software entities may use the same driver concurrently For a Bluetooth or WiFi stack may utilize a driver instance The application may concurrently use the same driver assuming it has opened a unique instance of the driver Let s examine the ADC driver for example include Driver_init h A couple observations from this code we use the that s all we need for full details on the ADC and other reference the&lt;b&gt; Drivers and Documentation&lt;/b&gt; section below endparblock******************************************************************************* The Display driver is designed abstract to operations&amp; considerations specific to a given output method*******************************************************************************&lt;TABLE&gt;&lt;TR align =&quot;center&quot;&gt;&lt;TH&gt; Display Driver Interface&lt;/TH&gt;&lt;TH&gt; Implementations&lt;/TH&gt;&lt;/TR&gt;&lt;TR align =&quot;center&quot;&gt;&lt;TD&gt; ref Display h&lt;/TD&gt;&lt;TD&gt; ref DisplayHost h n ref DisplayUart2 h&lt;/TD&gt;&lt;/TR&gt;&lt;/TABLE&gt; *******************************************************************************&lt;TABLE&gt;&lt;TR align =&quot;center&quot;&gt;&lt;TH&gt; Display Driver Interface&lt;/TH&gt;&lt;TH&gt; Implementations&lt;/TH&gt;&lt;/TR&gt;&lt;TR align =&quot;center&quot;&gt;&lt;TD&gt; ref Display h&lt;/TD&gt;&lt;TD&gt; ref DisplaySharp h n ref DisplayHost h n ref DisplayExt h n ref DisplayUart2 h&lt;/TD&gt;&lt;/TR&gt;&lt;/TABLE&gt; ******************************************************************************* Logging is a lightweight framework for instrumenting target code*******************************************************************************&lt;TABLE&gt;&lt;TR align =&quot;center&quot;&gt;&lt;TH&gt; Log Interface&lt;/TH&gt;&lt;TH&gt; Sinks&lt;/TH&gt;&lt;/TR&gt;&lt;TR align =&quot;center&quot;&gt;&lt;TD&gt;&lt;a class=&quot;el&quot; href=&quot;../../../tiutils/html/group__ti__log__LOG.html&quot;&gt; Log h&lt;/a&gt;&lt;/TD&gt;&lt;TD&gt; ref LogSinkBuf h&lt;/TD&gt;&lt;/TR&gt;&lt;/TABLE&gt; *******************************************************************************&lt;TABLE&gt;&lt;TR align =&quot;center&quot;&gt;&lt;TH&gt; Log Interface&lt;/TH&gt;&lt;TH&gt; Sinks&lt;/TH&gt;&lt;/TR&gt;&lt;TR align =&quot;center&quot;&gt;&lt;TD&gt;&lt;a class=&quot;el&quot; href=&quot;../../../tiutils/html/group__ti__log__LOG.html&quot;&gt; Log h&lt;/a&gt;&lt;/TD&gt;&lt;TD&gt; ref LogSinkBuf h n ref LogSinkITM h&lt;/TD&gt;&lt;/TR&gt;&lt;/TABLE&gt; ******************************************************************************* The NoRTOS framework module is provided to enable use of drivers without an underlying operating system The module provides interfaces used by drivers to perform block execution</definition>
        <argsstring></argsstring>
        <name>execution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="174" column="1" bodyfile="source/etc/doxygen_drivers.txt" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="doxygen__drivers_8txt_1a95652fbf6de05f7d50abac8cce2f53b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> peripheral <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> for TI s SimpleLink portfolio The <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are centered around a portable application programming</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation******************************************************************************* TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming interface</definition>
        <argsstring>(API) which enables seamless migration across the SimpleLink SDK portfolio. Unless specifically stated otherwise</argsstring>
        <name>interface</name>
        <param>
          <type>API</type>
        </param>
        <briefdescription>
<para>[drivers_common_overview] </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="doxygen__drivers_8txt_1a97ee032a54b6aa1a8de247b5b7390756" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> peripheral <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> for TI s SimpleLink portfolio The <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> a real time operating</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation******************************************************************************* TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating system</definition>
        <argsstring>(RTOS) application. All TI-Driver implementations utilize the Power driver APIs to ensure low power consumption at all times. The drivers support TI-RTOS7(SYS/BIOS)</argsstring>
        <name>system</name>
        <param>
          <type>RTOS</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="doxygen__drivers_8txt_1a619022cd43b382857094786e0b14538f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> peripheral <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> for TI s SimpleLink portfolio The <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> a real time operating and NoRTOS with examples provided for each variant the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are supported by SysConfig to enable easy re configuration <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> par and NoRTOS&lt;/b &gt; li&lt; b &gt; Thread safe APIs&lt;/b &gt; li&lt; b &gt; SysConfig support&lt;/b &gt; li&lt; b &gt; Example usage&lt;/b &gt; li&lt; b &gt; Power management support&lt;/b &gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt; b &gt; may be called multiple times by the application It is only required that the initialization is done once For <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> which have an <ref refid="doxygen__drivers_8txt_1a3c817d7b43d954183fdd3561a1d0b749" kindref="member">open</ref>&lt; b &gt; it must be called per instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver to be used Each instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver corresponds to a unique index in the ref&lt; b &gt; Driver_config&lt;/b &gt; Multiple software entities may <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> the same driver concurrently For a Bluetooth or WiFi stack may utilize a driver instance The application may concurrently <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> the same driver assuming it has opened a unique instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver Let s examine the ADC driver for <ref refid="doxygen__drivers_8txt_1aae4cacc66193979b8d54db1c912e2402" kindref="member">example</ref> include Driver_init h A couple observations from this code</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation******************************************************************************* TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating and NoRTOS with examples provided for each variant the drivers are supported by SysConfig to enable easy re configuration of the drivers par and NoRTOS&lt;/b&gt; li&lt;b&gt; Thread safe APIs&lt;/b&gt; li&lt;b&gt; SysConfig support&lt;/b&gt; li&lt;b&gt; Example usage&lt;/b&gt; li&lt;b&gt; Power management support&lt;/b&gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt;b&gt; may be called multiple times by the application It is only required that the initialization is done once For drivers which have an open&lt;b&gt; it must be called per instance of the driver to be used Each instance of the driver corresponds to a unique index in the ref&lt;b&gt; Driver_config&lt;/b&gt; Multiple software entities may use the same driver concurrently For a Bluetooth or WiFi stack may utilize a driver instance The application may concurrently use the same driver assuming it has opened a unique instance of the driver Let s examine the ADC driver for example include Driver_init h A couple observations from this code ADC_init</definition>
        <argsstring>(). 4. We have to create a handle for our ADC driver instance. This is done by calling ADC_open() with our desired config index. Once a handle has been created the driver instance is ready for use. Each index can only be opened once! 4. In this simple example</argsstring>
        <name>ADC_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function to initialize the ADC driver. </para>        </briefdescription>
        <detaileddescription>
<para>This function must also be called before any other ADC driver APIs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="doxygen__drivers_8txt_1af1381ae1ca6984fa378b2a3b3add946f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> peripheral <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> for TI s SimpleLink portfolio The <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> a real time operating and NoRTOS with examples provided for each variant the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> are supported by SysConfig to enable easy re configuration <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> par and NoRTOS&lt;/b &gt; li&lt; b &gt; Thread safe APIs&lt;/b &gt; li&lt; b &gt; SysConfig support&lt;/b &gt; li&lt; b &gt; Example usage&lt;/b &gt; li&lt; b &gt; Power management support&lt;/b &gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt; b &gt; may be called multiple times by the application It is only required that the initialization is done once For <ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref> which have an <ref refid="doxygen__drivers_8txt_1a3c817d7b43d954183fdd3561a1d0b749" kindref="member">open</ref>&lt; b &gt; it must be called per instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver to be used Each instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver corresponds to a unique index in the ref&lt; b &gt; Driver_config&lt;/b &gt; Multiple software entities may <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> the same driver concurrently For a Bluetooth or WiFi stack may utilize a driver instance The application may concurrently <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> the same driver assuming it has opened a unique instance <ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref> the driver Let s examine the ADC driver for <ref refid="doxygen__drivers_8txt_1aae4cacc66193979b8d54db1c912e2402" kindref="member">example</ref> include Driver_init h A couple observations from this code we <ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref> the</type>
        <definition>This file contains snippets to be used in the TI Driver s documentation******************************************************************************* TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating and NoRTOS with examples provided for each variant the drivers are supported by SysConfig to enable easy re configuration of the drivers par and NoRTOS&lt;/b&gt; li&lt;b&gt; Thread safe APIs&lt;/b&gt; li&lt;b&gt; SysConfig support&lt;/b&gt; li&lt;b&gt; Example usage&lt;/b&gt; li&lt;b&gt; Power management support&lt;/b&gt; par Driver Initialization parblock TI Driver APIs follow a common initialization model This model typically consists and close the driver Unless otherwise the initialization&lt;b&gt; may be called multiple times by the application It is only required that the initialization is done once For drivers which have an open&lt;b&gt; it must be called per instance of the driver to be used Each instance of the driver corresponds to a unique index in the ref&lt;b&gt; Driver_config&lt;/b&gt; Multiple software entities may use the same driver concurrently For a Bluetooth or WiFi stack may utilize a driver instance The application may concurrently use the same driver assuming it has opened a unique instance of the driver Let s examine the ADC driver for example include Driver_init h A couple observations from this code we use the ADC_convert</definition>
        <argsstring>() API. 5. A driver instance can be closed and re-open. For our simple example</argsstring>
        <name>ADC_convert</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/etc/doxygen_drivers.txt" line="92" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019-2022,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">This<sp/>file<sp/>contains<sp/>snippets<sp/>to<sp/>be<sp/>used<sp/>in<sp/>the<sp/>TI-Driver</highlight><highlight class="stringliteral">&apos;s<sp/>documentation.</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral">*******************************************************************************</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral">TI-Drivers<sp/>is<sp/>a<sp/>collective<sp/>of<sp/>peripheral<sp/>drivers<sp/>for<sp/>TI&apos;</highlight><highlight class="normal">s<sp/>SimpleLink<sp/>portfolio.</highlight></codeline>
<codeline lineno="40"><highlight class="normal">The<sp/><ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref><sp/>are<sp/>centered<sp/>around<sp/>a<sp/>portable<sp/>application<sp/>programming<sp/><ref refid="doxygen__drivers_8txt_1a95652fbf6de05f7d50abac8cce2f53b7" kindref="member">interface</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal">(API)<sp/>which<sp/>enables<sp/>seamless<sp/>migration<sp/>across<sp/>the<sp/>SimpleLink<sp/>SDK<sp/>portfolio.</highlight></codeline>
<codeline lineno="42"><highlight class="normal">Unless<sp/>specifically<sp/><ref refid="doxygen__drivers_8txt_1ad6afb9886f1650d5cfe379e0a3252df8" kindref="member">stated</ref><sp/>otherwise,<sp/>TI-Drivers<sp/>are<sp/>designed<sp/>to<sp/>be<sp/>thread<sp/>safe</highlight></codeline>
<codeline lineno="43"><highlight class="normal">and<sp/>work<sp/>seamlessly<sp/>inside<sp/><ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref><sp/>a<sp/>real<sp/>time<sp/>operating<sp/><ref refid="doxygen__drivers_8txt_1a97ee032a54b6aa1a8de247b5b7390756" kindref="member">system</ref><sp/>(RTOS)<sp/>application.</highlight></codeline>
<codeline lineno="44"><highlight class="normal">All<sp/>TI-Driver<sp/>implementations<sp/>utilize<sp/>the<sp/>Power<sp/>driver<sp/>APIs<sp/>to<sp/>ensure<sp/>low<sp/>power</highlight></codeline>
<codeline lineno="45" refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" refkind="member"><highlight class="normal">consumption<sp/>at<sp/>all<sp/>times.<sp/>The<sp/><ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref><sp/>support<sp/>TI-RTOS7<sp/>(SYS/BIOS),<sp/><ref refid="doxygen__drivers_8txt_1aedbb9b8e52e225489bcb7bfb3633391c" kindref="member">FreeRTOS</ref>,<sp/>and</highlight></codeline>
<codeline lineno="46"><highlight class="normal">NoRTOS<sp/>with<sp/>examples<sp/>provided<sp/>for<sp/>each<sp/>variant.<sp/><ref refid="doxygen__drivers_8txt_1a771604b2d92f9f155ab2752d01b6b335" kindref="member">Lastly</ref>,<sp/>the<sp/><ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref><sp/>are</highlight></codeline>
<codeline lineno="47"><highlight class="normal">supported<sp/>by<sp/>SysConfig<sp/>to<sp/>enable<sp/>easy<sp/>re-configuration<sp/><ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref><sp/>the<sp/><ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref>.</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">\par<sp/><ref refid="doxygen__drivers_8txt_1aff808b3e121e9dc1c6e5b489b5f1eb57" kindref="member">Features</ref>:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>@li<sp/>&lt;b&gt;<sp/>Portable<sp/>APIs<sp/>&lt;/b&gt;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>@li<sp/>&lt;b&gt;<sp/>Native<sp/>support<sp/>for<sp/>TI-RTOS7,<sp/>FreeRTOS,<sp/>and<sp/>NoRTOS<sp/>&lt;/b&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>@li<sp/>&lt;b&gt;<sp/>Thread<sp/>safe<sp/>APIs<sp/>&lt;/b&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>@li<sp/>&lt;b&gt;<sp/>SysConfig<sp/>support<sp/>&lt;/b&gt;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>@li<sp/>&lt;b&gt;<sp/>Example<sp/>usage<sp/>&lt;/b&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>@li<sp/>&lt;b&gt;<sp/>Power<sp/>management<sp/>support<sp/>&lt;/b&gt;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">\par<sp/>Driver<sp/>Initialization</highlight></codeline>
<codeline lineno="58"><highlight class="normal">\parblock</highlight></codeline>
<codeline lineno="59"><highlight class="normal">TI-Driver<sp/>APIs<sp/>follow<sp/>a<sp/>common<sp/>initialization<sp/>model.<sp/>This<sp/>model<sp/>typically</highlight></codeline>
<codeline lineno="60"><highlight class="normal">consists<sp/><ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref>:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>1.<sp/>&lt;b&gt;<sp/>Init<sp/>&lt;/b&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>2.<sp/>&lt;b&gt;<sp/>Open<sp/>&lt;/b&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>3.<sp/>&lt;b&gt;<sp/>Use<sp/>&lt;/b&gt;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>4.<sp/>&lt;b&gt;<sp/>Close<sp/>&lt;/b&gt;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">Each<sp/>driver<sp/>documents<sp/>how<sp/>to<sp/>initialize,<sp/><ref refid="doxygen__drivers_8txt_1a3c817d7b43d954183fdd3561a1d0b749" kindref="member">open</ref>,<sp/><ref refid="doxygen__drivers_8txt_1ad3d57e19deff473ffb03cddaf951d458" kindref="member">use</ref>,<sp/>and<sp/>close<sp/>the<sp/>driver.<sp/>Unless</highlight></codeline>
<codeline lineno="67"><highlight class="normal">otherwise<sp/><ref refid="doxygen__drivers_8txt_1ad6afb9886f1650d5cfe379e0a3252df8" kindref="member">stated</ref>,<sp/>the<sp/>initialization<sp/><ref refid="doxygen__drivers_8txt_1af2a708cd58d191b2a04f35b77c7f6440" kindref="member">function</ref>,<sp/>&lt;b&gt;Driver_init&lt;/b&gt;,<sp/>may<sp/>be</highlight></codeline>
<codeline lineno="68"><highlight class="normal">called<sp/>multiple<sp/>times<sp/>by<sp/>the<sp/>application.<sp/>It<sp/>is<sp/>only<sp/>required<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="69"><highlight class="normal">initialization<sp/>is<sp/>done<sp/>once.<sp/>For<sp/><ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref><sp/>which<sp/>have<sp/>an<sp/>open<sp/>function,</highlight></codeline>
<codeline lineno="70"><highlight class="normal">&lt;b&gt;Driver_open&lt;/b&gt;,<sp/>it<sp/>must<sp/>be<sp/>called<sp/>per<sp/>instance<sp/><ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref><sp/>the<sp/>driver<sp/>to<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="71"><highlight class="normal">Each<sp/>instance<sp/><ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref><sp/>the<sp/>driver<sp/>corresponds<sp/>to<sp/>a<sp/>unique<sp/>index<sp/>in<sp/>the<sp/>@ref</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="doxygen__drivers_8txt_1a23eda4ea0ef424e8163ad5e90e7357ef" kindref="member">driver_configuration</ref>,<sp/>&lt;b&gt;Driver_config&lt;/b&gt;.<sp/>Multiple<sp/>software<sp/>entities<sp/>may<sp/>use</highlight></codeline>
<codeline lineno="73"><highlight class="normal">the<sp/>same<sp/>driver<sp/>concurrently.<sp/>For<sp/><ref refid="doxygen__drivers_8txt_1aae4cacc66193979b8d54db1c912e2402" kindref="member">example</ref>,<sp/>a<sp/>Bluetooth<sp/>or<sp/>WiFi<sp/>stack<sp/>may</highlight></codeline>
<codeline lineno="74"><highlight class="normal">utilize<sp/>a<sp/>driver<sp/>instance.<sp/>The<sp/>application<sp/>may<sp/>concurrently<sp/>use<sp/>the<sp/>same<sp/>driver</highlight></codeline>
<codeline lineno="75"><highlight class="normal">assuming<sp/>it<sp/>has<sp/>opened<sp/>a<sp/>unique<sp/>instance<sp/><ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref><sp/>the<sp/>driver.<sp/>Let&apos;s<sp/>examine<sp/>the<sp/>ADC</highlight></codeline>
<codeline lineno="76"><highlight class="normal">driver<sp/>for<sp/>example.</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">@include<sp/>Driver_init.h</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">A<sp/>couple<sp/>observations<sp/>from<sp/>this<sp/>code<sp/>example:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>1.<sp/>We<sp/>need<sp/>to<sp/>include<sp/>the<sp/>ADC<sp/>driver<sp/>header<sp/>file.</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>2.<sp/>We<sp/>define<sp/>a<sp/>name<sp/>for<sp/>our<sp/>ADC<sp/>instance.<sp/>This<sp/>definition<sp/>typically<sp/>comes</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>from<sp/>ti_drivers_config.h<sp/>(previously<sp/>Board.h)<sp/>and<sp/>corresponds<sp/>to<sp/>an<sp/>index</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>ADC_config<sp/>array.<sp/>Our<sp/>definition<sp/>corresponds<sp/>to<sp/>the<sp/>zero<sp/>index<sp/><ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>this<sp/>array.<sp/>(See:<sp/>@ref<sp/>driver_configuration)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>3.<sp/>We<sp/>have<sp/>to<sp/>call<sp/>the<sp/>initialization<sp/>function,<sp/><ref refid="doxygen__drivers_8txt_1a619022cd43b382857094786e0b14538f" kindref="member">ADC_init</ref>().</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>4.<sp/>We<sp/>have<sp/>to<sp/>create<sp/>a<sp/>handle<sp/>for<sp/>our<sp/>ADC<sp/>driver<sp/>instance.<sp/>This<sp/>is<sp/>done<sp/>by</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>calling<sp/><ref refid="_a_d_c_8h_1a1bfe07e93650e1288ba5fc6acc212c46" kindref="member">ADC_open</ref>()<sp/>with<sp/>our<sp/>desired<sp/>config<sp/>index.<sp/>Once<sp/>a<sp/>handle<sp/>has<sp/>been</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>created<sp/>the<sp/>driver<sp/>instance<sp/>is<sp/>ready<sp/>for<sp/>use.<sp/>Each<sp/>index<sp/>can<sp/>only<sp/>be</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>opened<sp/>once!</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>4.<sp/>In<sp/>this<sp/>simple<sp/>example,<sp/>we<sp/>use<sp/>the<sp/><ref refid="doxygen__drivers_8txt_1af1381ae1ca6984fa378b2a3b3add946f" kindref="member">ADC_convert</ref>()<sp/>API.</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>5.<sp/>A<sp/>driver<sp/>instance<sp/>can<sp/>be<sp/>closed<sp/>and<sp/>re-open.</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="doxygen__drivers_8txt_1aac20f4f02ffddb1b8f77d1db3cb16ae2" refkind="member"><highlight class="normal">For<sp/>our<sp/>simple<sp/>example,<sp/>that&apos;s<sp/>all<sp/>we<sp/>need.<sp/><ref refid="doxygen__drivers_8txt_1aac20f4f02ffddb1b8f77d1db3cb16ae2" kindref="member">However</ref>,<sp/>for<sp/>full<sp/>details<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="96"><highlight class="normal">ADC--and<sp/>other<sp/><ref refid="doxygen__drivers_8txt_1a0ab36214530e6ed63444bb75e3f814a7" kindref="member">drivers</ref>,<sp/>reference<sp/>the<sp/>&lt;b&gt;<sp/>Drivers</highlight></codeline>
<codeline lineno="97"><highlight class="normal">and<sp/>Documentation&lt;/b&gt;<sp/>section<sp/>below.</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">\endparblock</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">*******************************************************************************</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/>The<sp/>Display<sp/>driver<sp/>is<sp/>designed<sp/>to<sp/>abstract<sp/>operations<sp/>&amp;<sp/>considerations</highlight></codeline>
<codeline lineno="107"><highlight class="normal">specific<sp/>to<sp/>a<sp/>given<sp/>output<sp/>method.</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">*******************************************************************************</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">&lt;TABLE&gt;&lt;TR<sp/>align<sp/>=&quot;center&quot;&gt;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;TH&gt;Display<sp/>Driver<sp/>Interface&lt;/TH&gt;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;TH&gt;Implementations&lt;/TH&gt;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">&lt;/TR&gt;&lt;TR<sp/>align<sp/>=&quot;center&quot;&gt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;TD&gt;@ref<sp/>Display.h&lt;/TD&gt;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;TD&gt;@ref<sp/>DisplayHost.h<sp/>\n</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>@ref<sp/>DisplayUart2.h&lt;/TD&gt;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">&lt;/TR&gt;&lt;/TABLE&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">*******************************************************************************</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">&lt;TABLE&gt;&lt;TR<sp/>align<sp/>=&quot;center&quot;&gt;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;TH&gt;Display<sp/>Driver<sp/>Interface&lt;/TH&gt;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;TH&gt;Implementations&lt;/TH&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">&lt;/TR&gt;&lt;TR<sp/>align<sp/>=&quot;center&quot;&gt;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;TD&gt;@ref<sp/>Display.h&lt;/TD&gt;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;TD&gt;@ref<sp/>DisplaySharp.h<sp/>\n</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>@ref<sp/>DisplayHost.h<sp/>\n</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>@ref<sp/>DisplayExt.h<sp/>\n</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>@ref<sp/>DisplayUart2.h&lt;/TD&gt;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">&lt;/TR&gt;&lt;/TABLE&gt;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">*******************************************************************************</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/>Logging<sp/>is<sp/>a<sp/>lightweight<sp/>framework<sp/>for<sp/>instrumenting<sp/>target<sp/>code.</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">*******************************************************************************</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">&lt;TABLE&gt;&lt;TR<sp/>align<sp/>=&quot;center&quot;&gt;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;TH&gt;Log<sp/>Interface&lt;/TH&gt;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;TH&gt;Sinks&lt;/TH&gt;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">&lt;/TR&gt;&lt;TR<sp/>align<sp/>=&quot;center&quot;&gt;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;TD&gt;&lt;a<sp/>class=&quot;el&quot;<sp/>href=&quot;../../../tiutils/html/group__ti__log__LOG.html&quot;&gt;Log.h&lt;/a&gt;&lt;/TD&gt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;TD&gt;@ref<sp/>LogSinkBuf.h&lt;/TD&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">&lt;/TR&gt;&lt;/TABLE&gt;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">*******************************************************************************</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">&lt;TABLE&gt;&lt;TR<sp/>align<sp/>=&quot;center&quot;&gt;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;TH&gt;Log<sp/>Interface&lt;/TH&gt;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;TH&gt;Sinks&lt;/TH&gt;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">&lt;/TR&gt;&lt;TR<sp/>align<sp/>=&quot;center&quot;&gt;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;TD&gt;&lt;a<sp/>class=&quot;el&quot;<sp/>href=&quot;../../../tiutils/html/group__ti__log__LOG.html&quot;&gt;Log.h&lt;/a&gt;&lt;/TD&gt;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;TD&gt;@ref<sp/>LogSinkBuf.h<sp/>\n</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>@ref<sp/>LogSinkITM.h&lt;/TD&gt;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">&lt;/TR&gt;&lt;/TABLE&gt;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">*******************************************************************************</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">The<sp/>NoRTOS<sp/>framework<sp/>module<sp/>is<sp/>provided<sp/>to<sp/>enable<sp/>use<sp/><ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref><sp/>drivers<sp/>without<sp/>an</highlight></codeline>
<codeline lineno="173"><highlight class="normal">underlying<sp/>operating<sp/><ref refid="doxygen__drivers_8txt_1a97ee032a54b6aa1a8de247b5b7390756" kindref="member">system</ref>.<sp/><sp/>The<sp/>module<sp/>provides<sp/>interfaces<sp/>used<sp/>by<sp/>drivers</highlight></codeline>
<codeline lineno="174"><highlight class="normal">to<sp/>perform<sp/><ref refid="doxygen__drivers_8txt_1a3d07cb6d65f07a356ec74fd1f886dbf8" kindref="member">delays</ref>,<sp/>block<sp/><ref refid="doxygen__drivers_8txt_1a6231a4ce8655a6f1437729cd8622f88e" kindref="member">execution</ref>,<sp/>register<sp/>interrupts<sp/>and<sp/>more.</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>@li<sp/>@ref<sp/>NoRTOS.h</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">*******************************************************************************</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">These<sp/>utilities<sp/>are<sp/>helper<sp/>modules<sp/>available<sp/>to<sp/>drivers.</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">&lt;TABLE&gt;&lt;TR&gt;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>&lt;TH&gt;Module&lt;/TH&gt;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>&lt;TH&gt;Description&lt;/TH&gt;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">&lt;/TR&gt;&lt;TR&gt;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>&lt;TD&gt;@ref<sp/>List.h&lt;/TD&gt;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>&lt;TD&gt;Double<sp/>linked<sp/>list&lt;/TD&gt;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">&lt;/TR&gt;&lt;TR&gt;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>&lt;TD&gt;@ref<sp/>Random.h&lt;/TD&gt;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>&lt;TD&gt;Fast<sp/>and<sp/>light-weight<sp/>pseudo<sp/>random<sp/>number<sp/>generator&lt;/TD&gt;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">&lt;/TR&gt;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">&lt;TR&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>&lt;TD&gt;@ref<sp/>RingBuf.h&lt;/TD&gt;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>&lt;TD&gt;Array-based<sp/>ring<sp/>buffer<sp/>for<sp/>bytes&lt;/TD&gt;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">&lt;/TR&gt;&lt;TR&gt;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>&lt;TD&gt;@ref<sp/>SDFatFS.h&lt;/TD&gt;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>&lt;TD&gt;Wrapper<sp/>to<sp/>enable<sp/>the<sp/>use<sp/><ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref><sp/>file<sp/>systems<sp/>for<sp/>the<sp/>SD<sp/>driver.&lt;/TD&gt;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">&lt;/TR&gt;&lt;TR&gt;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>&lt;TD&gt;@ref<sp/>SPIFFSNVS.h&lt;/TD&gt;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>&lt;TD&gt;Enables<sp/>NVS<sp/>as<sp/>the<sp/>physical<sp/>layer<sp/>to<sp/>read/write<sp/>memory<sp/>for<sp/>the<sp/>SPIFFS<sp/>file</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><ref refid="doxygen__drivers_8txt_1a97ee032a54b6aa1a8de247b5b7390756" kindref="member">system</ref>&lt;/TD&gt;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">&lt;/TR&gt;&lt;/TABLE&gt;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">*******************************************************************************</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">These<sp/>helper<sp/>apps<sp/>utilize<sp/>TI<sp/>drivers<sp/>and<sp/>are<sp/>available<sp/>to<sp/>user<sp/>applications.</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">&lt;TABLE&gt;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">&lt;TR&gt;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>&lt;TH&gt;Modules&lt;/TH&gt;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>&lt;TH&gt;Interfaces&lt;/TH&gt;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>&lt;TH&gt;Descriptions&lt;/TH&gt;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">&lt;/TR&gt;&lt;TR&gt;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>&lt;TD&gt;@ref<sp/>Button.h&lt;/TD&gt;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>&lt;TD&gt;@ref<sp/>GPIO.h&lt;/TD&gt;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>&lt;TD&gt;Provides<sp/>an<sp/>API<sp/>for<sp/>button-like<sp/>hardware<sp/>attached<sp/>to<sp/>device<sp/>pins.&lt;/TD&gt;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">&lt;/TR&gt;&lt;TR&gt;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>&lt;TD<sp/>rowspan<sp/>=<sp/>&quot;2&quot;&gt;@ref<sp/>LED.h&lt;/TD&gt;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>&lt;TD&gt;@ref<sp/>GPIO.h&lt;/TD&gt;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>&lt;TD<sp/>rowspan<sp/>=<sp/>&quot;2&quot;&gt;Provides<sp/>an<sp/>API<sp/>for<sp/>LEDs<sp/>attached<sp/>to<sp/>device<sp/>pins.&lt;/TD&gt;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;TR&gt;&lt;TD&gt;@ref<sp/>PWM.h&lt;/TD&gt;&lt;/TR&gt;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">&lt;/TR&gt;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">&lt;/TR&gt;&lt;/TABLE&gt;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">*******************************************************************************</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal">The<sp/>generic<sp/>driver<sp/><ref refid="doxygen__drivers_8txt_1a95652fbf6de05f7d50abac8cce2f53b7" kindref="member">interface</ref><sp/>defines<sp/>a<sp/>configuration<sp/>structure<sp/>using<sp/>the</highlight></codeline>
<codeline lineno="236"><highlight class="normal">@p<sp/>typedef<sp/>keyword.<sp/>The<sp/>name<sp/><ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref><sp/>this<sp/>declared<sp/>type<sp/>follows<sp/>the<sp/>naming</highlight></codeline>
<codeline lineno="237"><highlight class="normal">pattern<sp/>@p<sp/>\&lt;driver\&gt;_Config.<sp/>A<sp/>driver<sp/>is<sp/>configured<sp/>by<sp/>declaring<sp/>an<sp/>array</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref><sp/>this<sp/>configuration<sp/>data<sp/>structure.</highlight></codeline>
<codeline lineno="239"><highlight class="normal">Each<sp/>@p<sp/>config<sp/>array<sp/>index<sp/>contains<sp/>pointers<sp/>to<sp/>other<sp/>data<sp/>objects<sp/>necessary</highlight></codeline>
<codeline lineno="240"><highlight class="normal">for<sp/>the<sp/>driver<sp/>to<sp/>function<sp/>at<sp/>runtime.<sp/>These<sp/>data<sp/>objects<sp/>may<sp/>include<sp/>a</highlight></codeline>
<codeline lineno="241"><highlight class="normal">@ref<sp/>driver_hardware_attributes<sp/>&quot;hardware<sp/>attributes&quot;,</highlight></codeline>
<codeline lineno="242"><highlight class="normal">a<sp/>@ref<sp/>driver_function_table<sp/>&quot;function<sp/>table&quot;,<sp/>and</highlight></codeline>
<codeline lineno="243"><highlight class="normal">@ref<sp/>driver_objects<sp/>&quot;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>memory&quot;.<sp/>Multiple<sp/>indexes<sp/><ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref><sp/>the</highlight></codeline>
<codeline lineno="244"><highlight class="normal">@p<sp/>config<sp/>array<sp/>should<sp/>not<sp/>share<sp/>these<sp/>data<sp/>objects--with<sp/>the<sp/>exception</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref><sp/>the<sp/>@ref<sp/>driver_function_table<sp/>&quot;function<sp/>table&quot;.<sp/>Each<sp/>index<sp/><ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref></highlight></codeline>
<codeline lineno="246"><highlight class="normal">the<sp/>@p<sp/>config<sp/>array<sp/>supports<sp/>an<sp/>independent<sp/>instance<sp/><ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref><sp/>the<sp/>driver.</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">@warning<sp/>The<sp/>declared<sp/>array,<sp/>@p<sp/>\&lt;driver\&gt;_Config,<sp/>must<sp/>have<sp/>a<sp/>specific<sp/>C</highlight></codeline>
<codeline lineno="249"><highlight class="normal">identifier.<sp/>This<sp/>identifies<sp/>follows<sp/>the<sp/>case-sensitive<sp/>pattern</highlight></codeline>
<codeline lineno="250"><highlight class="normal">@p<sp/>\&lt;driver\&gt;_config.</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">@warning<sp/>The<sp/>configuration<sp/>must<sp/>also<sp/>contain<sp/>a<sp/>count<sp/><ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref><sp/>indexes<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="253"><highlight class="normal">@p<sp/>\&lt;driver\&gt;_config.<sp/>This<sp/>must<sp/>also<sp/>have<sp/>a<sp/>specific<sp/>C<sp/>identifier<sp/>following</highlight></codeline>
<codeline lineno="254"><highlight class="normal">the<sp/>case-sensitive<sp/>pattern<sp/>@p<sp/>\&lt;driver\&gt;_count.</highlight></codeline>
<codeline lineno="255"><highlight class="normal">The<sp/>data<sp/>type<sp/>must<sp/>be<sp/>a<sp/>@p<sp/>uint_least8_t.</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal">The<sp/>driver<sp/><ref refid="doxygen__drivers_8txt_1a95652fbf6de05f7d50abac8cce2f53b7" kindref="member">interface</ref><sp/>is<sp/>joined<sp/>together<sp/>during<sp/>the<sp/>link<sp/>process<sp/>at<sp/>build<sp/>time.</highlight></codeline>
<codeline lineno="258"><highlight class="normal">The<sp/>@p<sp/>\&lt;driver\&gt;_config<sp/>and<sp/>@p<sp/>\&lt;driver\&gt;_count<sp/>symbols<sp/>are<sp/>resolved.</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">*******************************************************************************</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal">The<sp/>driver<sp/>objects<sp/>are<sp/>device<sp/>specific<sp/>structures<sp/>that<sp/>hold<sp/>data</highlight></codeline>
<codeline lineno="265"><highlight class="normal">for<sp/>an<sp/>instance<sp/><ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref><sp/>a<sp/>driver.<sp/>The<sp/>driver<sp/>objects<sp/>are<sp/>used<sp/>exclusively<sp/>by</highlight></codeline>
<codeline lineno="266"><highlight class="normal">the<sp/>driver<sp/>and<sp/>should<sp/>never<sp/>be<sp/>accessed<sp/>by<sp/>the<sp/>application.<sp/>Device<sp/>specific</highlight></codeline>
<codeline lineno="267"><highlight class="normal">drivers<sp/>define<sp/>an<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>structure<sp/>as<sp/>a<sp/>new<sp/>type<sp/>using<sp/>the<sp/>@p<sp/>typedef<sp/>keyword.</highlight></codeline>
<codeline lineno="268"><highlight class="normal">Each<sp/>index<sp/>in<sp/>a<sp/>driver&apos;s<sp/>@ref<sp/>driver_configuration<sp/>&quot;configuration&quot;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">will<sp/>contain<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>driver<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">*******************************************************************************</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal">The<sp/>function<sp/>pointer<sp/>table<sp/>is<sp/>a<sp/>structure<sp/>simply<sp/>containing<sp/>pointers</highlight></codeline>
<codeline lineno="276"><highlight class="normal">to<sp/>functions.<sp/>Each<sp/>index<sp/>in<sp/>a<sp/>driver&apos;s</highlight></codeline>
<codeline lineno="277"><highlight class="normal">@ref<sp/>driver_configuration<sp/>&quot;configuration&quot;<sp/>will<sp/>contain<sp/>a<sp/>pointer<sp/>to<sp/>a</highlight></codeline>
<codeline lineno="278"><highlight class="normal">function<sp/>pointer<sp/>table.<sp/>The<sp/>TI-Driver&apos;s<sp/><ref refid="doxygen__drivers_8txt_1a95652fbf6de05f7d50abac8cce2f53b7" kindref="member">interface</ref><sp/>uses<sp/>function<sp/>pointers<sp/>to</highlight></codeline>
<codeline lineno="279"><highlight class="normal">abstract<sp/>a<sp/>generic<sp/>driver<sp/>from<sp/>a<sp/>device<sp/>specific<sp/>driver.<sp/>Each<sp/>device<sp/>specific</highlight></codeline>
<codeline lineno="280"><highlight class="normal">driver<sp/>declares<sp/>a<sp/>default<sp/>function<sp/>pointer<sp/>table<sp/>which<sp/>may<sp/>be<sp/>referenced<sp/>by</highlight></codeline>
<codeline lineno="281"><highlight class="normal">default<sp/>in<sp/>the<sp/>driver&apos;s<sp/>@ref<sp/>driver_configuration<sp/>&quot;configuration&quot;.</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">*******************************************************************************</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal">The<sp/>hardware<sp/>attributes,<sp/>also<sp/>commonly<sp/>referred<sp/>to<sp/>as<sp/>@p<sp/>HWAttrs,<sp/>are<sp/>device</highlight></codeline>
<codeline lineno="289"><highlight class="normal">specific<sp/>settings<sp/>that<sp/>typically<sp/>do<sp/>not<sp/>change<sp/>during<sp/>runtime<sp/>operation<sp/><ref refid="doxygen__drivers_8txt_1a3be79a8130a0e22121143beffec30804" kindref="member">of</ref></highlight></codeline>
<codeline lineno="290"><highlight class="normal">a<sp/>driver.<sp/>The<sp/>hardware<sp/>attributes<sp/>also<sp/>aid<sp/>in<sp/>abstracting<sp/>the<sp/>generic</highlight></codeline>
<codeline lineno="291"><highlight class="normal">driver<sp/><ref refid="doxygen__drivers_8txt_1a95652fbf6de05f7d50abac8cce2f53b7" kindref="member">interface</ref><sp/>from<sp/>the<sp/>device<sp/>specific<sp/>hardware.<sp/>Device<sp/>specific<sp/>drivers</highlight></codeline>
<codeline lineno="292"><highlight class="normal">define<sp/>a<sp/>hardware<sp/>attribute<sp/>structure<sp/>as<sp/>a<sp/>new<sp/>type<sp/>using<sp/>the<sp/>@p<sp/>typedef</highlight></codeline>
<codeline lineno="293"><highlight class="normal">keyword.<sp/>Each<sp/>index<sp/>in<sp/>a<sp/>driver&apos;s<sp/>@ref<sp/>driver_configuration<sp/>&quot;configuration&quot;</highlight></codeline>
<codeline lineno="294"><highlight class="normal">will<sp/>contain<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>hardware<sp/>attribute<sp/>structure.</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">*******************************************************************************</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal">The<sp/>driver<sp/>configuration<sp/>files<sp/>contain<sp/>all<sp/>@ref<sp/>driver_configuration</highlight></codeline>
<codeline lineno="302"><highlight class="normal">&quot;driver<sp/>configurations&quot;<sp/>needed<sp/>by<sp/>TI-Drivers<sp/>at<sp/>runtime.<sp/>The<sp/>SysConfig<sp/>tool</highlight></codeline>
<codeline lineno="303"><highlight class="normal">is<sp/>used<sp/>to<sp/>automatically<sp/>generate<sp/>the<sp/>TI-Driver&apos;s<sp/>configuration<sp/>files.<sp/>Two<sp/>files</highlight></codeline>
<codeline lineno="304"><highlight class="normal">are<sp/>presently<sp/>generated<sp/>for<sp/>TI-Drivers:</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>@li<sp/>\b<sp/>ti_drivers_config.c</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>@li<sp/>\b<sp/>ti_drivers_config.h</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal">*******************************************************************************</highlight></codeline>
    </programlisting>
    <location file="source/etc/doxygen_drivers.txt"/>
  </compounddef>
</doxygen>
