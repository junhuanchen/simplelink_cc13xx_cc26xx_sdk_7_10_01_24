<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_u_a_r_t2_support_8h" kind="file" language="C++">
    <compoundname>UART2Support.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes refid="_u_a_r_t2_8h" local="no">ti/drivers/UART2.h</includes>
    <incdepgraph>
      <node id="1551">
        <label>stdbool.h</label>
      </node>
      <node id="1550">
        <label>stdint.h</label>
      </node>
      <node id="1555">
        <label>ti/drivers/dpl/SemaphoreP.h</label>
      </node>
      <node id="1549">
        <label>stddef.h</label>
      </node>
      <node id="1552">
        <label>ti/drivers/UART2.h</label>
        <link refid="_u_a_r_t2_8h"/>
        <childnode refid="1549" relation="include">
        </childnode>
        <childnode refid="1550" relation="include">
        </childnode>
        <childnode refid="1551" relation="include">
        </childnode>
        <childnode refid="1553" relation="include">
        </childnode>
        <childnode refid="1554" relation="include">
        </childnode>
        <childnode refid="1555" relation="include">
        </childnode>
        <childnode refid="1556" relation="include">
        </childnode>
      </node>
      <node id="1556">
        <label>ti/drivers/utils/RingBuf.h</label>
        <link refid="_ring_buf_8h"/>
        <childnode refid="1550" relation="include">
        </childnode>
        <childnode refid="1549" relation="include">
        </childnode>
        <childnode refid="1551" relation="include">
        </childnode>
      </node>
      <node id="1554">
        <label>ti/drivers/dpl/HwiP.h</label>
      </node>
      <node id="1553">
        <label>ti/drivers/dpl/ClockP.h</label>
      </node>
      <node id="1548">
        <label>UART2Support.h</label>
        <link refid="_u_a_r_t2_support_8h"/>
        <childnode refid="1549" relation="include">
        </childnode>
        <childnode refid="1550" relation="include">
        </childnode>
        <childnode refid="1551" relation="include">
        </childnode>
        <childnode refid="1552" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_u_a_r_t2_support_8h_1add1648f9531ab7bf69c141e9020513dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UART2Support_disableRx</definition>
        <argsstring>(UART2_HWAttrs const *hwAttrs)</argsstring>
        <name>UART2Support_disableRx</name>
        <param>
          <type>UART2_HWAttrs const *</type>
          <declname>hwAttrs</declname>
        </param>
        <briefdescription>
<para>Function to disable the receive and receive interrupts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hwAttrs</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a UART2_HWAttrs structure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/uart2/UART2Support.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_u_a_r_t2_support_8h_1a96ce5b2fc0d5d1a83dbf1b04b480dc0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UART2Support_disableTx</definition>
        <argsstring>(UART2_HWAttrs const *hwAttrs)</argsstring>
        <name>UART2Support_disableTx</name>
        <param>
          <type>UART2_HWAttrs const *</type>
          <declname>hwAttrs</declname>
        </param>
        <briefdescription>
<para>Function to disable the transmit interrupt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hwAttrs</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a UART2_HWAttrs structure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/uart2/UART2Support.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_u_a_r_t2_support_8h_1a16536dd48438de510e9314d32b9a4638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UART2Support_dmaRefreshRx</definition>
        <argsstring>(UART2_Handle handle)</argsstring>
        <name>UART2Support_dmaRefreshRx</name>
        <param>
          <type><ref refid="_u_a_r_t2_8h_1abbf55a000a1ce4c24c15c03fbb610b60" kindref="member">UART2_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to update RX ring buffer state. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A UART2_Handle returned from <ref refid="_u_a_r_t2_8h_1a03b76166f16518bc1cdf85fdf6aa206b" kindref="member">UART2_open()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/uart2/UART2Support.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_u_a_r_t2_support_8h_1af87f619845597f880d86e0edc228a893" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UART2Support_dmaStartRx</definition>
        <argsstring>(UART2_Handle handle)</argsstring>
        <name>UART2Support_dmaStartRx</name>
        <param>
          <type><ref refid="_u_a_r_t2_8h_1abbf55a000a1ce4c24c15c03fbb610b60" kindref="member">UART2_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to configure the receive DMA. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A UART2_Handle returned from <ref refid="_u_a_r_t2_8h_1a03b76166f16518bc1cdf85fdf6aa206b" kindref="member">UART2_open()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/uart2/UART2Support.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_u_a_r_t2_support_8h_1ab071ebe64a172ad0ae1fdf355b8d4018" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UART2Support_dmaStartTx</definition>
        <argsstring>(UART2_Handle handle)</argsstring>
        <name>UART2Support_dmaStartTx</name>
        <param>
          <type><ref refid="_u_a_r_t2_8h_1abbf55a000a1ce4c24c15c03fbb610b60" kindref="member">UART2_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to configure the tramsit DMA. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A UART2_Handle returned from <ref refid="_u_a_r_t2_8h_1a03b76166f16518bc1cdf85fdf6aa206b" kindref="member">UART2_open()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/uart2/UART2Support.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_u_a_r_t2_support_8h_1ae2880dc3d97f4ef656f5aeb54d8036fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UART2Support_dmaStopRx</definition>
        <argsstring>(UART2_Handle handle)</argsstring>
        <name>UART2Support_dmaStopRx</name>
        <param>
          <type><ref refid="_u_a_r_t2_8h_1abbf55a000a1ce4c24c15c03fbb610b60" kindref="member">UART2_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to disable the RX DMA. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A UART2_Handle returned from <ref refid="_u_a_r_t2_8h_1a03b76166f16518bc1cdf85fdf6aa206b" kindref="member">UART2_open()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/uart2/UART2Support.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_u_a_r_t2_support_8h_1a26242940fa182adf84ce07d75d8aaa19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t UART2Support_dmaStopTx</definition>
        <argsstring>(UART2_Handle handle)</argsstring>
        <name>UART2Support_dmaStopTx</name>
        <param>
          <type><ref refid="_u_a_r_t2_8h_1abbf55a000a1ce4c24c15c03fbb610b60" kindref="member">UART2_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to disable the TX DMA. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A UART2_Handle returned from <ref refid="_u_a_r_t2_8h_1a03b76166f16518bc1cdf85fdf6aa206b" kindref="member">UART2_open()</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the number of bytes that were not transacted </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/uart2/UART2Support.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_u_a_r_t2_support_8h_1a00471a550eb3143f3e0d3c94da6a0855" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UART2Support_enableInts</definition>
        <argsstring>(UART2_Handle handle)</argsstring>
        <name>UART2Support_enableInts</name>
        <param>
          <type><ref refid="_u_a_r_t2_8h_1abbf55a000a1ce4c24c15c03fbb610b60" kindref="member">UART2_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to enable receive, receive timeout, and error interrupts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A UART2_Handle returned from <ref refid="_u_a_r_t2_8h_1a03b76166f16518bc1cdf85fdf6aa206b" kindref="member">UART2_open()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/uart2/UART2Support.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_u_a_r_t2_support_8h_1acdbcd6aeb58a979b6ea645f939478c3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UART2Support_enableRx</definition>
        <argsstring>(UART2_HWAttrs const *hwAttrs)</argsstring>
        <name>UART2Support_enableRx</name>
        <param>
          <type>UART2_HWAttrs const *</type>
          <declname>hwAttrs</declname>
        </param>
        <briefdescription>
<para>Function to enable the receive. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hwAttrs</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a UART2_HWAttrs structure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/uart2/UART2Support.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_u_a_r_t2_support_8h_1ae54a77b6ee26bf3aaa6cc4dbd16aed4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UART2Support_enableTx</definition>
        <argsstring>(UART2_HWAttrs const *hwAttrs)</argsstring>
        <name>UART2Support_enableTx</name>
        <param>
          <type>UART2_HWAttrs const *</type>
          <declname>hwAttrs</declname>
        </param>
        <briefdescription>
<para>Function to enable the transmit interrupt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hwAttrs</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a UART2_HWAttrs structure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/uart2/UART2Support.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_u_a_r_t2_support_8h_1a61f29885b9d19ac9a528f009a2b99dca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UART2Support_powerSetConstraint</definition>
        <argsstring>(UART2_Handle handle, bool setFlashConstraint)</argsstring>
        <name>UART2Support_powerSetConstraint</name>
        <param>
          <type><ref refid="_u_a_r_t2_8h_1abbf55a000a1ce4c24c15c03fbb610b60" kindref="member">UART2_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>setFlashConstraint</declname>
        </param>
        <briefdescription>
<para>Function to set power constraints. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A UART2_Handle returned from <ref refid="_u_a_r_t2_8h_1a03b76166f16518bc1cdf85fdf6aa206b" kindref="member">UART2_open()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">setFlashConstraint</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean value, on whether or not to conditionally set a &quot;keep flash in idle&quot; power constraint </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/uart2/UART2Support.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_u_a_r_t2_support_8h_1aab2e227303a33af4f02d9ab547154d2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UART2Support_powerRelConstraint</definition>
        <argsstring>(UART2_Handle handle, bool relFlashConstraint)</argsstring>
        <name>UART2Support_powerRelConstraint</name>
        <param>
          <type><ref refid="_u_a_r_t2_8h_1abbf55a000a1ce4c24c15c03fbb610b60" kindref="member">UART2_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>relFlashConstraint</declname>
        </param>
        <briefdescription>
<para>Function to release power constraints. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A UART2_Handle returned from <ref refid="_u_a_r_t2_8h_1a03b76166f16518bc1cdf85fdf6aa206b" kindref="member">UART2_open()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">relFlashConstraint</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean value, on whether or not to conditionally release a &quot;keep flash in idle&quot; power constraint </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/uart2/UART2Support.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_u_a_r_t2_support_8h_1ac46c1cd3661a0139be9c0b04005333fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t UART2Support_rxStatus2ErrorCode</definition>
        <argsstring>(uint32_t errorData)</argsstring>
        <name>UART2Support_rxStatus2ErrorCode</name>
        <param>
          <type>uint32_t</type>
          <declname>errorData</declname>
        </param>
        <briefdescription>
<para>Function to convert RX error status to a UART2 error code. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">errorData</parametername>
</parameternamelist>
<parameterdescription>
<para>Data indicating the UART RX error status</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a status indicating success or failure of the read.</para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>UART2_STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The call was successful. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UART2_STATUS_EOVERRUN</parametername>
</parameternamelist>
<parameterdescription>
<para>A fifo overrun occurred. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UART2_STATUS_EFRAMING</parametername>
</parameternamelist>
<parameterdescription>
<para>A framinig error occurred. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UART2_STATUS_EBREAK</parametername>
</parameternamelist>
<parameterdescription>
<para>A break error occurred. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UART2_STATUS_EPARITY</parametername>
</parameternamelist>
<parameterdescription>
<para>A parity error occurred. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/uart2/UART2Support.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_u_a_r_t2_support_8h_1a420108ef7da4c220925db1b6af19e242" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t UART2Support_sendData</definition>
        <argsstring>(UART2_HWAttrs const *hwAttrs, size_t size, uint8_t *buf)</argsstring>
        <name>UART2Support_sendData</name>
        <param>
          <type>UART2_HWAttrs const *</type>
          <declname>hwAttrs</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Function to send data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hwAttrs</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a UART2_HWAttrs structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes in the buffer that should be written to the UART</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to buffer containing data to be written to the UART</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the number of bytes written </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/uart2/UART2Support.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_u_a_r_t2_support_8h_1a6ae5dc0b3d517f7cbf9b6302c96710f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UART2Support_txDone</definition>
        <argsstring>(UART2_HWAttrs const *hwAttrs)</argsstring>
        <name>UART2Support_txDone</name>
        <param>
          <type>UART2_HWAttrs const *</type>
          <declname>hwAttrs</declname>
        </param>
        <briefdescription>
<para>Function to determine if TX is in progress. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hwAttrs</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a UART2_HWAttrs structure</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if there is no TX in progress, otherwise false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/uart2/UART2Support.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_u_a_r_t2_support_8h_1a38833700d53cd5787c4bcc54e5a02fc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UART2Support_uartRxError</definition>
        <argsstring>(UART2_HWAttrs const *hwAttrs)</argsstring>
        <name>UART2Support_uartRxError</name>
        <param>
          <type>UART2_HWAttrs const *</type>
          <declname>hwAttrs</declname>
        </param>
        <briefdescription>
<para>Function to clear receive errors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hwAttrs</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a UART2_HWAttrs structure</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a status indicating success or failure of the read.</para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>UART2_STATUS_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>The call was successful. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UART2_STATUS_EOVERRUN</parametername>
</parameternamelist>
<parameterdescription>
<para>A fifo overrun occurred. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UART2_STATUS_EFRAMING</parametername>
</parameternamelist>
<parameterdescription>
<para>A framinig error occurred. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UART2_STATUS_EBREAK</parametername>
</parameternamelist>
<parameterdescription>
<para>A break error occurred. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UART2_STATUS_EPARITY</parametername>
</parameternamelist>
<parameterdescription>
<para>A parity error occurred. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/drivers/uart2/UART2Support.h" line="195" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Holder of common helper functions for the UART driver. </para>    </briefdescription>
    <detaileddescription>
<para>============================================================================</para><para><hruler/>
 </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020-2022,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor">#ifndef<sp/>ti_drivers_UART2Support__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_UART2Support__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_u_a_r_t2_8h" kindref="compound">ti/drivers/UART2.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_a_r_t2_support_8h_1add1648f9531ab7bf69c141e9020513dd" kindref="member">UART2Support_disableRx</ref>(UART2_HWAttrs<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*hwAttrs);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_a_r_t2_support_8h_1a96ce5b2fc0d5d1a83dbf1b04b480dc0e" kindref="member">UART2Support_disableTx</ref>(UART2_HWAttrs<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*hwAttrs);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_a_r_t2_support_8h_1a16536dd48438de510e9314d32b9a4638" kindref="member">UART2Support_dmaRefreshRx</ref>(<ref refid="struct_u_a_r_t2___config__" kindref="compound">UART2_Handle</ref><sp/>handle);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_a_r_t2_support_8h_1af87f619845597f880d86e0edc228a893" kindref="member">UART2Support_dmaStartRx</ref>(<ref refid="struct_u_a_r_t2___config__" kindref="compound">UART2_Handle</ref><sp/>handle);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_a_r_t2_support_8h_1ab071ebe64a172ad0ae1fdf355b8d4018" kindref="member">UART2Support_dmaStartTx</ref>(<ref refid="struct_u_a_r_t2___config__" kindref="compound">UART2_Handle</ref><sp/>handle);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_a_r_t2_support_8h_1ae2880dc3d97f4ef656f5aeb54d8036fc" kindref="member">UART2Support_dmaStopRx</ref>(<ref refid="struct_u_a_r_t2___config__" kindref="compound">UART2_Handle</ref><sp/>handle);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_u_a_r_t2_support_8h_1a26242940fa182adf84ce07d75d8aaa19" kindref="member">UART2Support_dmaStopTx</ref>(<ref refid="struct_u_a_r_t2___config__" kindref="compound">UART2_Handle</ref><sp/>handle);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_a_r_t2_support_8h_1a00471a550eb3143f3e0d3c94da6a0855" kindref="member">UART2Support_enableInts</ref>(<ref refid="struct_u_a_r_t2___config__" kindref="compound">UART2_Handle</ref><sp/>handle);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_a_r_t2_support_8h_1acdbcd6aeb58a979b6ea645f939478c3a" kindref="member">UART2Support_enableRx</ref>(UART2_HWAttrs<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*hwAttrs);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_a_r_t2_support_8h_1ae54a77b6ee26bf3aaa6cc4dbd16aed4a" kindref="member">UART2Support_enableTx</ref>(UART2_HWAttrs<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*hwAttrs);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_a_r_t2_support_8h_1a61f29885b9d19ac9a528f009a2b99dca" kindref="member">UART2Support_powerSetConstraint</ref>(<ref refid="struct_u_a_r_t2___config__" kindref="compound">UART2_Handle</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setFlashConstraint);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_u_a_r_t2_support_8h_1aab2e227303a33af4f02d9ab547154d2e" kindref="member">UART2Support_powerRelConstraint</ref>(<ref refid="struct_u_a_r_t2___config__" kindref="compound">UART2_Handle</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>relFlashConstraint);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int_fast16_t<sp/><ref refid="_u_a_r_t2_support_8h_1ac46c1cd3661a0139be9c0b04005333fc" kindref="member">UART2Support_rxStatus2ErrorCode</ref>(uint32_t<sp/>errorData);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_u_a_r_t2_support_8h_1a420108ef7da4c220925db1b6af19e242" kindref="member">UART2Support_sendData</ref>(UART2_HWAttrs<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*hwAttrs,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/>uint8_t<sp/>*buf);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_u_a_r_t2_support_8h_1a6ae5dc0b3d517f7cbf9b6302c96710f1" kindref="member">UART2Support_txDone</ref>(UART2_HWAttrs<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*hwAttrs);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_u_a_r_t2_support_8h_1a38833700d53cd5787c4bcc54e5a02fc3" kindref="member">UART2Support_uartRxError</ref>(UART2_HWAttrs<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*hwAttrs);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_UART2__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="source/ti/drivers/uart2/UART2Support.h"/>
  </compounddef>
</doxygen>
