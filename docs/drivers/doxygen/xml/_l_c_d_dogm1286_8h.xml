<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_l_c_d_dogm1286_8h" kind="file" language="C++">
    <compoundname>LCDDogm1286.h</compoundname>
    <includes refid="_s_p_i_8h" local="no">ti/drivers/SPI.h</includes>
    <includes local="no">ti/drivers/dpl/SemaphoreP.h</includes>
    <includedby refid="_display_dogm1286_8h" local="no">DisplayDogm1286.h</includedby>
    <incdepgraph>
      <node id="1001">
        <label>stdbool.h</label>
      </node>
      <node id="1003">
        <label>stdint.h</label>
      </node>
      <node id="1004">
        <label>ti/drivers/dpl/SemaphoreP.h</label>
      </node>
      <node id="1002">
        <label>stddef.h</label>
      </node>
      <node id="1000">
        <label>ti/drivers/SPI.h</label>
        <link refid="_s_p_i_8h"/>
        <childnode refid="1001" relation="include">
        </childnode>
        <childnode refid="1002" relation="include">
        </childnode>
        <childnode refid="1003" relation="include">
        </childnode>
      </node>
      <node id="999">
        <label>LCDDogm1286.h</label>
        <link refid="_l_c_d_dogm1286_8h"/>
        <childnode refid="1000" relation="include">
        </childnode>
        <childnode refid="1004" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1006">
        <label>DisplayDogm1286.h</label>
        <link refid="_display_dogm1286_8h"/>
      </node>
      <node id="1005">
        <label>LCDDogm1286.h</label>
        <link refid="_l_c_d_dogm1286_8h"/>
        <childnode refid="1006" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_l_c_d___params" prot="public">LCD_Params</innerclass>
    <innerclass refid="struct_l_c_d___command" prot="public">LCD_Command</innerclass>
    <innerclass refid="struct_l_c_d___buffer" prot="public">LCD_Buffer</innerclass>
    <innerclass refid="struct_l_c_d___object" prot="public">LCD_Object</innerclass>
    <innerclass refid="struct_l_c_d___h_w_attrs" prot="public">LCD_HWAttrs</innerclass>
    <innerclass refid="struct_l_c_d___config" prot="public">LCD_Config</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_l_c_d_dogm1286_8h_1a928104e5f675d3440ea7d9ed58ac70e1" prot="public" static="no">
        <name>LCD_PIXELS</name>
        <initializer>8192</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="266" column="9" bodyfile="source/ti/display/lcd/LCDDogm1286.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_l_c_d_dogm1286_8h_1a934cfbac97ccffd2447bafc8738ee9f2" prot="public" static="no">
        <name>LCD_BYTES</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of bytes needed in LCD buffer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="268" column="9" bodyfile="source/ti/display/lcd/LCDDogm1286.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_l_c_d_dogm1286_8h_1a0afb537ac0813a7acc2f797a4d3baa0b" prot="public" static="no">
        <name>LCD_COLS</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of pixel columns </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="270" column="9" bodyfile="source/ti/display/lcd/LCDDogm1286.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_l_c_d_dogm1286_8h_1ada0fff460272d8b44f3b469d208de0b3" prot="public" static="no">
        <name>LCD_X_MIN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First pixel on LCD x-axis </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="272" column="9" bodyfile="source/ti/display/lcd/LCDDogm1286.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_l_c_d_dogm1286_8h_1a1d9ba2d8f9cc2124ff29e24abbe2c90d" prot="public" static="no">
        <name>LCD_X_MAX</name>
        <initializer>(<ref refid="_l_c_d_dogm1286_8h_1a0afb537ac0813a7acc2f797a4d3baa0b" kindref="member">LCD_COLS</ref> - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Last pixel on LCD x-axis </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="274" column="9" bodyfile="source/ti/display/lcd/LCDDogm1286.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_l_c_d_dogm1286_8h_1a9a59fc4d524d3519a6bd0cb451850a65" prot="public" static="no">
        <name>LCD_ROWS</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of pixel rows </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="276" column="9" bodyfile="source/ti/display/lcd/LCDDogm1286.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_l_c_d_dogm1286_8h_1a57d5310c857f96d5315b04fda2f87a1e" prot="public" static="no">
        <name>LCD_Y_MIN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First pixel on LCD y-axis </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="278" column="9" bodyfile="source/ti/display/lcd/LCDDogm1286.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_l_c_d_dogm1286_8h_1ad14583f7d91ea48ff9f3e6ec9a920a11" prot="public" static="no">
        <name>LCD_Y_MAX</name>
        <initializer>(<ref refid="_l_c_d_dogm1286_8h_1a9a59fc4d524d3519a6bd0cb451850a65" kindref="member">LCD_ROWS</ref> - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Last pixel on LCD y-axis </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="280" column="9" bodyfile="source/ti/display/lcd/LCDDogm1286.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_l_c_d_dogm1286_8h_1a52bb29a342e1892b197f2d2b0a705550" prot="public" static="no">
        <name>LCD_PAGES</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="282" column="9" bodyfile="source/ti/display/lcd/LCDDogm1286.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_l_c_d_dogm1286_8h_1a8bacac7b7c712d9dd1a3bb85bb90ae84" prot="public" static="no">
        <name>LCD_PAGE_ROWS</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of pixel rows per LCD page </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="284" column="9" bodyfile="source/ti/display/lcd/LCDDogm1286.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_l_c_d_dogm1286_8h_1a4fad5c4c39b66358c5ab60f53d26ac86" prot="public" static="no">
        <name>LCD_CHAR_WIDTH</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Space used for each character </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="286" column="9" bodyfile="source/ti/display/lcd/LCDDogm1286.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_l_c_d_dogm1286_8h_1a311c85b23f68d1ae7b4c242c9fa14159" prot="public" static="no">
        <name>LCD_FONT_WIDTH</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Actual font character width </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="288" column="9" bodyfile="source/ti/display/lcd/LCDDogm1286.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_l_c_d_dogm1286_8h_1abd8709188c7b3da9995941f70249f6d5" prot="public" static="no">
        <name>LCD_Align</name>
        <enumvalue id="_l_c_d_dogm1286_8h_1abd8709188c7b3da9995941f70249f6d5a3d311dab5c4b18d56c5e15390e3ed694" prot="public">
          <name>LCD_ALIGN_LEFT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Text is aligned to the left </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_l_c_d_dogm1286_8h_1abd8709188c7b3da9995941f70249f6d5aefc05bcf179874ea14871f33617f55e7" prot="public">
          <name>LCD_ALIGN_CENTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Text is aligned in the center </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_l_c_d_dogm1286_8h_1abd8709188c7b3da9995941f70249f6d5a51b08200ccddb00bb9157ac2031f3e1a" prot="public">
          <name>LCD_ALIGN_RIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Text is aligned to the right </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>LCD alignment enum. </para>        </briefdescription>
        <detaileddescription>
<para>This enumeration defines the text alignment. It is used by LCD_bufferPrintxxxAligned functions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="303" column="1" bodyfile="source/ti/display/lcd/LCDDogm1286.h" bodystart="302" bodyend="307"/>
      </memberdef>
      <memberdef kind="enum" id="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023be" prot="public" static="no">
        <name>LCD_Page</name>
        <enumvalue id="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea5d088e98870705e757c0d10fd95771cd" prot="public">
          <name>LCD_PAGE0</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea44f463bf5e5c1fb3609c1c73c650b2f4" prot="public">
          <name>LCD_PAGE1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea7fa6486b29fd4f5b5d2265cb8abacd10" prot="public">
          <name>LCD_PAGE2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea587de21d67e48c862ada8f6a2a35a753" prot="public">
          <name>LCD_PAGE3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea0e386b6cb40d97bda67368627336b3de" prot="public">
          <name>LCD_PAGE4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea0e99c30f6d4196f06b9a927d0d8d45dd" prot="public">
          <name>LCD_PAGE5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea940495b5652f76c73d87f5380dd6e4d9" prot="public">
          <name>LCD_PAGE6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023beae54a3dc2f4b343a49f8ba6ea0a57480b" prot="public">
          <name>LCD_PAGE7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023beaef545e9e07dfe38c80b59bd18d742189" prot="public">
          <name>LCD_PAGE_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>LCD page enum. </para>        </briefdescription>
        <detaileddescription>
<para>This enumeration defines the LCD pages. It is used by LCD_bufferxxx functions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="317" column="1" bodyfile="source/ti/display/lcd/LCDDogm1286.h" bodystart="316" bodyend="327"/>
      </memberdef>
      <memberdef kind="enum" id="_l_c_d_dogm1286_8h_1a705e435e0177093225824d75041083ce" prot="public" static="no">
        <name>LCD_X_Limit</name>
        <enumvalue id="_l_c_d_dogm1286_8h_1a705e435e0177093225824d75041083cea1a9fc733f2ec111453b3435aa8d94a8f" prot="public">
          <name>LCD_X_FIRST</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_l_c_d_dogm1286_8h_1a705e435e0177093225824d75041083ceacd6a56f537d8e29eea6f7a2c3bf93ab9" prot="public">
          <name>LCD_X_LAST</name>
          <initializer>= ( 128  - 1)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>LCD x-axis enum. </para>        </briefdescription>
        <detaileddescription>
<para>This enumeration defines x axis limit It is used for x argument in LCD_bufferxxx functions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="337" column="1" bodyfile="source/ti/display/lcd/LCDDogm1286.h" bodystart="336" bodyend="340"/>
      </memberdef>
      <memberdef kind="enum" id="_l_c_d_dogm1286_8h_1a63ea0c2951a06bf871ddfa3a0fe34200" prot="public" static="no">
        <name>LCD_Y_Limit</name>
        <enumvalue id="_l_c_d_dogm1286_8h_1a63ea0c2951a06bf871ddfa3a0fe34200ab61b667439ad4a352bc60d5b801f0e25" prot="public">
          <name>LCD_Y_FIRST</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_l_c_d_dogm1286_8h_1a63ea0c2951a06bf871ddfa3a0fe34200ac8b3b0727bb45101afcc3493cebb72fd" prot="public">
          <name>LCD_Y_LAST</name>
          <initializer>= ( 64  - 1)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>LCD y-axis enum. </para>        </briefdescription>
        <detaileddescription>
<para>This enumeration defines y axis limit It is used for y argument in LCD_bufferxxx functions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="350" column="1" bodyfile="source/ti/display/lcd/LCDDogm1286.h" bodystart="349" bodyend="353"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" prot="public" static="no">
        <type>struct <ref refid="struct_l_c_d___config" kindref="compound">LCD_Config</ref> *</type>
        <definition>typedef struct LCD_Config* LCD_Handle</definition>
        <argsstring></argsstring>
        <name>LCD_Handle</name>
        <briefdescription>
<para>A handle that is returned from a <ref refid="_l_c_d_dogm1286_8h_1a7eda62cc528319af943746da6b5d7688" kindref="member">LCD_open()</ref> call. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="293" column="1" bodyfile="source/ti/display/lcd/LCDDogm1286.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_l_c_d_dogm1286_8h_1a37efe29deb0009a1cd4891a969cf8775" prot="public" static="no">
        <type>enum <ref refid="_l_c_d_dogm1286_8h_1abd8709188c7b3da9995941f70249f6d5" kindref="member">LCD_Align</ref></type>
        <definition>typedef enum LCD_Align  LCD_Align</definition>
        <argsstring></argsstring>
        <name>LCD_Align</name>
        <briefdescription>
<para>LCD alignment enum. </para>        </briefdescription>
        <detaileddescription>
<para>This enumeration defines the text alignment. It is used by LCD_bufferPrintxxxAligned functions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="307" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_l_c_d_dogm1286_8h_1a3d74c82d360d6881797c2b48fc5b4265" prot="public" static="no">
        <type>enum <ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023be" kindref="member">LCD_Page</ref></type>
        <definition>typedef enum LCD_Page  LCD_Page</definition>
        <argsstring></argsstring>
        <name>LCD_Page</name>
        <briefdescription>
<para>LCD page enum. </para>        </briefdescription>
        <detaileddescription>
<para>This enumeration defines the LCD pages. It is used by LCD_bufferxxx functions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="327" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_l_c_d_dogm1286_8h_1a998837ae7184adee6527cb2a51ac3598" prot="public" static="no">
        <type>enum <ref refid="_l_c_d_dogm1286_8h_1a705e435e0177093225824d75041083ce" kindref="member">LCD_X_Limit</ref></type>
        <definition>typedef enum LCD_X_Limit  LCD_X_Limit</definition>
        <argsstring></argsstring>
        <name>LCD_X_Limit</name>
        <briefdescription>
<para>LCD x-axis enum. </para>        </briefdescription>
        <detaileddescription>
<para>This enumeration defines x axis limit It is used for x argument in LCD_bufferxxx functions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="340" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_l_c_d_dogm1286_8h_1a3b3b2479aa52ec0991c6712bb3ba7ed5" prot="public" static="no">
        <type>enum <ref refid="_l_c_d_dogm1286_8h_1a63ea0c2951a06bf871ddfa3a0fe34200" kindref="member">LCD_Y_Limit</ref></type>
        <definition>typedef enum LCD_Y_Limit  LCD_Y_Limit</definition>
        <argsstring></argsstring>
        <name>LCD_Y_Limit</name>
        <briefdescription>
<para>LCD y-axis enum. </para>        </briefdescription>
        <detaileddescription>
<para>This enumeration defines y axis limit It is used for y argument in LCD_bufferxxx functions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="353" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_l_c_d_dogm1286_8h_1ae0bf31ded7b0402797216a9151be1ea3" prot="public" static="no">
        <type>struct <ref refid="struct_l_c_d___params" kindref="compound">LCD_Params</ref></type>
        <definition>typedef struct LCD_Params  LCD_Params</definition>
        <argsstring></argsstring>
        <name>LCD_Params</name>
        <briefdescription>
<para>LCD Parameters are used to with the <ref refid="_l_c_d_dogm1286_8h_1a7eda62cc528319af943746da6b5d7688" kindref="member">LCD_open()</ref> call. Default values for these parameters are set using <ref refid="_l_c_d_dogm1286_8h_1a65cc6910ac18d5d823205870acaf3dc3" kindref="member">LCD_Params_init()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="_s_p_i_8h_1a9c3dd1748332fd6e31c79a6538a71642" kindref="member">SPI_Params_init</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="369" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_l_c_d_dogm1286_8h_1aec810392c2a7c224a91179a5f36496c1" prot="public" static="no">
        <type>struct <ref refid="struct_l_c_d___command" kindref="compound">LCD_Command</ref></type>
        <definition>typedef struct LCD_Command  LCD_Command</definition>
        <argsstring></argsstring>
        <name>LCD_Command</name>
        <briefdescription>
<para>Format of LCD commands used by the LCD controller. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="394" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_l_c_d_dogm1286_8h_1a091af8426beb91861af26dd202ddc3d0" prot="public" static="no">
        <type>struct <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref></type>
        <definition>typedef struct LCD_Buffer  LCD_Buffer</definition>
        <argsstring></argsstring>
        <name>LCD_Buffer</name>
        <briefdescription>
<para><ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> used to store data to be printed on the LCD display. </para>        </briefdescription>
        <detaileddescription>
<para>A sample structure is shown below: <programlisting><codeline><highlight class="normal">LCD_Buffer<sp/>lcdBuffers[]<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{lcdBuffer0,<sp/>LCD_BYTES,<sp/>NULL},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{lcdBuffer1,<sp/>LCD_BYTES,<sp/>NULL},</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="412" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_l_c_d_dogm1286_8h_1aad7cfd1bc0b0593efef10fb73efdf148" prot="public" static="no">
        <type>struct <ref refid="struct_l_c_d___object" kindref="compound">LCD_Object</ref></type>
        <definition>typedef struct LCD_Object  LCD_Object</definition>
        <argsstring></argsstring>
        <name>LCD_Object</name>
        <briefdescription>
<para>LCD Object. </para>        </briefdescription>
        <detaileddescription>
<para>The application must not access any member variables of this structure! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="429" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_l_c_d_dogm1286_8h_1ac52079af6c7a6e8db90b350f5267e590" prot="public" static="no">
        <type>struct <ref refid="struct_l_c_d___h_w_attrs" kindref="compound">LCD_HWAttrs</ref></type>
        <definition>typedef struct LCD_HWAttrs  LCD_HWAttrs</definition>
        <argsstring></argsstring>
        <name>LCD_HWAttrs</name>
        <briefdescription>
<para>LCD Hardware attributes. </para>        </briefdescription>
        <detaileddescription>
<para>A sample structure is shown below: <programlisting><codeline><highlight class="normal">const<sp/>LCD_HWAttrs<sp/>lcdHWAttrs<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.LCD_initCmd<sp/>=<sp/>&amp;LCD_initCmd,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.lcdResetPin<sp/>=<sp/>Board_LCD_RST,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.lcdModePin<sp/>=<sp/>Board_LCD_MODE,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.lcdCsnPin<sp/>=<sp/>Board_LCD_CSN,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.spiIndex<sp/>=<sp/>Board_SPI0</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="459" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_l_c_d_dogm1286_8h_1a4cefc793530eae238dcce72c9335319b" prot="public" static="no">
        <type>struct <ref refid="struct_l_c_d___config" kindref="compound">LCD_Config</ref></type>
        <definition>typedef struct LCD_Config  LCD_Config</definition>
        <argsstring></argsstring>
        <name>LCD_Config</name>
        <briefdescription>
<para>The <ref refid="struct_l_c_d___config" kindref="compound">LCD_Config</ref> structure contains a set of pointers used to characterize the LCD driver implementation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="472" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_l_c_d_dogm1286_8h_1a411050fdcc6700760de47f49d470ec2a" prot="public" static="yes" mutable="no">
        <type>const <ref refid="struct_l_c_d___command" kindref="compound">LCD_Command</ref></type>
        <definition>const LCD_Command LCD_initCmd</definition>
        <argsstring></argsstring>
        <name>LCD_initCmd</name>
        <initializer>= {
    0x40, 
    0xA1, 
    0xC0, 
    0xA6, 
    0xA2, 
    0x2F, 
    0xF8, 
    0x00, 
    0x27, 
    0x81, 
    0x16, 
          
    0xAC, 
    0x00, 
    0xAF, 
    0xB0, 
    0x10, 
    0x00  
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="482" column="1" bodyfile="source/ti/display/lcd/LCDDogm1286.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1a9a6a62dcb23c554201420e7e555e6ecc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_close</definition>
        <argsstring>(LCD_Handle handle)</argsstring>
        <name>LCD_close</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to close the LCD instance specified by the LCD handle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_l_c_d_dogm1286_8h_1a7eda62cc528319af943746da6b5d7688" kindref="member">LCD_open()</ref> has to be called first. Function assumes that the handle is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD handle returned from <ref refid="_l_c_d_dogm1286_8h_1a7eda62cc528319af943746da6b5d7688" kindref="member">LCD_open()</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_l_c_d_dogm1286_8h_1a7eda62cc528319af943746da6b5d7688" kindref="member">LCD_open()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="514" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1a301a0b73016a44e015dbd374c08243d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_init</definition>
        <argsstring>(void)</argsstring>
        <name>LCD_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function initializes the LCD driver module. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>The LCD_config structure must exist and be persistent before this function can be called. This function must be called before any other LCD driver APIs. Calling context: Hwi, Swi, Task, Main. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="524" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1a7eda62cc528319af943746da6b5d7688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
        <definition>LCD_Handle LCD_open</definition>
        <argsstring>(LCD_Buffer *buffers, uint8_t nBuffers, LCD_Params *params)</argsstring>
        <name>LCD_open</name>
        <param>
          <type><ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> *</type>
          <declname>buffers</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>nBuffers</declname>
        </param>
        <param>
          <type><ref refid="struct_l_c_d___params" kindref="compound">LCD_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Function to set up the DOGM128W-6 LCD display. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>LCD controller has been initialized using <ref refid="_l_c_d_dogm1286_8h_1a301a0b73016a44e015dbd374c08243d4" kindref="member">LCD_init()</ref>. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffers</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer block.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nBuffers</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of buffers in the buffer block.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a parameter block, if NULL it will use default values</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to a LCD_Handle on success or a NULL it was already opened</para></simplesect>
<simplesect kind="see"><para><ref refid="_l_c_d_dogm1286_8h_1a9a6a62dcb23c554201420e7e555e6ecc" kindref="member">LCD_close()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="_l_c_d_dogm1286_8h_1a301a0b73016a44e015dbd374c08243d4" kindref="member">LCD_init()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="545" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1a65cc6910ac18d5d823205870acaf3dc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_Params_init</definition>
        <argsstring>(LCD_Params *params)</argsstring>
        <name>LCD_Params_init</name>
        <param>
          <type><ref refid="struct_l_c_d___params" kindref="compound">LCD_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Function to initialize the <ref refid="struct_l_c_d___params" kindref="compound">LCD_Params</ref> struct to its defaults. </para>        </briefdescription>
        <detaileddescription>
<para>Defaults values are: <programlisting><codeline><highlight class="normal">lcdWriteTimeout<sp/>=<sp/>BIOS_WAIT_FOREVER;</highlight></codeline>
<codeline><highlight class="normal">spiBitRate<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1000000;</highlight></codeline>
<codeline><highlight class="normal">spiFrameFormat<sp/><sp/>=<sp/>SPI_POL0_PHA0;</highlight></codeline>
</programlisting></para><para><simplesect kind="pre"><para>Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter structure to initialize </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="561" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1a1208372099f0929bbbd1a5ec8621afce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_writeLine</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, char *str, unsigned int uiValue, unsigned char ucFormat, unsigned char ucLine)</argsstring>
        <name>LCD_writeLine</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>uiValue</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucFormat</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucLine</declname>
        </param>
        <briefdescription>
<para>Function that writes a string and value to a buffer and sends it to the LCD display. The written page is being cleared before it is written to. </para>        </briefdescription>
        <detaileddescription>
<para>LCD_write will block task execution until all the data in buffer has been written to the LCD.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the string to print.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uiValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to print</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>Base of the value to print � 2,8,16 etc. ucFormat must be between 2 and 36, where 10 means decimal base, 16 hexadecimal, 8 octal, and 2 binary. If ucFormat is zero, only the string will get printed.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucLine</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to write. Must be a value from 0-7. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="590" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1a6974d1de55526b98c6af02c90fd34185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_update</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex)</argsstring>
        <name>LCD_update</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <briefdescription>
<para>Function that writes the specified buffer to the LCD display. </para>        </briefdescription>
        <detaileddescription>
<para>LCD_update will block task execution until all the data in buffer has been written to the LCD.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="611" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1abd9b38254fab63ff90f3b4b93d4c8d8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_updatePart</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucXFrom, unsigned char ucXTo, LCD_Page iPageFrom, LCD_Page iPageTo)</argsstring>
        <name>LCD_updatePart</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucXFrom</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucXTo</declname>
        </param>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023be" kindref="member">LCD_Page</ref></type>
          <declname>iPageFrom</declname>
        </param>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023be" kindref="member">LCD_Page</ref></type>
          <declname>iPageTo</declname>
        </param>
        <briefdescription>
<para>Function that sends the specified part of the given buffer to the corresponding part on the LCD. This function assumes <emphasis>ucXFrom</emphasis> &lt;= <emphasis>ucXTo</emphasis> and <emphasis>iPageFrom</emphasis> &lt;= <emphasis>iPageTo</emphasis>. The resolution is given in columns [0<ndash/>127] and pages [0<ndash/>7]. </para>        </briefdescription>
        <detaileddescription>
<para>LCD_updatePart will block task execution until all the data has been written to the LCD.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucXFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>The lowest x-position (column) to write [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucXTo</parametername>
</parameternamelist>
<parameterdescription>
<para>The highest x-position to write [ucXFrom<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iPageFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>The first page to write. Must be one of the following enumerated values: <itemizedlist>
<listitem><para><bold>LCD_PAGE0</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE1</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE2</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE3</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE4</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE5</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE6</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE7</bold> </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iPageTo</parametername>
</parameternamelist>
<parameterdescription>
<para>The last page to write [iPageFrom<ndash/>LCD_PAGE7].</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="649" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1a3f274bf5496eaf924a2eda563b753d1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferClear</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex)</argsstring>
        <name>LCD_bufferClear</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <briefdescription>
<para>Function that empties the specified LCD buffer. </para>        </briefdescription>
        <detaileddescription>
<para>LCD_bufferClear will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="670" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1a0f9a680f8ddc7a8c3bee766530246fcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferClearPage</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, LCD_Page iPage)</argsstring>
        <name>LCD_bufferClearPage</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023be" kindref="member">LCD_Page</ref></type>
          <declname>iPage</declname>
        </param>
        <briefdescription>
<para>This function clears the page specified by <emphasis>iPage</emphasis> in the given buffer. </para>        </briefdescription>
        <detaileddescription>
<para>LCD_bufferClearPage will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iPage</parametername>
</parameternamelist>
<parameterdescription>
<para>The page to clear. Must be one of the following enumerated values: <itemizedlist>
<listitem><para><bold>LCD_PAGE0</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE1</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE2</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE3</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE4</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE5</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE6</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE7</bold> </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="699" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1a13d5b0ec129280f820b07501cafd9247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferClearPart</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucXFrom, unsigned char ucXTo, LCD_Page iPageFrom, LCD_Page iPageTo)</argsstring>
        <name>LCD_bufferClearPart</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucXFrom</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucXTo</declname>
        </param>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023be" kindref="member">LCD_Page</ref></type>
          <declname>iPageFrom</declname>
        </param>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023be" kindref="member">LCD_Page</ref></type>
          <declname>iPageTo</declname>
        </param>
        <briefdescription>
<para>This function clears the pixels in a given piece of a page. Resolution is given in coulmns [0<ndash/>127] and pages [0<ndash/>7]. The function assumes <emphasis>ucXFrom</emphasis> &lt;= <emphasis>ucXTo</emphasis> and <emphasis>iPageFrom</emphasis> &lt;= <emphasis>iPageTo</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>LCD_bufferClearPart will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucXFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>The lowest x-position (column) to be cleared [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucXTo</parametername>
</parameternamelist>
<parameterdescription>
<para>The highest x-position to be cleared [ucXFrom<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iPageFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>The first page cleared. Must be one of the following enumerated values: <itemizedlist>
<listitem><para><bold>LCD_PAGE0</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE1</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE2</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE3</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE4</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE5</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE6</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE7</bold> </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iPageTo</parametername>
</parameternamelist>
<parameterdescription>
<para>The last page cleared [iPageFrom<ndash/>LCD_PAGE7].</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="737" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1af2908b510d4b4ae4ab1fc1a1620d66b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferInvert</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucXFrom, unsigned char ucYFrom, unsigned char ucXTo, unsigned char ucYTo)</argsstring>
        <name>LCD_bufferInvert</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucXFrom</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucYFrom</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucXTo</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucYTo</declname>
        </param>
        <briefdescription>
<para>This function inverts the pixels (bits) in a given region of the specified buffer. </para>        </briefdescription>
        <detaileddescription>
<para>LCD_bufferInvert will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucXFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>The first x-position (column) to invert [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucYFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>is the first y-position (row) to invert [0<ndash/>63].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucXTo</parametername>
</parameternamelist>
<parameterdescription>
<para>The last x-position (column) to invert [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucYTo</parametername>
</parameternamelist>
<parameterdescription>
<para>The last y-position (row) to invert [0<ndash/>63].</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="769" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1a513135f9dc91ff5fbd6175e0c3c392ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferInvertPage</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucXFrom, unsigned char ucXTo, LCD_Page iPage)</argsstring>
        <name>LCD_bufferInvertPage</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucXFrom</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucXTo</declname>
        </param>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023be" kindref="member">LCD_Page</ref></type>
          <declname>iPage</declname>
        </param>
        <briefdescription>
<para>This function inverts a range of columns in the display buffer on a specified page (for example, <bold>LCD_PAGE0</bold>). This function assumes <emphasis>ucXFrom</emphasis> &lt;= <emphasis>ucXTo</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>LCD_bufferInvertPage will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucXFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>The first x-position (column) to invert [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucXTo</parametername>
</parameternamelist>
<parameterdescription>
<para>The last x-position (column) to invert [ucXFrom<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iPage</parametername>
</parameternamelist>
<parameterdescription>
<para>The page on which to invert. Must be one of the following enumerated values: <itemizedlist>
<listitem><para><bold>LCD_PAGE0</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE1</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE2</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE3</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE4</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE5</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE6</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE7</bold> </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="808" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1a6f1ed502ab103ba04643798985dbcb11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferPrintString</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, const char *pcStr, unsigned char ucX, LCD_Page iPage)</argsstring>
        <name>LCD_bufferPrintString</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcStr</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucX</declname>
        </param>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023be" kindref="member">LCD_Page</ref></type>
          <declname>iPage</declname>
        </param>
        <briefdescription>
<para>Function that writes a string to the specified buffer. </para>        </briefdescription>
        <detaileddescription>
<para>LCD_bufferPrintString will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pcStr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the string to print.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucX</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-position (column) to begin printing [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iPage</parametername>
</parameternamelist>
<parameterdescription>
<para>The page on which to print. Must be one of the following enumerated values: <itemizedlist>
<listitem><para><bold>LCD_PAGE0</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE1</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE2</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE3</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE4</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE5</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE6</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE7</bold> </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="844" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1a91b19df1b66a71acbe38ec9dcd76d5c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferPrintStringAligned</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, const char *pcStr, LCD_Align iAlignment, LCD_Page iPage)</argsstring>
        <name>LCD_bufferPrintStringAligned</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pcStr</declname>
        </param>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1abd8709188c7b3da9995941f70249f6d5" kindref="member">LCD_Align</ref></type>
          <declname>iAlignment</declname>
        </param>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023be" kindref="member">LCD_Page</ref></type>
          <declname>iPage</declname>
        </param>
        <briefdescription>
<para>This function writes a string to the given buffer specified by the <emphasis>iAlignment</emphasis> argument. </para>        </briefdescription>
        <detaileddescription>
<para>LCD_bufferPrintStringAligned will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pcStr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the string to print.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iAlignment</parametername>
</parameternamelist>
<parameterdescription>
<para>The text alignment. Must be one of the following enumerated values: <itemizedlist>
<listitem><para><bold>LCD_ALIGN_LEFT</bold> </para></listitem>
<listitem><para><bold>LCD_ALIGN_CENTER</bold> </para></listitem>
<listitem><para><bold>LCD_ALIGN_RIGHT</bold> </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iPage</parametername>
</parameternamelist>
<parameterdescription>
<para>The page on which to print. Must be one of the following enumerated values: <itemizedlist>
<listitem><para><bold>LCD_PAGE0</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE1</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE2</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE3</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE4</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE5</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE6</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE7</bold> </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="886" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1ae67a1e76c36a173a26a1f617ed7cb86e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferPrintInt</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, int i32Number, unsigned char ucX, LCD_Page iPage)</argsstring>
        <name>LCD_bufferPrintInt</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i32Number</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucX</declname>
        </param>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023be" kindref="member">LCD_Page</ref></type>
          <declname>iPage</declname>
        </param>
        <briefdescription>
<para>Function that writes an integer to the specified buffer. </para>        </briefdescription>
        <detaileddescription>
<para>LCD_bufferPrintInt will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i32Number</parametername>
</parameternamelist>
<parameterdescription>
<para>The number to print.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucX</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-position (column) to begin printing [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iPage</parametername>
</parameternamelist>
<parameterdescription>
<para>The page on which to print. Must be one of the following enumerated values: <itemizedlist>
<listitem><para><bold>LCD_PAGE0</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE1</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE2</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE3</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE4</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE5</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE6</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE7</bold> </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="921" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1ae446df10e9b11284d958350bafb01956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferPrintIntAligned</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, int i32Number, LCD_Align iAlignment, LCD_Page iPage)</argsstring>
        <name>LCD_bufferPrintIntAligned</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i32Number</declname>
        </param>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1abd8709188c7b3da9995941f70249f6d5" kindref="member">LCD_Align</ref></type>
          <declname>iAlignment</declname>
        </param>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023be" kindref="member">LCD_Page</ref></type>
          <declname>iPage</declname>
        </param>
        <briefdescription>
<para>This function writes an integer to the given buffer as specified by the <emphasis>iAlignment</emphasis> argument. </para>        </briefdescription>
        <detaileddescription>
<para>LCD_bufferPrintIntAligned will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i32Number</parametername>
</parameternamelist>
<parameterdescription>
<para>The number to be printed.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iAlignment</parametername>
</parameternamelist>
<parameterdescription>
<para>The text alignment. Must be one of the following enumerated values: <itemizedlist>
<listitem><para><bold>LCD_ALIGN_LEFT</bold> </para></listitem>
<listitem><para><bold>LCD_ALIGN_CENTER</bold> </para></listitem>
<listitem><para><bold>LCD_ALIGN_RIGHT</bold> </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iPage</parametername>
</parameternamelist>
<parameterdescription>
<para>The page on which to print. Must be one of the following enumerated values: <itemizedlist>
<listitem><para><bold>LCD_PAGE0</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE1</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE2</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE3</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE4</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE5</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE6</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE7</bold> </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="962" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1a3e57bb5655ffd5a694f251fcbeccc610" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferPrintFloat</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, float fNumber, unsigned char ucDecimals, unsigned char ucX, LCD_Page iPage)</argsstring>
        <name>LCD_bufferPrintFloat</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fNumber</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucDecimals</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucX</declname>
        </param>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023be" kindref="member">LCD_Page</ref></type>
          <declname>iPage</declname>
        </param>
        <briefdescription>
<para>This function writes a number of data type float to the given buffer at a specified column and page. Use this function instead of performing a float to c-string conversion and then using <ref refid="_l_c_d_dogm1286_8h_1a6f1ed502ab103ba04643798985dbcb11" kindref="member">LCD_bufferPrintString()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>LCD_bufferPrintFloat will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>The number to print.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucDecimals</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of decimals to print, MAX = 10.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucX</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-position (column) to begin printing [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iPage</parametername>
</parameternamelist>
<parameterdescription>
<para>The page on which to print. Must be one of the following enumerated values: <itemizedlist>
<listitem><para><bold>LCD_PAGE0</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE1</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE2</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE3</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE4</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE5</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE6</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE7</bold> </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="1004" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1a5342a001698e39fe6443cbcadf61e3f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferPrintFloatAligned</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, float fNumber, unsigned char ucDecimals, LCD_Align iAlignment, LCD_Page iPage)</argsstring>
        <name>LCD_bufferPrintFloatAligned</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fNumber</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucDecimals</declname>
        </param>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1abd8709188c7b3da9995941f70249f6d5" kindref="member">LCD_Align</ref></type>
          <declname>iAlignment</declname>
        </param>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023be" kindref="member">LCD_Page</ref></type>
          <declname>iPage</declname>
        </param>
        <briefdescription>
<para>This function writes a float number to the given buffer as specified by the <emphasis>iAlignment</emphasis> argument. </para>        </briefdescription>
        <detaileddescription>
<para>LCD_bufferPrintFloatAligned will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>The number to be printed.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucDecimals</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of decimals to be printed, MAX = 10.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iAlignment</parametername>
</parameternamelist>
<parameterdescription>
<para>The text alignment. Can be one of the following enumerated values: <itemizedlist>
<listitem><para><bold>LCD_ALIGN_LEFT</bold> </para></listitem>
<listitem><para><bold>LCD_ALIGN_CENTER</bold> </para></listitem>
<listitem><para><bold>LCD_ALIGN_RIGHT</bold> </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iPage</parametername>
</parameternamelist>
<parameterdescription>
<para>The page on which to print. Must be one of the following enumerated values: <itemizedlist>
<listitem><para><bold>LCD_PAGE0</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE1</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE2</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE3</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE4</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE5</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE6</bold> </para></listitem>
<listitem><para><bold>LCD_PAGE7</bold> </para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="1049" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1ae5fcaac1c5d5ce2fafecf38c8c78bb15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferSetLine</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucXFrom, unsigned char ucYFrom, unsigned char ucXTo, unsigned char ucYTo)</argsstring>
        <name>LCD_bufferSetLine</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucXFrom</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucYFrom</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucXTo</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucYTo</declname>
        </param>
        <briefdescription>
<para>This function draws a line in the specified buffer from (<emphasis>ucXFrom</emphasis>,<emphasis>ucYFrom</emphasis>) to (<emphasis>ucXTo</emphasis>,<emphasis>ucYTo</emphasis>). The function uses Bresenham&apos;s line algorithm. </para>        </briefdescription>
        <detaileddescription>
<para>This function will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucXFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>The start column [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucXTo</parametername>
</parameternamelist>
<parameterdescription>
<para>The end column [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucYFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>The start row [0<ndash/>63].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucYTo</parametername>
</parameternamelist>
<parameterdescription>
<para>The end row [0<ndash/>63].</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="1082" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1a5520daaaedbda09ccb4e1f804cb6387f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferClearLine</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucXFrom, unsigned char ucYFrom, unsigned char ucXTo, unsigned char ucYTo)</argsstring>
        <name>LCD_bufferClearLine</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucXFrom</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucYFrom</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucXTo</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucYTo</declname>
        </param>
        <briefdescription>
<para>This function clears a line in the specified buffer from (<emphasis>ucXFrom</emphasis>,<emphasis>ucYFrom</emphasis>) to (<emphasis>ucXTo</emphasis>,<emphasis>ucYTo</emphasis>). The function uses Bresenham&apos;s line algorithm. </para>        </briefdescription>
        <detaileddescription>
<para>This function will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucXFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>The start column [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucXTo</parametername>
</parameternamelist>
<parameterdescription>
<para>The end column [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucYFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>The start row [0<ndash/>63].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucYTo</parametername>
</parameternamelist>
<parameterdescription>
<para>The end row [0<ndash/>63].</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="1115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1abac67849744509fc2ace41db2eda90e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferSetHLine</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucXFrom, unsigned char ucXTo, unsigned char ucY)</argsstring>
        <name>LCD_bufferSetHLine</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucXFrom</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucXTo</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucY</declname>
        </param>
        <briefdescription>
<para>This function draws a horizontal line from (<emphasis>ucXFrom</emphasis>,<emphasis>ucY</emphasis>) to (<emphasis>ucXTo</emphasis>,<emphasis>ucY</emphasis>) into the specified buffer. </para>        </briefdescription>
        <detaileddescription>
<para>This function will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucXFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>The start column [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucXTo</parametername>
</parameternamelist>
<parameterdescription>
<para>The end column [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucY</parametername>
</parameternamelist>
<parameterdescription>
<para>The row [0<ndash/>63].</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="1145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1a33d49a7d0a49f12bf8ec12288404eb82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferClearHLine</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucXFrom, unsigned char ucXTo, unsigned char ucY)</argsstring>
        <name>LCD_bufferClearHLine</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucXFrom</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucXTo</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucY</declname>
        </param>
        <briefdescription>
<para>This function clears a horizontal line from (<emphasis>ucXFrom</emphasis>,<emphasis>ucY</emphasis>) to (<emphasis>ucXTo</emphasis>,<emphasis>ucY</emphasis>) from the specified buffer. </para>        </briefdescription>
        <detaileddescription>
<para>This function will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucXFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>The start column [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucXTo</parametername>
</parameternamelist>
<parameterdescription>
<para>The end column [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucY</parametername>
</parameternamelist>
<parameterdescription>
<para>The row [0<ndash/>63].</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="1174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1a6cd9439691ab890bdc12cb61739c71c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferSetVLine</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucX, unsigned char ucYFrom, unsigned char ucYTo)</argsstring>
        <name>LCD_bufferSetVLine</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucX</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucYFrom</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucYTo</declname>
        </param>
        <briefdescription>
<para>This function draws a vertical line from (ucX,ucYFrom) to (ucX,ucYTo) into the specified buffer. </para>        </briefdescription>
        <detaileddescription>
<para>This function will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucX</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-position (column) of the line [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucYFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>The start row [0<ndash/>63].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucYTo</parametername>
</parameternamelist>
<parameterdescription>
<para>The end row [0<ndash/>63].</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="1203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1af099bb3569888e86f758958d814bb58f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferClearVLine</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucX, unsigned char ucYFrom, unsigned char ucYTo)</argsstring>
        <name>LCD_bufferClearVLine</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucX</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucYFrom</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucYTo</declname>
        </param>
        <briefdescription>
<para>This function clears a vertical line from (<emphasis>ucX</emphasis>,<emphasis>ucYFrom</emphasis>) to (<emphasis>ucX</emphasis>,<emphasis>ucYTo</emphasis>) from the buffer specified. </para>        </briefdescription>
        <detaileddescription>
<para>This function will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucX</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-position (column) of the line [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucYFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>The start row [0<ndash/>63].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucYTo</parametername>
</parameternamelist>
<parameterdescription>
<para>The end row [0<ndash/>63].</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="1232" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1ad9460c9ec6519a340e36d26d365bbed5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferHArrow</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucXFrom, unsigned char ucXTo, unsigned char ucY)</argsstring>
        <name>LCD_bufferHArrow</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucXFrom</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucXTo</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucY</declname>
        </param>
        <briefdescription>
<para>This function draws a horizontal arrow from (<emphasis>ucXFrom</emphasis>,<emphasis>ucY</emphasis>) to (<emphasis>ucXTo</emphasis>,<emphasis>ucY</emphasis>) to buffer specified. The function assumes <emphasis>ucY</emphasis> to be in the range [2<ndash/>61] in order for arrowhead to fit on the LCD. </para>        </briefdescription>
        <detaileddescription>
<para>This function will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucXFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>The start column [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucXTo</parametername>
</parameternamelist>
<parameterdescription>
<para>The end column [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucY</parametername>
</parameternamelist>
<parameterdescription>
<para>The the y-position (row) of the arrow [2<ndash/>61].</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="1263" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1a40b3e9e6a7086787047a174815dfeb70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferVArrow</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucX, unsigned char ucYFrom, unsigned char ucYTo)</argsstring>
        <name>LCD_bufferVArrow</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucX</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucYFrom</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucYTo</declname>
        </param>
        <briefdescription>
<para>This function draws a vertical arrow from (<emphasis>ucX</emphasis>,<emphasis>ucYFrom</emphasis>) to (<emphasis>ucX</emphasis>,<emphasis>ucYTo</emphasis>) to the buffer specified. The function assumes that <emphasis>ucX</emphasis> is in the range [2<ndash/>125] for the arrowhead to fit on the LCD. </para>        </briefdescription>
        <detaileddescription>
<para>This function will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucX</parametername>
</parameternamelist>
<parameterdescription>
<para>The the x-position (column) of the arrow [2<ndash/>125].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucYFrom</parametername>
</parameternamelist>
<parameterdescription>
<para>The start row [0<ndash/>63].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucYTo</parametername>
</parameternamelist>
<parameterdescription>
<para>The end row [0<ndash/>63].</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="1294" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1a028108d7554d62733d00295fd150a2a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferSetPx</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucX, unsigned char ucY)</argsstring>
        <name>LCD_bufferSetPx</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucX</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucY</declname>
        </param>
        <briefdescription>
<para>This function sets a pixel on (<emphasis>ucX</emphasis>,<emphasis>ucY</emphasis>). </para>        </briefdescription>
        <detaileddescription>
<para>This function will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucX</parametername>
</parameternamelist>
<parameterdescription>
<para>The pixel x-position (column) [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucY</parametername>
</parameternamelist>
<parameterdescription>
<para>The pixel y-position (row) [0<ndash/>63].</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="1320" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1aa99fc0e617619d6f7b9befd56ffac26c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferClearPx</definition>
        <argsstring>(LCD_Handle handle, unsigned int bufIndex, unsigned char ucX, unsigned char ucY)</argsstring>
        <name>LCD_bufferClearPx</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>bufIndex</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucX</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucY</declname>
        </param>
        <briefdescription>
<para>This function clears the pixel at (<emphasis>ucX</emphasis>,<emphasis>ucY</emphasis>). </para>        </briefdescription>
        <detaileddescription>
<para>This function will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffer is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to use, specified by its index in the <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucX</parametername>
</parameternamelist>
<parameterdescription>
<para>The pixel x-position (column) [0<ndash/>127].</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucY</parametername>
</parameternamelist>
<parameterdescription>
<para>The pixel y-position (row) [0<ndash/>63].</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="1341" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1afa33971216c7767eb3f3790615fa9a31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_bufferCopy</definition>
        <argsstring>(LCD_Handle handle, unsigned int fromBufIndex, unsigned int toBufIndex)</argsstring>
        <name>LCD_bufferCopy</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>fromBufIndex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>toBufIndex</declname>
        </param>
        <briefdescription>
<para>This function copies the content of <emphasis>fromBufIndex</emphasis> to <emphasis>toBufIndex</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>This function will block task execution until all the buffer modification has finished.</para><para><simplesect kind="pre"><para>Function assumes that the handle and buffers are not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fromBufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the destination buffer.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>toBufIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the target buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="1362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_dogm1286_8h_1ac159f265608d80bd4baff4c3a4d30959" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCD_setContrast</definition>
        <argsstring>(LCD_Handle handle, unsigned char ucContrast)</argsstring>
        <name>LCD_setContrast</name>
        <param>
          <type><ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>ucContrast</declname>
        </param>
        <briefdescription>
<para>This Function sets the LCD contrast. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>Function assumes that the handle is not NULL. Calling context: Task.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A LCD_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ucContrast</parametername>
</parameternamelist>
<parameterdescription>
<para>The contrast value [0<ndash/>63].</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/ti/display/lcd/LCDDogm1286.h" line="1378" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>LCD driver implementation for a DOGM128W-6 LCD display. </para>    </briefdescription>
    <detaileddescription>
<para>============================================================================</para><para><heading level="1">Driver include</heading>
</para><para>The LCD header file should be included in an application as follows: <programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/mw/lcd/LCDDogm1286.h&gt;</highlight></codeline>
</programlisting></para><para><heading level="1">Overview</heading>
</para><para>This LCD driver implementation is designed to operate on a DOGM128W-6 LCD display. This display is the one used on the SmartRF06 EB (Evaluation Board). The LCD display can be written to by first writing the data to display to an internal buffer, and then sending the buffer content to the LCD display. The LCD driver will make use of the SPI driver for updating the display. The driver contains different functions for both modifying the internal buffer and for updating the display with the buffer content.</para><para>The DOGM128W-6 LCD display contains 128 pixel columns and 64 pixel rows. The (x,y) coordinate system is as described below: <verbatim>*
*       X -----&gt;
*   Y   +---------------------------------------------+
*   |   |(0,0)              PAGE 0             (127,0)|
*   |   |                   PAGE 1                    |
*   v   |                   PAGE 2                    |
*       |                   PAGE 3                    |
*       |                   PAGE 4                    |
*       |                   PAGE 5                    |
*       |                   PAGE 6                    |
*       |(0,63)             PAGE 7            (127,63)|
*       +---------------------------------------------+
*  </verbatim></para><para>This LCD driver uses a 5x7 font, thus each character takes up 5 pixels width and 7 pixels height. Each line of text will take up one page of the display. The difference between the defined variables <ref refid="_l_c_d_dogm1286_8h_1a4fad5c4c39b66358c5ab60f53d26ac86" kindref="member">LCD_CHAR_WIDTH</ref> and <ref refid="_l_c_d_dogm1286_8h_1a311c85b23f68d1ae7b4c242c9fa14159" kindref="member">LCD_FONT_WIDTH</ref> equals the character spacing on the LCD display.</para><para><heading level="1">General Behavior</heading>
</para><para>Before using LCD:<itemizedlist>
<listitem><para>In order to use the DOGM128W-6 LCD display on the SmartRF06 EB, the application needs to first drive the Board_3V3_EN pin high to enable the 3.3V domain on the board.</para></listitem><listitem><para>The LCD display is configured by calling <ref refid="_l_c_d_dogm1286_8h_1a7eda62cc528319af943746da6b5d7688" kindref="member">LCD_open()</ref>. This function will in turn open the SPI driver and allocate the 2 additional control signals (through the PIN driver) required to operate the LCD.</para></listitem></itemizedlist>
</para><para>In total the following pins are required to operate the LCD on the SmartRF06EB: <verbatim>*  Board_SPI0_PICO     (Serial peripheral interface, Peripheral-In-Controller-Out, controlled by LCD driver)
*  Board_SPI0_POCI     (Serial peripheral interface, Peripheral-Out-Controller-In, controlled by LCD driver)
*  Board_SPI0_CLK      (Serial peripheral interface, Clock, controlled by LCD driver)
*  Board_LCD_CSN       (Serial peripheral interface, Chip select, controlled by LCD driver)
*  Board_LCD_RST       (LCD reset signal, active low, controlled by LCD driver)
*  Board_LCD_MODE      (LCD mode signal, controlled by LCD driver)
*  Board_3V3_EN        (Enable the 3.3V domain. NOTE: Must be set by application, NOT controlled by LCD driver)
*  </verbatim></para><para>The following SPI parameters will be fixed by the LCD driver:<itemizedlist>
<listitem><para>transferMode = <ref refid="_s_p_i_8h_1ab9ea76c6529d6076eee5e1c4a5a92c6fa0dfb2358e008316426895e7237c398e8" kindref="member">SPI_MODE_BLOCKING</ref></para></listitem><listitem><para>transferTimeout = BIOS_WAIT_FOREVER</para></listitem><listitem><para>mode = <ref refid="_s_p_i_8h_1a60a7e3d74577b38aa79ea6983362f942a061361eeeb9e87265edcc0c70868111a" kindref="member">SPI_CONTROLLER</ref></para></listitem><listitem><para>dataSize = 8</para></listitem></itemizedlist>
</para><para>The APIs in this driver serve as an interface to a typical TI-RTOS application. The specific peripheral implementations are responsible to create all the SYS/BIOS specific primitives to allow for thread-safe operation.</para><para>After LCD operation has ended:<itemizedlist>
<listitem><para>Release system dependencies for LCD by calling <ref refid="_l_c_d_dogm1286_8h_1a9a6a62dcb23c554201420e7e555e6ecc" kindref="member">LCD_close()</ref>.</para></listitem></itemizedlist>
</para><para><heading level="1">Error handling</heading>
</para><para>Please refer to the SPI driver documentation for information about error handling during a SPI transaction.</para><para>If an error occurs when modifying the internal buffers, the functions are return without completing the buffer modification.</para><para><heading level="1">Power Management</heading>
</para><para>The TI-RTOS power management framework will try to put the device into the most power efficient mode whenever possible. Please see the technical reference manual for further details on each power mode.</para><para>The LCD driver makes use of the SPICC26XXDMA driver, which is setting a power constraint during transfers to keep the device out of standby. I.e. device will enter idle mode when no tasks are active. When the transfer has finished, the power constraint is released.</para><para><heading level="1">LCD Details</heading>
</para><para><heading level="2">Allocating space to internal buffers</heading>
</para><para>The LCD driver joined (at link time) to an array of <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref> structures named <emphasis>lcdBuffers</emphasis>. <emphasis>lcdBuffers</emphasis> is implemented in the application with each entry being an instance of a <ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref>. The number of buffers availible must be passed as an argument to <ref refid="_l_c_d_dogm1286_8h_1a7eda62cc528319af943746da6b5d7688" kindref="member">LCD_open()</ref>. Each entry in <emphasis>lcdBuffers</emphasis> contains a:<itemizedlist>
<listitem><para>(Char *) which points to a buffer with data to be printed on the LCD</para></listitem><listitem><para>(unsigned int) which is the size of the buffer</para></listitem><listitem><para>(SemaphoreP_Struct) which is a semaphore to be associated with the buffer. The Semaphores will be constructed by the LCD driver when it is being opened, and is being used to block task execution while the associated buffer is in use.</para></listitem></itemizedlist>
</para><para><heading level="2">Modifying internal buffers and updating LCD display</heading>
</para><para>Before the LCD screen can be filled, the data to display must be written to the internal buffers. All functions called LCD_bufferxxxx are only modifying the internal buffers. To send the buffer content to the LCD display, one must use the functions <ref refid="_l_c_d_dogm1286_8h_1a6974d1de55526b98c6af02c90fd34185" kindref="member">LCD_update()</ref> or <ref refid="_l_c_d_dogm1286_8h_1abd9b38254fab63ff90f3b4b93d4c8d8b" kindref="member">LCD_updatePart()</ref>. The only exception from this is the function <ref refid="_l_c_d_dogm1286_8h_1a1208372099f0929bbbd1a5ec8621afce" kindref="member">LCD_writeLine()</ref>, which both modifies a buffer and send the content to the LCD display.</para><para><heading level="1">Supported Functions</heading>
</para><para><table rows="29" cols="2"><row>
<entry thead="yes"><para>API function </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1a7eda62cc528319af943746da6b5d7688" kindref="member">LCD_open()</ref> </para></entry><entry thead="no"><para>Initialize LCD display and configure SPI driver </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1a9a6a62dcb23c554201420e7e555e6ecc" kindref="member">LCD_close()</ref> </para></entry><entry thead="no"><para>Disable LCD operation </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1a1208372099f0929bbbd1a5ec8621afce" kindref="member">LCD_writeLine()</ref> </para></entry><entry thead="no"><para>Write a string and a number to a page on the LCD display </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1a6974d1de55526b98c6af02c90fd34185" kindref="member">LCD_update()</ref> </para></entry><entry thead="no"><para>Write the content of a LCD buffer to the display </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1abd9b38254fab63ff90f3b4b93d4c8d8b" kindref="member">LCD_updatePart()</ref> </para></entry><entry thead="no"><para>Write part of a LCD buffer to the display </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1a3f274bf5496eaf924a2eda563b753d1b" kindref="member">LCD_bufferClear()</ref> </para></entry><entry thead="no"><para>Empty an entire LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1a0f9a680f8ddc7a8c3bee766530246fcb" kindref="member">LCD_bufferClearPage()</ref> </para></entry><entry thead="no"><para>Empty an entire page in a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1a13d5b0ec129280f820b07501cafd9247" kindref="member">LCD_bufferClearPart()</ref> </para></entry><entry thead="no"><para>Empty part of a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1af2908b510d4b4ae4ab1fc1a1620d66b0" kindref="member">LCD_bufferInvert()</ref> </para></entry><entry thead="no"><para>Invert the pixels of a part of a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1a513135f9dc91ff5fbd6175e0c3c392ed" kindref="member">LCD_bufferInvertPage()</ref> </para></entry><entry thead="no"><para>Invert the pixels of a page in a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1a6f1ed502ab103ba04643798985dbcb11" kindref="member">LCD_bufferPrintString()</ref> </para></entry><entry thead="no"><para>Write a string to a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1a91b19df1b66a71acbe38ec9dcd76d5c1" kindref="member">LCD_bufferPrintStringAligned()</ref> </para></entry><entry thead="no"><para>Write an aligned string to a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1ae67a1e76c36a173a26a1f617ed7cb86e" kindref="member">LCD_bufferPrintInt()</ref> </para></entry><entry thead="no"><para>Write an integer to a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1ae446df10e9b11284d958350bafb01956" kindref="member">LCD_bufferPrintIntAligned()</ref> </para></entry><entry thead="no"><para>Write an aligned integer to a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1a3e57bb5655ffd5a694f251fcbeccc610" kindref="member">LCD_bufferPrintFloat()</ref> </para></entry><entry thead="no"><para>Write a floating point number to a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1a5342a001698e39fe6443cbcadf61e3f7" kindref="member">LCD_bufferPrintFloatAligned()</ref> </para></entry><entry thead="no"><para>Write an aligned floating point number to a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1ae5fcaac1c5d5ce2fafecf38c8c78bb15" kindref="member">LCD_bufferSetLine()</ref> </para></entry><entry thead="no"><para>Draw a line to a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1a5520daaaedbda09ccb4e1f804cb6387f" kindref="member">LCD_bufferClearLine()</ref> </para></entry><entry thead="no"><para>Clear a line from a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1abac67849744509fc2ace41db2eda90e1" kindref="member">LCD_bufferSetHLine()</ref> </para></entry><entry thead="no"><para>Draw a horizontal line to a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1a33d49a7d0a49f12bf8ec12288404eb82" kindref="member">LCD_bufferClearHLine()</ref> </para></entry><entry thead="no"><para>Clear a horizontal line from a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1a6cd9439691ab890bdc12cb61739c71c1" kindref="member">LCD_bufferSetVLine()</ref> </para></entry><entry thead="no"><para>Draw a vertical line to a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1af099bb3569888e86f758958d814bb58f" kindref="member">LCD_bufferClearVLine()</ref> </para></entry><entry thead="no"><para>Clear a vertical line from a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1ad9460c9ec6519a340e36d26d365bbed5" kindref="member">LCD_bufferHArrow()</ref> </para></entry><entry thead="no"><para>Draw a horizontal arrow to a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1a40b3e9e6a7086787047a174815dfeb70" kindref="member">LCD_bufferVArrow()</ref> </para></entry><entry thead="no"><para>Draw a vertical arrow to a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1a028108d7554d62733d00295fd150a2a6" kindref="member">LCD_bufferSetPx()</ref> </para></entry><entry thead="no"><para>Set a pixel in a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1aa99fc0e617619d6f7b9befd56ffac26c" kindref="member">LCD_bufferClearPx()</ref> </para></entry><entry thead="no"><para>Clear a pixel in a LCD buffer </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1afa33971216c7767eb3f3790615fa9a31" kindref="member">LCD_bufferCopy()</ref> </para></entry><entry thead="no"><para>Copy content of one LCD buffer into another </para></entry></row>
<row>
<entry thead="no"><para><ref refid="_l_c_d_dogm1286_8h_1ac159f265608d80bd4baff4c3a4d30959" kindref="member">LCD_setContrast()</ref> </para></entry><entry thead="no"><para>Set the contrast of the LCD display </para></entry></row>
</table>
<heading level="2">Use Cases<anchor id="_l_c_d_dogm1286_8h_1USE_CASES_LCD"/></heading>
</para><para>The most basic use cases discribed are described below. A complete LCD example can also be found in the TI-RTOS SimpleLink distribution.</para><para><heading level="3">Configuring the LCD display</heading>
</para><para><programlisting><codeline><highlight class="normal">LCD_Handle<sp/>lcdHandle;</highlight></codeline>
<codeline><highlight class="normal">LCD_Params<sp/>lcdParams;</highlight></codeline>
<codeline><highlight class="normal">PIN_State<sp/><sp/>pinState;</highlight></codeline>
<codeline><highlight class="normal">PIN_Handle<sp/>hPins;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>This<sp/>application<sp/>supports<sp/>two<sp/>LCD<sp/>buffers</highlight></codeline>
<codeline><highlight class="normal">Char<sp/>lcdBuffer0[LCD_BYTES]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">Char<sp/>lcdBuffer1[LCD_BYTES]<sp/>=<sp/>{0};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Populate<sp/>LCD_Buffer<sp/>structure<sp/>with<sp/>buffer<sp/>pointers<sp/>and<sp/>buffer<sp/>sizes.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>The<sp/>Semaphore<sp/>structure<sp/>will<sp/>be<sp/>constructed<sp/>when<sp/>opening<sp/>the<sp/>LCD.</highlight></codeline>
<codeline><highlight class="normal">LCD_Buffer<sp/>lcdBuffers[]<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{lcdBuffer0,<sp/>LCD_BYTES,<sp/>NULL},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{lcdBuffer1,<sp/>LCD_BYTES,<sp/>NULL},</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Application<sp/>pin<sp/>table.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Drive<sp/>Board_3V3_EN<sp/>high<sp/>to<sp/>enble<sp/>3.3V<sp/>domain<sp/>on<sp/>SRF06EB</highlight></codeline>
<codeline><highlight class="normal">PIN_Config<sp/>pinList[]<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Board_3V3_EN<sp/><sp/><sp/><sp/><sp/>|<sp/>PIN_GPIO_OUTPUT_EN<sp/>|<sp/>PIN_GPIO_HIGH<sp/><sp/>|<sp/>PIN_PUSHPULL,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>PIN_TERMINATE</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Open<sp/>PIN<sp/>driver</highlight></codeline>
<codeline><highlight class="normal">hPins<sp/>=<sp/>PIN_open(&amp;pinState,<sp/>pinList);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Initialize<sp/>LCD<sp/>parameters</highlight></codeline>
<codeline><highlight class="normal">LCD_Params_init(&amp;lcdParams);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Optionally<sp/>override<sp/>default<sp/>bit<sp/>rate</highlight></codeline>
<codeline><highlight class="normal">lcdParams.spiBitRate<sp/>=<sp/>someNewSpiBitRate;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Open<sp/>LCD<sp/>driver,<sp/>using<sp/>2<sp/>buffers</highlight></codeline>
<codeline><highlight class="normal">lcdHandle<sp/>=<sp/>LCD_open(&amp;lcdBuffers[0],<sp/>2,<sp/>&amp;lcdParams);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Make<sp/>sure<sp/>it<sp/>was<sp/>successful</highlight></codeline>
<codeline><highlight class="normal">if<sp/>(!lcdHandle)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>System_abort(&quot;Error<sp/>initializing<sp/>LCD\n&quot;);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><heading level="3">Writing to the internal buffer</heading>
</para><para><programlisting><codeline><highlight class="normal">//<sp/>Clear<sp/>and<sp/>write<sp/>to<sp/>buffer<sp/>0</highlight></codeline>
<codeline><highlight class="normal">LCD_bufferClear(lcdHandle,<sp/>0);</highlight></codeline>
<codeline><highlight class="normal">LCD_bufferPrintString(lcdHandle,<sp/>0,<sp/>&quot;Writing<sp/>to<sp/>Buffer<sp/>0&quot;,<sp/>24,<sp/>LCD_PAGE0);</highlight></codeline>
<codeline><highlight class="normal">LCD_bufferSetHLine(lcdHandle,<sp/>0,<sp/>LCD_X_FIRST,<sp/>LCD_X_LAST,<sp/>20);</highlight></codeline>
</programlisting></para><para><heading level="3">Updating LCD display with buffer content</heading>
</para><para><programlisting><codeline><highlight class="normal">//<sp/>Update<sp/>display<sp/>with<sp/>content<sp/>of<sp/>buffer<sp/>0</highlight></codeline>
<codeline><highlight class="normal">LCD_update(lcdHandle,<sp/>0);</highlight></codeline>
</programlisting></para><para><heading level="1">Instrumentation</heading>
</para><para>The LCD driver interface produces log statements if instrumentation is enabled.</para><para><table rows="2" cols="2"><row>
<entry thead="yes"><para>Diagnostics Mask </para></entry><entry thead="yes"><para>Log details  </para></entry></row>
<row>
<entry thead="no"><para>Diags_USER1 </para></entry><entry thead="no"><para>basic operations performed </para></entry></row>
</table>
<hruler/>
 </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2015-2023,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor">#ifndef<sp/>ti_drivers_lcd_LCDDogm1286__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_lcd_LCDDogm1286__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_s_p_i_8h" kindref="compound">ti/drivers/SPI.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ti/drivers/dpl/SemaphoreP.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="_l_c_d_dogm1286_8h_1a928104e5f675d3440ea7d9ed58ac70e1" refkind="member"><highlight class="preprocessor">#define<sp/>LCD_PIXELS<sp/><sp/><sp/><sp/><sp/>8192</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="_l_c_d_dogm1286_8h_1a934cfbac97ccffd2447bafc8738ee9f2" refkind="member"><highlight class="preprocessor">#define<sp/>LCD_BYTES<sp/><sp/><sp/><sp/><sp/><sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="_l_c_d_dogm1286_8h_1a0afb537ac0813a7acc2f797a4d3baa0b" refkind="member"><highlight class="preprocessor">#define<sp/>LCD_COLS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="_l_c_d_dogm1286_8h_1ada0fff460272d8b44f3b469d208de0b3" refkind="member"><highlight class="preprocessor">#define<sp/>LCD_X_MIN<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="_l_c_d_dogm1286_8h_1a1d9ba2d8f9cc2124ff29e24abbe2c90d" refkind="member"><highlight class="preprocessor">#define<sp/>LCD_X_MAX<sp/><sp/><sp/><sp/><sp/><sp/>(LCD_COLS<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="_l_c_d_dogm1286_8h_1a9a59fc4d524d3519a6bd0cb451850a65" refkind="member"><highlight class="preprocessor">#define<sp/>LCD_ROWS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="_l_c_d_dogm1286_8h_1a57d5310c857f96d5315b04fda2f87a1e" refkind="member"><highlight class="preprocessor">#define<sp/>LCD_Y_MIN<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="_l_c_d_dogm1286_8h_1ad14583f7d91ea48ff9f3e6ec9a920a11" refkind="member"><highlight class="preprocessor">#define<sp/>LCD_Y_MAX<sp/><sp/><sp/><sp/><sp/><sp/>(LCD_ROWS<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="_l_c_d_dogm1286_8h_1a52bb29a342e1892b197f2d2b0a705550" refkind="member"><highlight class="preprocessor">#define<sp/>LCD_PAGES<sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="_l_c_d_dogm1286_8h_1a8bacac7b7c712d9dd1a3bb85bb90ae84" refkind="member"><highlight class="preprocessor">#define<sp/>LCD_PAGE_ROWS<sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="_l_c_d_dogm1286_8h_1a4fad5c4c39b66358c5ab60f53d26ac86" refkind="member"><highlight class="preprocessor">#define<sp/>LCD_CHAR_WIDTH<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="_l_c_d_dogm1286_8h_1a311c85b23f68d1ae7b4c242c9fa14159" refkind="member"><highlight class="preprocessor">#define<sp/>LCD_FONT_WIDTH<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_l_c_d___config" kindref="compound">LCD_Config</ref><sp/>*<ref refid="_l_c_d_dogm1286_8h_1a72910a78c343543f1610fd082d17d803" kindref="member">LCD_Handle</ref>;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="_l_c_d_dogm1286_8h_1abd8709188c7b3da9995941f70249f6d5" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1abd8709188c7b3da9995941f70249f6d5" kindref="member">LCD_Align</ref></highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304" refid="_l_c_d_dogm1286_8h_1abd8709188c7b3da9995941f70249f6d5a3d311dab5c4b18d56c5e15390e3ed694" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_l_c_d_dogm1286_8h_1abd8709188c7b3da9995941f70249f6d5a3d311dab5c4b18d56c5e15390e3ed694" kindref="member">LCD_ALIGN_LEFT</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305" refid="_l_c_d_dogm1286_8h_1abd8709188c7b3da9995941f70249f6d5aefc05bcf179874ea14871f33617f55e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_l_c_d_dogm1286_8h_1abd8709188c7b3da9995941f70249f6d5aefc05bcf179874ea14871f33617f55e7" kindref="member">LCD_ALIGN_CENTER</ref>,<sp/></highlight></codeline>
<codeline lineno="306" refid="_l_c_d_dogm1286_8h_1abd8709188c7b3da9995941f70249f6d5a51b08200ccddb00bb9157ac2031f3e1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_l_c_d_dogm1286_8h_1abd8709188c7b3da9995941f70249f6d5a51b08200ccddb00bb9157ac2031f3e1a" kindref="member">LCD_ALIGN_RIGHT</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal">}<sp/><ref refid="_l_c_d_dogm1286_8h_1abd8709188c7b3da9995941f70249f6d5" kindref="member">LCD_Align</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023be" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023be" kindref="member">LCD_Page</ref></highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318" refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea5d088e98870705e757c0d10fd95771cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea5d088e98870705e757c0d10fd95771cd" kindref="member">LCD_PAGE0</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="319" refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea44f463bf5e5c1fb3609c1c73c650b2f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea44f463bf5e5c1fb3609c1c73c650b2f4" kindref="member">LCD_PAGE1</ref>,</highlight></codeline>
<codeline lineno="320" refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea7fa6486b29fd4f5b5d2265cb8abacd10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea7fa6486b29fd4f5b5d2265cb8abacd10" kindref="member">LCD_PAGE2</ref>,</highlight></codeline>
<codeline lineno="321" refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea587de21d67e48c862ada8f6a2a35a753" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea587de21d67e48c862ada8f6a2a35a753" kindref="member">LCD_PAGE3</ref>,</highlight></codeline>
<codeline lineno="322" refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea0e386b6cb40d97bda67368627336b3de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea0e386b6cb40d97bda67368627336b3de" kindref="member">LCD_PAGE4</ref>,</highlight></codeline>
<codeline lineno="323" refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea0e99c30f6d4196f06b9a927d0d8d45dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea0e99c30f6d4196f06b9a927d0d8d45dd" kindref="member">LCD_PAGE5</ref>,</highlight></codeline>
<codeline lineno="324" refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea940495b5652f76c73d87f5380dd6e4d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023bea940495b5652f76c73d87f5380dd6e4d9" kindref="member">LCD_PAGE6</ref>,</highlight></codeline>
<codeline lineno="325" refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023beae54a3dc2f4b343a49f8ba6ea0a57480b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023beae54a3dc2f4b343a49f8ba6ea0a57480b" kindref="member">LCD_PAGE7</ref>,</highlight></codeline>
<codeline lineno="326" refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023beaef545e9e07dfe38c80b59bd18d742189" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023beaef545e9e07dfe38c80b59bd18d742189" kindref="member">LCD_PAGE_COUNT</ref></highlight></codeline>
<codeline lineno="327"><highlight class="normal">}<sp/><ref refid="_l_c_d_dogm1286_8h_1aa44cf10c63a7f9e8d3fc52bdb03023be" kindref="member">LCD_Page</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="_l_c_d_dogm1286_8h_1a705e435e0177093225824d75041083ce" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a705e435e0177093225824d75041083ce" kindref="member">LCD_X_Limit</ref></highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338" refid="_l_c_d_dogm1286_8h_1a705e435e0177093225824d75041083cea1a9fc733f2ec111453b3435aa8d94a8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_l_c_d_dogm1286_8h_1a705e435e0177093225824d75041083cea1a9fc733f2ec111453b3435aa8d94a8f" kindref="member">LCD_X_FIRST</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="339" refid="_l_c_d_dogm1286_8h_1a705e435e0177093225824d75041083ceacd6a56f537d8e29eea6f7a2c3bf93ab9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_l_c_d_dogm1286_8h_1a705e435e0177093225824d75041083ceacd6a56f537d8e29eea6f7a2c3bf93ab9" kindref="member">LCD_X_LAST</ref><sp/><sp/>=<sp/>(<ref refid="_l_c_d_dogm1286_8h_1a0afb537ac0813a7acc2f797a4d3baa0b" kindref="member">LCD_COLS</ref><sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}<sp/><ref refid="_l_c_d_dogm1286_8h_1a705e435e0177093225824d75041083ce" kindref="member">LCD_X_Limit</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="_l_c_d_dogm1286_8h_1a63ea0c2951a06bf871ddfa3a0fe34200" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a63ea0c2951a06bf871ddfa3a0fe34200" kindref="member">LCD_Y_Limit</ref></highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351" refid="_l_c_d_dogm1286_8h_1a63ea0c2951a06bf871ddfa3a0fe34200ab61b667439ad4a352bc60d5b801f0e25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_l_c_d_dogm1286_8h_1a63ea0c2951a06bf871ddfa3a0fe34200ab61b667439ad4a352bc60d5b801f0e25" kindref="member">LCD_Y_FIRST</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="352" refid="_l_c_d_dogm1286_8h_1a63ea0c2951a06bf871ddfa3a0fe34200ac8b3b0727bb45101afcc3493cebb72fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_l_c_d_dogm1286_8h_1a63ea0c2951a06bf871ddfa3a0fe34200ac8b3b0727bb45101afcc3493cebb72fd" kindref="member">LCD_Y_LAST</ref><sp/><sp/>=<sp/>(<ref refid="_l_c_d_dogm1286_8h_1a9a59fc4d524d3519a6bd0cb451850a65" kindref="member">LCD_ROWS</ref><sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}<sp/><ref refid="_l_c_d_dogm1286_8h_1a63ea0c2951a06bf871ddfa3a0fe34200" kindref="member">LCD_Y_Limit</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="struct_l_c_d___params" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_l_c_d___params" kindref="compound">LCD_Params</ref></highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364" refid="struct_l_c_d___params_1a4d0eed4a93a0785c12eb26c48be77a28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___params_1a4d0eed4a93a0785c12eb26c48be77a28" kindref="member">lcdWriteTimeout</ref>;<sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SPI<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="struct_l_c_d___params_1a5670d1d33180c428d0b84154ca658098" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___params_1a5670d1d33180c428d0b84154ca658098" kindref="member">spiBitRate</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="368" refid="struct_l_c_d___params_1a27584b38ae256abf6358c4158da5be60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_p_i_8h_1a4e1f33555dfa8147205af5b266f3a489" kindref="member">SPI_FrameFormat</ref><sp/><ref refid="struct_l_c_d___params_1a27584b38ae256abf6358c4158da5be60" kindref="member">spiFrameFormat</ref>;<sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal">}<sp/><ref refid="_l_c_d_dogm1286_8h_1ae0bf31ded7b0402797216a9151be1ea3" kindref="member">LCD_Params</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="struct_l_c_d___command" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_l_c_d___command" kindref="compound">LCD_Command</ref></highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377" refid="struct_l_c_d___command_1ae4fbd8142bd9ee7b42020251b036efe6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___command_1ae4fbd8142bd9ee7b42020251b036efe6" kindref="member">displayStartLine</ref>;</highlight></codeline>
<codeline lineno="378" refid="struct_l_c_d___command_1a13174f610535ad591df48139b2e4c511" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___command_1a13174f610535ad591df48139b2e4c511" kindref="member">adcSet</ref>;</highlight></codeline>
<codeline lineno="379" refid="struct_l_c_d___command_1afe9d8a469e345bcbf35cfe14e5184eb4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___command_1afe9d8a469e345bcbf35cfe14e5184eb4" kindref="member">outputMode</ref>;</highlight></codeline>
<codeline lineno="380" refid="struct_l_c_d___command_1a795b45502f9138dfc6486297cd14628b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___command_1a795b45502f9138dfc6486297cd14628b" kindref="member">displayType</ref>;</highlight></codeline>
<codeline lineno="381" refid="struct_l_c_d___command_1a1ccb63cfbfab6ef7627a1951640ddbd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___command_1a1ccb63cfbfab6ef7627a1951640ddbd4" kindref="member">lcdBias</ref>;</highlight></codeline>
<codeline lineno="382" refid="struct_l_c_d___command_1a988a63f9ff8ca32ab6952c097de3e5a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___command_1a988a63f9ff8ca32ab6952c097de3e5a7" kindref="member">powerControl</ref>;</highlight></codeline>
<codeline lineno="383" refid="struct_l_c_d___command_1a9f62631a5984e53bf96647e1ce68c25c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___command_1a9f62631a5984e53bf96647e1ce68c25c" kindref="member">boosterRadio0</ref>;</highlight></codeline>
<codeline lineno="384" refid="struct_l_c_d___command_1a05a53c0a6c81f5db5438695b14c2f9a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___command_1a05a53c0a6c81f5db5438695b14c2f9a8" kindref="member">boosterRadio1</ref>;</highlight></codeline>
<codeline lineno="385" refid="struct_l_c_d___command_1a37382a7a2ddbd5ccdd3ee1db887bb50d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___command_1a37382a7a2ddbd5ccdd3ee1db887bb50d" kindref="member">contrastSet0</ref>;</highlight></codeline>
<codeline lineno="386" refid="struct_l_c_d___command_1aa031605824fe2c5e283c8bcd7f27e9db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___command_1aa031605824fe2c5e283c8bcd7f27e9db" kindref="member">contrastSet1</ref>;</highlight></codeline>
<codeline lineno="387" refid="struct_l_c_d___command_1af26bfd125db7aef96ce618bc31181a23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___command_1af26bfd125db7aef96ce618bc31181a23" kindref="member">contrastSet2</ref>;</highlight></codeline>
<codeline lineno="388" refid="struct_l_c_d___command_1a5b301143d4a24deb3946fd6a23b46b3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___command_1a5b301143d4a24deb3946fd6a23b46b3e" kindref="member">staticIndicator0</ref>;</highlight></codeline>
<codeline lineno="389" refid="struct_l_c_d___command_1af42f170bac9dfd5edfcf2a9f8b940525" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___command_1af42f170bac9dfd5edfcf2a9f8b940525" kindref="member">staticIndicator1</ref>;</highlight></codeline>
<codeline lineno="390" refid="struct_l_c_d___command_1ad5e77eb483dec8e803653904047f2945" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___command_1ad5e77eb483dec8e803653904047f2945" kindref="member">displayEn</ref>;</highlight></codeline>
<codeline lineno="391" refid="struct_l_c_d___command_1a0e0aeb304cfae0c5af8ec43c3c8daa50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___command_1a0e0aeb304cfae0c5af8ec43c3c8daa50" kindref="member">setPage</ref>;</highlight></codeline>
<codeline lineno="392" refid="struct_l_c_d___command_1a53634dafcc4b7694da1dbfa351b3986e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___command_1a53634dafcc4b7694da1dbfa351b3986e" kindref="member">columnHi</ref>;</highlight></codeline>
<codeline lineno="393" refid="struct_l_c_d___command_1adaf735a3cc75a92e5b8bbc51d7bf2975" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___command_1adaf735a3cc75a92e5b8bbc51d7bf2975" kindref="member">columnLo</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}<sp/><ref refid="_l_c_d_dogm1286_8h_1aec810392c2a7c224a91179a5f36496c1" kindref="member">LCD_Command</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="struct_l_c_d___buffer" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref></highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409" refid="struct_l_c_d___buffer_1af0f290cdf7fc2b94ebe0a918cc736982" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_l_c_d___buffer_1af0f290cdf7fc2b94ebe0a918cc736982" kindref="member">pcBuffer</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="410" refid="struct_l_c_d___buffer_1a77c4adb59142a732371a552558161ebf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___buffer_1a77c4adb59142a732371a552558161ebf" kindref="member">bufSize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="411" refid="struct_l_c_d___buffer_1ab6862a6a73f37992b448142930927e75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SemaphoreP_Struct<sp/><ref refid="struct_l_c_d___buffer_1ab6862a6a73f37992b448142930927e75" kindref="member">bufMutex</ref>;<sp/></highlight></codeline>
<codeline lineno="412"><highlight class="normal">}<sp/><ref refid="_l_c_d_dogm1286_8h_1a091af8426beb91861af26dd202ddc3d0" kindref="member">LCD_Buffer</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="struct_l_c_d___object" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_l_c_d___object" kindref="compound">LCD_Object</ref></highlight></codeline>
<codeline lineno="420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>LCD<sp/>control<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="struct_l_c_d___object_1ae964c8fbe9fda2b5cac3592a4b02b16d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___object_1ae964c8fbe9fda2b5cac3592a4b02b16d" kindref="member">isOpen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Has<sp/>the<sp/>obj<sp/>been<sp/>opened?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="struct_l_c_d___object_1ae5a83e239d37d34cf7c111cb879ab237" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i___config__" kindref="compound">SPI_Handle</ref><sp/><ref refid="struct_l_c_d___object_1ae5a83e239d37d34cf7c111cb879ab237" kindref="member">spiHandle</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SPI<sp/>handle<sp/>used<sp/>by<sp/>the<sp/>LCD<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="struct_l_c_d___object_1acb3f2edac00d7ef0a0cf2dc9b0ba3160" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___object_1acb3f2edac00d7ef0a0cf2dc9b0ba3160" kindref="member">lcdWriteTimeout</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Timeout<sp/>for<sp/>write<sp/>semaphore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="struct_l_c_d___object_1a1a903e5cf13da97d7d1bcd5f9277e880" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SemaphoreP_Struct<sp/><ref refid="struct_l_c_d___object_1a1a903e5cf13da97d7d1bcd5f9277e880" kindref="member">lcdMutex</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Semaphore<sp/>associated<sp/>with<sp/>the<sp/>lcd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="struct_l_c_d___object_1acf7322679a62a6a8f0d0c26363d33696" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref><sp/>*<ref refid="struct_l_c_d___object_1acf7322679a62a6a8f0d0c26363d33696" kindref="member">lcdBuffers</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pointer<sp/>to<sp/>the<sp/>array</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>lcd<sp/>buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="struct_l_c_d___object_1aaedc411a324d3ada993422793871a919" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_l_c_d___object_1aaedc411a324d3ada993422793871a919" kindref="member">nBuffers</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>buffers<sp/>availible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal">}<sp/><ref refid="_l_c_d_dogm1286_8h_1aad7cfd1bc0b0593efef10fb73efdf148" kindref="member">LCD_Object</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="struct_l_c_d___h_w_attrs" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_l_c_d___h_w_attrs" kindref="compound">LCD_HWAttrs</ref></highlight></codeline>
<codeline lineno="446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="448" refid="struct_l_c_d___h_w_attrs_1a04de8f9bfd92ed872bbd447177eba7a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_l_c_d___command" kindref="compound">LCD_Command</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_l_c_d___h_w_attrs_1a04de8f9bfd92ed872bbd447177eba7a1" kindref="member">LCD_initCmd</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>LCD<sp/>mode<sp/>pin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450" refid="struct_l_c_d___h_w_attrs_1af2b2c62d70137e4f8727136001e69718" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_l_c_d___h_w_attrs_1af2b2c62d70137e4f8727136001e69718" kindref="member">lcdModePin</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>LCD<sp/>reset<sp/>pin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452" refid="struct_l_c_d___h_w_attrs_1a5a9db2fc62d4c34511507e5843ff82a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_l_c_d___h_w_attrs_1a5a9db2fc62d4c34511507e5843ff82a1" kindref="member">lcdResetPin</ref>;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>LCD<sp/>CSn<sp/>pin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="struct_l_c_d___h_w_attrs_1af9926a7b6972357506299ff4893a5ffc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_l_c_d___h_w_attrs_1af9926a7b6972357506299ff4893a5ffc" kindref="member">lcdCsnPin</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Logical<sp/>peripheral<sp/>number<sp/>indexed</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>into<sp/>the<sp/>SPI_config<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457" refid="struct_l_c_d___h_w_attrs_1aad817df3726cc746fd22075f4510e9d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_l_c_d___h_w_attrs_1aad817df3726cc746fd22075f4510e9d6" kindref="member">spiIndex</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal">}<sp/><ref refid="_l_c_d_dogm1286_8h_1ac52079af6c7a6e8db90b350f5267e590" kindref="member">LCD_HWAttrs</ref>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="struct_l_c_d___config" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_l_c_d___config" kindref="compound">LCD_Config</ref></highlight></codeline>
<codeline lineno="467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="469" refid="struct_l_c_d___config_1a264b39a3788c4e64089320afa5ad33fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_l_c_d___object" kindref="compound">LCD_Object</ref><sp/>*<ref refid="struct_l_c_d___config_1a264b39a3788c4e64089320afa5ad33fc" kindref="member">object</ref>;</highlight></codeline>
<codeline lineno="471" refid="struct_l_c_d___config_1a76942612562659fe3b3254b24c66f2b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_l_c_d___h_w_attrs" kindref="compound">LCD_HWAttrs</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_l_c_d___config_1a76942612562659fe3b3254b24c66f2b9" kindref="member">hwAttrs</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}<sp/><ref refid="_l_c_d_dogm1286_8h_1a4cefc793530eae238dcce72c9335319b" kindref="member">LCD_Config</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="_l_c_d_dogm1286_8h_1a411050fdcc6700760de47f49d470ec2a" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_l_c_d___command" kindref="compound">LCD_Command</ref><sp/><ref refid="_l_c_d_dogm1286_8h_1a411050fdcc6700760de47f49d470ec2a" kindref="member">LCD_initCmd</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>0x40,<sp/></highlight><highlight class="comment">/*Display<sp/>start<sp/>line<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>0xA1,<sp/></highlight><highlight class="comment">/*ADC<sp/>reverse,<sp/>6<sp/>oclock<sp/>viewing<sp/>direction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>0xC0,<sp/></highlight><highlight class="comment">/*Normal<sp/>COM0...COM63<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>0xA6,<sp/></highlight><highlight class="comment">/*Display<sp/>normal,<sp/>not<sp/>mirrored<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>0xA2,<sp/></highlight><highlight class="comment">/*Set<sp/>Bias<sp/>1/9<sp/>(Duty<sp/>1/65)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>0x2F,<sp/></highlight><highlight class="comment">/*Booster,<sp/>Regulator<sp/>and<sp/>Follower<sp/>On<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>0xF8,<sp/></highlight><highlight class="comment">/*Set<sp/>internal<sp/>Booster<sp/>to<sp/>4x<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>0x27,<sp/></highlight><highlight class="comment">/*Contrast<sp/>set<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>0x81,<sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>0x16,<sp/></highlight><highlight class="comment">/*<sp/>&lt;-<sp/>use<sp/>value<sp/>from<sp/>LCD-MODULE<sp/>.doc<sp/>guide*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>for<sp/>better<sp/>contrast<sp/>(not<sp/>0x10)<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>0xAC,<sp/></highlight><highlight class="comment">/*No<sp/>indicator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00,<sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>0xAF,<sp/></highlight><highlight class="comment">/*Display<sp/>on<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>0xB0,<sp/></highlight><highlight class="comment">/*Set<sp/>Page<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>0x10,<sp/></highlight><highlight class="comment">/*High-Nibble<sp/>of<sp/>column<sp/>address<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>0x00<sp/><sp/></highlight><highlight class="comment">/*Low-Nibble<sp/>of<sp/>column<sp/>address<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal">};</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a9a6a62dcb23c554201420e7e555e6ecc" kindref="member">LCD_close</ref>(LCD_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a301a0b73016a44e015dbd374c08243d4" kindref="member">LCD_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>LCD_Handle<sp/><ref refid="_l_c_d_dogm1286_8h_1a7eda62cc528319af943746da6b5d7688" kindref="member">LCD_open</ref>(<ref refid="struct_l_c_d___buffer" kindref="compound">LCD_Buffer</ref><sp/>*buffers,<sp/>uint8_t<sp/>nBuffers,<sp/><ref refid="struct_l_c_d___params" kindref="compound">LCD_Params</ref><sp/>*<ref refid="_driver___init_8h_1af93f10d4f7393a01dff58c92f91d8cbc" kindref="member">params</ref>);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a65cc6910ac18d5d823205870acaf3dc3" kindref="member">LCD_Params_init</ref>(<ref refid="struct_l_c_d___params" kindref="compound">LCD_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a1208372099f0929bbbd1a5ec8621afce" kindref="member">LCD_writeLine</ref>(LCD_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uiValue,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucFormat,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucLine);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a6974d1de55526b98c6af02c90fd34185" kindref="member">LCD_update</ref>(LCD_Handle<sp/>handle,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1abd9b38254fab63ff90f3b4b93d4c8d8b" kindref="member">LCD_updatePart</ref>(LCD_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucXFrom,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucXTo,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD_Page<sp/>iPageFrom,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD_Page<sp/>iPageTo);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a3f274bf5496eaf924a2eda563b753d1b" kindref="member">LCD_bufferClear</ref>(LCD_Handle<sp/>handle,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a0f9a680f8ddc7a8c3bee766530246fcb" kindref="member">LCD_bufferClearPage</ref>(LCD_Handle<sp/>handle,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,<sp/>LCD_Page<sp/>iPage);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a13d5b0ec129280f820b07501cafd9247" kindref="member">LCD_bufferClearPart</ref>(LCD_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucXFrom,</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucXTo,</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD_Page<sp/>iPageFrom,</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD_Page<sp/>iPageTo);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1af2908b510d4b4ae4ab1fc1a1620d66b0" kindref="member">LCD_bufferInvert</ref>(LCD_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucXFrom,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucYFrom,</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucXTo,</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucYTo);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a513135f9dc91ff5fbd6175e0c3c392ed" kindref="member">LCD_bufferInvertPage</ref>(LCD_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucXFrom,</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucXTo,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD_Page<sp/>iPage);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a6f1ed502ab103ba04643798985dbcb11" kindref="member">LCD_bufferPrintString</ref>(LCD_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pcStr,</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucX,</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD_Page<sp/>iPage);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a91b19df1b66a71acbe38ec9dcd76d5c1" kindref="member">LCD_bufferPrintStringAligned</ref>(LCD_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pcStr,</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD_Align<sp/>iAlignment,</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD_Page<sp/>iPage);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1ae67a1e76c36a173a26a1f617ed7cb86e" kindref="member">LCD_bufferPrintInt</ref>(LCD_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i32Number,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucX,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD_Page<sp/>iPage);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1ae446df10e9b11284d958350bafb01956" kindref="member">LCD_bufferPrintIntAligned</ref>(LCD_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i32Number,</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD_Align<sp/>iAlignment,</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD_Page<sp/>iPage);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a3e57bb5655ffd5a694f251fcbeccc610" kindref="member">LCD_bufferPrintFloat</ref>(LCD_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fNumber,</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucDecimals,</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucX,</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD_Page<sp/>iPage);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a5342a001698e39fe6443cbcadf61e3f7" kindref="member">LCD_bufferPrintFloatAligned</ref>(LCD_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fNumber,</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucDecimals,</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD_Align<sp/>iAlignment,</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCD_Page<sp/>iPage);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1ae5fcaac1c5d5ce2fafecf38c8c78bb15" kindref="member">LCD_bufferSetLine</ref>(LCD_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucXFrom,</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucYFrom,</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucXTo,</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucYTo);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a5520daaaedbda09ccb4e1f804cb6387f" kindref="member">LCD_bufferClearLine</ref>(LCD_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucXFrom,</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucYFrom,</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucXTo,</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucYTo);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1abac67849744509fc2ace41db2eda90e1" kindref="member">LCD_bufferSetHLine</ref>(LCD_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucXFrom,</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucXTo,</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucY);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a33d49a7d0a49f12bf8ec12288404eb82" kindref="member">LCD_bufferClearHLine</ref>(LCD_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucXFrom,</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucXTo,</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucY);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a6cd9439691ab890bdc12cb61739c71c1" kindref="member">LCD_bufferSetVLine</ref>(LCD_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucX,</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucYFrom,</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucYTo);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1af099bb3569888e86f758958d814bb58f" kindref="member">LCD_bufferClearVLine</ref>(LCD_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucX,</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucYFrom,</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucYTo);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1ad9460c9ec6519a340e36d26d365bbed5" kindref="member">LCD_bufferHArrow</ref>(LCD_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucXFrom,</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucXTo,</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucY);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a40b3e9e6a7086787047a174815dfeb70" kindref="member">LCD_bufferVArrow</ref>(LCD_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucX,</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucYFrom,</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucYTo);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1a028108d7554d62733d00295fd150a2a6" kindref="member">LCD_bufferSetPx</ref>(LCD_Handle<sp/>handle,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucX,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucY);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1aa99fc0e617619d6f7b9befd56ffac26c" kindref="member">LCD_bufferClearPx</ref>(LCD_Handle<sp/>handle,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufIndex,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucX,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucY);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1afa33971216c7767eb3f3790615fa9a31" kindref="member">LCD_bufferCopy</ref>(LCD_Handle<sp/>handle,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fromBufIndex,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>toBufIndex);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_dogm1286_8h_1ac159f265608d80bd4baff4c3a4d30959" kindref="member">LCD_setContrast</ref>(LCD_Handle<sp/>handle,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ucContrast);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_lcd_LCDDogm1286__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="source/ti/display/lcd/LCDDogm1286.h"/>
  </compounddef>
</doxygen>
